#include <signal.h>
#include <pthread.h>
#include <stdio.h>
#include <math.h>

#include "Cmdline.h"
#include "Monitor.h"
#include "Blas.h"
#include "Type.h"
#include "ns_sys.h"
#include "ns_mesh.h"
#include "mkS.h"
#include "ns_config_lapack.h"
#include "ns_constantes.h"
ns_mesh * mesh;
#define DG_CONSERVATIVE_WEAK_FORM 	NO

#define DGERR_MEMORY  2
#define DGERR_USER    3
struct DG
{
  typedef enum enum_DG
  {
    
    IA_lc=0,
    IA_lc_elm=1,
    IA_lc_face=2,
    IA_lc_elm_a=3,
    IA_lc_u=4,
    IA_lc_elm_u0=5,
    IA_lc_elm_u1=6,
    I_nTot=11,
    I_nTotElm=12,
    I_nTotFace=13,
    RA_lc=14,
    I_lc_len=16,
    RA_bmat=17,
    RA_bmatx=18,
    I_bmat_n=19,
    I_bmat_m=20,
    I_bmat_len=21,
    ERR=22,
    RA_EVAL_TETA_U=23,

    I_QFACE_N=28,
    I_QELM_N=29,

    I_TRIAL_FAMILY=30,
    I_TRIAL_DEGREE=31,
    I_TRIAL_NBASIS=32,

    
    I_TEST_FAMILY=33,
    I_TEST_DEGREE=34,
    I_TEST_NBASIS=35,
    
    I_TETA_FAMILY=36,
    I_TETA_DEGREE=37,
    I_TETA_NBASIS=38,
    
    I_TETA_U_FAMILY=39,
    I_TETA_U_DEGREE=40,
    I_TETA_U_NBASIS=41,
    
    I_TETA_A_FAMILY=42,
    I_TETA_A_DEGREE=43,
    I_TETA_A_NBASIS=44,

    I_n=64

  } info_t;
  
};


#define DG_r_lc        			0
#define DG_r_n         			1

#define DG_ires_err 			0 
#define DG_ires_convergence 		1
#define DG_ires_iter_gauss_seidel 	2
#define DG_ires_required_iw_n 		3
#define DG_ires_required_rw_n 		4
#define DG_ires_n 			5

#define DG_rres_max 			0 
#define DG_rres_nrmL2 			1 
#define DG_rres_nrmLInf			2 
#define DG_rres_areaL1 			3 
#define DG_rres_jumpL2 			4 
#define DG_rres_johnson			5 
#define DG_rres_n 			6

// #include "DgTransport.h"


void dg_print_sol(I N,cst_pR sol,const char * name_,...)
{

  { char ctmp[512];
    { char ctmp2[512];
      va_list args;
      va_start (args,name_);
      vsprintf(ctmp2,name_,args);
      va_end(args);
      sprintf(ctmp,"%s.bb",ctmp2); }   
    FILE * fil = fopen(ctmp,"w");
    fprintf(fil,"2 1 " ifmt " 2\n",N);
    { I i;
      for (i=0;i<N;++i)
	{
	  fprintf(fil,"" rfmt "\n",sol[i]);
	} } 
    fclose(fil); }
}

void dg_print_mesh(const ns_mesh*s_,const char * name_,...)
{
  const I numNodes = ns_mesh_get_numNodes(s_);
  { char ctmp[512];
    { char ctmp2[512];
      va_list args;
      va_start (args,name_);
      vsprintf(ctmp2,name_,args);
      va_end(args);
      sprintf(ctmp,"%s.mesh",ctmp2); }    
    I cncelm[3];
    FILE * fil = fopen(ctmp,"w");
    fprintf(fil,"MeshVersionFormatted\n1\nDimension\n2\nVertices\n" ifmt "\n",s_->nelm*3);
    { I i;
      for (i=0;i<s_->nelm;++i)
	{
	  ns_mesh_get_cellToNodes(s_,&i,cncelm);
	  {I j;for (j=0;j<3;++j){ fprintf(fil,"" rfmt " " rfmt " " ifmt "\n",s_->coo[cncelm[j]*2+0],s_->coo[cncelm[j]*2+1],s_->cod[cncelm[j]]); } }
	} } 

    fprintf(fil,"Triangles\n" ifmt "\n",s_->nelm); 
    { I i;
      for (i=0;i<s_->nelm;++i)
	{
	  fprintf(fil,"" ifmt " " ifmt " " ifmt " " ifmt "\n",i*3+1,i*3+2,i*3+3,((I)0));
	} } 
    fprintf(fil,"End\n");						
    fclose(fil); }  
}
struct vector_handle;
struct matrix_handle;

struct temp_gemv
{
  const R a;
  const matrix_handle&A;
  const vector_handle&b;
};


struct temp_scal
{
  const R a;
  const matrix_handle&A;
  inline temp_gemv operator * (const vector_handle&v_)
  {
    return {a,A, v_};
  };
};


struct matrix_handle
{
  pR  x{};
  I   n{};
  I   m{};
  I   ld{};
  matrix_handle();
  matrix_handle(I n_, I m_,pR  x_,I ld_);
  inline temp_gemv operator * (const vector_handle&v_);  
  inline temp_scal operator * (const R&v_);  
};


temp_scal operator * (const R&v_,const matrix_handle &m)
{
  return {v_,m};
};

matrix_handle::matrix_handle(){};
matrix_handle::matrix_handle(I n_, I m_,pR  x_,I ld_) : x(x_), n(n_), m(m_), ld(ld_)
  {
  };

  inline temp_gemv matrix_handle::operator * (const vector_handle&v_)
  {
    return {1.0,*this, v_};
  };
  inline temp_scal matrix_handle::operator * (const R&v_)
  {
    return {v_,*this};
  };
  

struct vector_handle
{
  pR  x{};
  I   n{};
  I   ld{};
  vector_handle(){};
  vector_handle(I n_, pR  x_,I ld_)
    : x(x_),n(n_),ld(ld_)
  {};
  inline vector_handle& operator=(const temp_gemv&temp)
  {
    const R r0 = 0.0;
    Blas_dgemv("N",
	       &temp.A.n,
	       &temp.A.m,
	       &temp.a,
	       temp.A.x,
	       &temp.A.ld,
	       temp.b.x,
	       &temp.b.ld,
	       &r0,
	       x,
	       &ld);

  };
};

void vector_handle_def(struct vector_handle * h,I n_, pR  x_,I ld_)
{
  h->n  = n_;
  h->x  = x_;
  h->ld = ld_;
};
#if 0
struct matrix_handle
{
  pR  x{};
  I   n{};
  I   m{};
  I   ld{};
  matrix_handle(){};
  matrix_handle(I n_, I m_,pR  x_,I ld_) : x(x_), n(n_), m(m_), ld(ld_)
  {
  };

  inline temp_gemv operator * (const vector_handle&v_)
  {
    return {*this, v_};
  };
  
};
#endif
void matrix_handle_def(struct matrix_handle * h,I n_, I m_,pR  x_,I ld_)
{
  h->n  = n_;
  h->m  = m_;
  h->x  = x_;
  h->ld = ld_;
};

void matrix_handle_gemv_low(const struct matrix_handle * h,const char * trans,cst_pR a,cst_pR x,cst_pI xoff,cst_pR ry,pR y,cst_pI yoff)
{

  Blas_dgemv(trans,
	     &h->n,
	     &h->m,
	     a,
	     h->x,
	     &h->ld,
	     x,
	     xoff,
	     ry,
	     y,
	     yoff);

}

void matrix_handle_gemv(const struct matrix_handle * h,const char * trans,cst_pR a,const struct vector_handle * x,cst_pR ry,struct vector_handle * y)
{
  matrix_handle_gemv_low(h,trans,a,x->x,&x->ld,ry,y->x,&y->ld);
}


void matrix_handle_gemm(const struct matrix_handle * h,const char * transA,const char * transB,cst_pR a,const struct matrix_handle * x,cst_pR ry,struct matrix_handle * y)
{
  I s = transA[0]=='N' ? h->m : h->n;
  Blas_dgemm(transA,transB,&y->n,&y->m,&s,a,h->x,&h->ld,x->x,&x->ld,ry,y->x,&y->ld);

}

void matrix_handle_gesv(const struct matrix_handle * h,struct vector_handle * rhs,pI lcperm)
{
  I n1=1;
  I info_lapack;
  dgesv(&h->n,
	&n1,
	h->x,
	&h->ld,
	lcperm,
	rhs->x,
	&h->n,
	&info_lapack);
}



static const double tria_L1_L1[9] = {
((double)8.3333333333333329E-2)
,((double)4.1666666666666664E-2)
,((double)4.1666666666666664E-2)
,((double)4.1666666666666664E-2)
,((double)8.3333333333333329E-2)
,((double)4.1666666666666664E-2)

,((double)4.1666666666666664E-2)
,((double)4.1666666666666664E-2)
,((double)8.3333333333333329E-2)

};

static const double tria_L2_L2[36] = {
  ((double)1.6666666666666666E-2)
  ,((double)-2.7777777777777779E-3)
  ,((double)-2.7777777777777779E-3)
  ,((double)0.)
  ,((double)-1.1111111111111112E-2)
  ,((double)0.)
,((double)-2.7777777777777779E-3)
,((double)1.6666666666666666E-2)
,((double)-2.7777777777777779E-3)
,((double)0.)
,((double)0.)
,((double)-1.1111111111111112E-2)

,((double)-2.7777777777777779E-3)
,((double)-2.7777777777777779E-3)
,((double)1.6666666666666666E-2)
,((double)-1.1111111111111112E-2)
,((double)0.)
,((double)0.)

,((double)0.)
,((double)0.)
,((double)-1.1111111111111112E-2)
,((double)8.8888888888888892E-2)
,((double)4.4444444444444446E-2)
,((double)4.4444444444444446E-2)

,((double)-1.1111111111111112E-2)
,((double)0.)
,((double)0.)
,((double)4.4444444444444446E-2)
,((double)8.8888888888888892E-2)
,((double)4.4444444444444446E-2)

,((double)0.)
,((double)-1.1111111111111112E-2)
,((double)0.)
,((double)4.4444444444444446E-2)
,((double)4.4444444444444446E-2)
,((double)8.8888888888888892E-2)

};

static const double tria_L2p_L2p[49] = {
((double)0.2388888888888889)
,((double)0.10833333333333334)
,((double)0.10833333333333334)
,((double)-0.12222222222222222)
,((double)0.12222222222222222)
,((double)-0.12222222222222222)
,((double)0.16071428571428573)
,((double)0.10833333333333334)
,((double)8.3333333333333329E-2)
,((double)4.1666666666666664E-2)
,((double)-6.6666666666666666E-2)
,((double)6.6666666666666666E-2)
,((double)-6.6666666666666666E-2)
,((double)7.4999999999999997E-2)

,((double)0.10833333333333334)
,((double)4.1666666666666664E-2)
,((double)8.3333333333333329E-2)
,((double)-6.6666666666666666E-2)
,((double)6.6666666666666666E-2)
,((double)-6.6666666666666666E-2)
,((double)7.4999999999999997E-2)

,((double)-0.12222222222222222)
,((double)-6.6666666666666666E-2)
,((double)-6.6666666666666666E-2)
,((double)8.8888888888888892E-2)
,((double)-8.8888888888888892E-2)
,((double)8.8888888888888892E-2)
,((double)-8.5714285714285715E-2)

,((double)0.12222222222222222)
,((double)6.6666666666666666E-2)
,((double)6.6666666666666666E-2)
,((double)-8.8888888888888892E-2)
,((double)8.8888888888888892E-2)
,((double)-8.8888888888888892E-2)
,((double)8.5714285714285715E-2)

,((double)-0.12222222222222222)
,((double)-6.6666666666666666E-2)
,((double)-6.6666666666666666E-2)
,((double)8.8888888888888892E-2)
,((double)-8.8888888888888892E-2)
,((double)8.8888888888888892E-2)
,((double)-8.5714285714285715E-2)

,((double)0.16071428571428573)
,((double)7.4999999999999997E-2)
,((double)7.4999999999999997E-2)
,((double)-8.5714285714285715E-2)
,((double)8.5714285714285715E-2)
,((double)-8.5714285714285715E-2)
,((double)0.14464285714285716)

};

static const double tria_L3_L3[100] = {
((double)5.6547619047619046E-3)
,((double)8.1845238095238097E-4)
,((double)8.1845238095238097E-4)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)2.0089285714285712E-3)
,((double)2.0089285714285712E-3)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)2.6785714285714286E-3)
,((double)8.1845238095238097E-4)
,((double)5.6547619047619046E-3)
,((double)8.1845238095238097E-4)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)2.0089285714285712E-3)
,((double)2.0089285714285712E-3)
,((double)2.6785714285714286E-3)

,((double)8.1845238095238097E-4)
,((double)8.1845238095238097E-4)
,((double)5.6547619047619046E-3)
,((double)2.0089285714285712E-3)
,((double)2.0089285714285712E-3)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)2.6785714285714286E-3)

,((double)1.3392857142857143E-3)
,((double)0.)
,((double)2.0089285714285712E-3)
,((double)4.0178571428571432E-2)
,((double)-1.40625E-2)
,((double)-1.0044642857142858E-2)
,((double)-4.0178571428571425E-3)
,((double)-1.0044642857142858E-2)
,((double)2.0089285714285716E-2)
,((double)1.2053571428571429E-2)

,((double)0.)
,((double)1.3392857142857143E-3)
,((double)2.0089285714285712E-3)
,((double)-1.40625E-2)
,((double)4.0178571428571432E-2)
,((double)2.0089285714285716E-2)
,((double)-1.0044642857142858E-2)
,((double)-4.0178571428571425E-3)
,((double)-1.0044642857142858E-2)
,((double)1.2053571428571429E-2)

,((double)2.0089285714285712E-3)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)-1.0044642857142858E-2)
,((double)2.0089285714285716E-2)
,((double)4.0178571428571432E-2)
,((double)-1.40625E-2)
,((double)-1.0044642857142858E-2)
,((double)-4.0178571428571425E-3)
,((double)1.2053571428571429E-2)

,((double)2.0089285714285712E-3)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)-4.0178571428571425E-3)
,((double)-1.0044642857142858E-2)
,((double)-1.40625E-2)
,((double)4.0178571428571432E-2)
,((double)2.0089285714285716E-2)
,((double)-1.0044642857142858E-2)
,((double)1.2053571428571429E-2)

,((double)0.)
,((double)2.0089285714285712E-3)
,((double)1.3392857142857143E-3)
,((double)-1.0044642857142858E-2)
,((double)-4.0178571428571425E-3)
,((double)-1.0044642857142858E-2)
,((double)2.0089285714285716E-2)
,((double)4.0178571428571432E-2)
,((double)-1.40625E-2)
,((double)1.2053571428571429E-2)

,((double)1.3392857142857143E-3)
,((double)2.0089285714285712E-3)
,((double)0.)
,((double)2.0089285714285716E-2)
,((double)-1.0044642857142858E-2)
,((double)-4.0178571428571425E-3)
,((double)-1.0044642857142858E-2)
,((double)-1.40625E-2)
,((double)4.0178571428571432E-2)
,((double)1.2053571428571429E-2)

,((double)2.6785714285714286E-3)
,((double)2.6785714285714286E-3)
,((double)2.6785714285714286E-3)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)0.14464285714285716)

};

static const double tria_L1_L1_L1[27] = {
((double)5.0000000000000003E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)8.3333333333333332E-3)
,((double)1.6666666666666666E-2)
,((double)8.3333333333333332E-3)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)8.3333333333333332E-3)
,((double)1.6666666666666666E-2)
,((double)5.0000000000000003E-2)
,((double)1.6666666666666666E-2)
,((double)8.3333333333333332E-3)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)

,((double)1.6666666666666666E-2)
,((double)8.3333333333333332E-3)
,((double)1.6666666666666666E-2)
,((double)8.3333333333333332E-3)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)5.0000000000000003E-2)

};

static const double tria_L2_L2_L2[216] = {
((double)7.1428571428571426E-3)
,((double)-7.9365079365079365E-4)
,((double)-7.9365079365079365E-4)
,((double)4.7619047619047623E-3)
,((double)1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)-7.9365079365079365E-4)
,((double)-7.9365079365079365E-4)
,((double)3.9682539682539683E-4)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)0.)
,((double)-7.9365079365079365E-4)
,((double)3.9682539682539683E-4)
,((double)-7.9365079365079365E-4)
,((double)0.)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)1.5873015873015873E-3)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)-6.3492063492063492E-3)
,((double)-3.1746031746031746E-3)
,((double)4.7619047619047623E-3)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)-7.9365079365079365E-4)
,((double)-7.9365079365079365E-4)
,((double)3.9682539682539683E-4)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)0.)
,((double)-7.9365079365079365E-4)
,((double)7.1428571428571426E-3)
,((double)-7.9365079365079365E-4)
,((double)4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)1.5873015873015873E-3)
,((double)3.9682539682539683E-4)
,((double)-7.9365079365079365E-4)
,((double)-7.9365079365079365E-4)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)1.5873015873015873E-3)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)-6.3492063492063492E-3)

,((double)-7.9365079365079365E-4)
,((double)3.9682539682539683E-4)
,((double)-7.9365079365079365E-4)
,((double)0.)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)3.9682539682539683E-4)
,((double)-7.9365079365079365E-4)
,((double)-7.9365079365079365E-4)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)-7.9365079365079365E-4)
,((double)-7.9365079365079365E-4)
,((double)7.1428571428571426E-3)
,((double)1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)0.)
,((double)0.)
,((double)1.5873015873015873E-3)
,((double)-6.3492063492063492E-3)
,((double)-3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)0.)

,((double)4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)1.5873015873015873E-3)
,((double)-6.3492063492063492E-3)
,((double)-3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)-6.3492063492063492E-3)
,((double)5.7142857142857141E-2)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)

,((double)1.5873015873015873E-3)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)-6.3492063492063492E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)-6.3492063492063492E-3)
,((double)0.)
,((double)0.)
,((double)1.9047619047619049E-2)
,((double)5.7142857142857141E-2)
,((double)1.9047619047619049E-2)
,((double)-3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)

,((double)4.7619047619047623E-3)
,((double)0.)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)1.5873015873015873E-3)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)-6.3492063492063492E-3)
,((double)-1.5873015873015873E-3)
,((double)0.)
,((double)4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)-3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)0.)
,((double)-6.3492063492063492E-3)
,((double)0.)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)5.7142857142857141E-2)

};

static const double tria_L2p_L2p_L2p[343] = {
((double)0.17857142857142858)
,((double)7.6984126984126988E-2)
,((double)7.6984126984126988E-2)
,((double)-9.3650793650793651E-2)
,((double)9.3650793650793651E-2)
,((double)-9.3650793650793651E-2)
,((double)0.11785714285714285)
,((double)7.6984126984126988E-2)
,((double)5.0000000000000003E-2)
,((double)3.0555555555555555E-2)
,((double)-4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)5.3571428571428568E-2)
,((double)7.6984126984126988E-2)
,((double)3.0555555555555555E-2)
,((double)5.0000000000000003E-2)
,((double)-4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)5.3571428571428568E-2)
,((double)-9.3650793650793651E-2)
,((double)-4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)6.9841269841269843E-2)
,((double)-6.9841269841269843E-2)
,((double)6.9841269841269843E-2)
,((double)-6.4285714285714279E-2)
,((double)9.3650793650793651E-2)
,((double)4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-6.9841269841269843E-2)
,((double)6.9841269841269843E-2)
,((double)-6.9841269841269843E-2)
,((double)6.4285714285714279E-2)
,((double)-9.3650793650793651E-2)
,((double)-4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)6.9841269841269843E-2)
,((double)-6.9841269841269843E-2)
,((double)6.9841269841269843E-2)
,((double)-6.4285714285714279E-2)
,((double)0.11785714285714285)
,((double)5.3571428571428568E-2)
,((double)5.3571428571428568E-2)
,((double)-6.4285714285714279E-2)
,((double)6.4285714285714279E-2)
,((double)-6.4285714285714279E-2)
,((double)0.10607142857142857)
,((double)7.6984126984126988E-2)
,((double)5.0000000000000003E-2)
,((double)3.0555555555555555E-2)
,((double)-4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)5.3571428571428568E-2)
,((double)5.0000000000000003E-2)
,((double)5.0000000000000003E-2)
,((double)1.6666666666666666E-2)
,((double)-3.3333333333333333E-2)
,((double)3.3333333333333333E-2)
,((double)-3.3333333333333333E-2)
,((double)3.214285714285714E-2)
,((double)3.0555555555555555E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)-2.2222222222222223E-2)
,((double)2.2222222222222223E-2)
,((double)-2.2222222222222223E-2)
,((double)2.1428571428571429E-2)
,((double)-4.9206349206349205E-2)
,((double)-3.3333333333333333E-2)
,((double)-2.2222222222222223E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)4.9206349206349205E-2)
,((double)3.3333333333333333E-2)
,((double)2.2222222222222223E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.214285714285714E-2)
,((double)-4.9206349206349205E-2)
,((double)-3.3333333333333333E-2)
,((double)-2.2222222222222223E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)5.3571428571428568E-2)
,((double)3.214285714285714E-2)
,((double)2.1428571428571429E-2)
,((double)-3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.8214285714285716E-2)

,((double)7.6984126984126988E-2)
,((double)3.0555555555555555E-2)
,((double)5.0000000000000003E-2)
,((double)-4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)5.3571428571428568E-2)
,((double)3.0555555555555555E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)-2.2222222222222223E-2)
,((double)2.2222222222222223E-2)
,((double)-2.2222222222222223E-2)
,((double)2.1428571428571429E-2)
,((double)5.0000000000000003E-2)
,((double)1.6666666666666666E-2)
,((double)5.0000000000000003E-2)
,((double)-3.3333333333333333E-2)
,((double)3.3333333333333333E-2)
,((double)-3.3333333333333333E-2)
,((double)3.214285714285714E-2)
,((double)-4.9206349206349205E-2)
,((double)-2.2222222222222223E-2)
,((double)-3.3333333333333333E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)4.9206349206349205E-2)
,((double)2.2222222222222223E-2)
,((double)3.3333333333333333E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.214285714285714E-2)
,((double)-4.9206349206349205E-2)
,((double)-2.2222222222222223E-2)
,((double)-3.3333333333333333E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)5.3571428571428568E-2)
,((double)2.1428571428571429E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.8214285714285716E-2)

,((double)-9.3650793650793651E-2)
,((double)-4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)6.9841269841269843E-2)
,((double)-6.9841269841269843E-2)
,((double)6.9841269841269843E-2)
,((double)-6.4285714285714279E-2)
,((double)-4.9206349206349205E-2)
,((double)-3.3333333333333333E-2)
,((double)-2.2222222222222223E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)-4.9206349206349205E-2)
,((double)-2.2222222222222223E-2)
,((double)-3.3333333333333333E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)6.9841269841269843E-2)
,((double)3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)4.2857142857142858E-2)
,((double)-6.9841269841269843E-2)
,((double)-3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-4.2857142857142858E-2)
,((double)6.9841269841269843E-2)
,((double)3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)4.2857142857142858E-2)
,((double)-6.4285714285714279E-2)
,((double)-3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-5.7857142857142857E-2)

,((double)9.3650793650793651E-2)
,((double)4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-6.9841269841269843E-2)
,((double)6.9841269841269843E-2)
,((double)-6.9841269841269843E-2)
,((double)6.4285714285714279E-2)
,((double)4.9206349206349205E-2)
,((double)3.3333333333333333E-2)
,((double)2.2222222222222223E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.214285714285714E-2)
,((double)4.9206349206349205E-2)
,((double)2.2222222222222223E-2)
,((double)3.3333333333333333E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.214285714285714E-2)
,((double)-6.9841269841269843E-2)
,((double)-3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-4.2857142857142858E-2)
,((double)6.9841269841269843E-2)
,((double)3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)4.2857142857142858E-2)
,((double)-6.9841269841269843E-2)
,((double)-3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-4.2857142857142858E-2)
,((double)6.4285714285714279E-2)
,((double)3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)5.7857142857142857E-2)

,((double)-9.3650793650793651E-2)
,((double)-4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)6.9841269841269843E-2)
,((double)-6.9841269841269843E-2)
,((double)6.9841269841269843E-2)
,((double)-6.4285714285714279E-2)
,((double)-4.9206349206349205E-2)
,((double)-3.3333333333333333E-2)
,((double)-2.2222222222222223E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)-4.9206349206349205E-2)
,((double)-2.2222222222222223E-2)
,((double)-3.3333333333333333E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)6.9841269841269843E-2)
,((double)3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)4.2857142857142858E-2)
,((double)-6.9841269841269843E-2)
,((double)-3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-4.2857142857142858E-2)
,((double)6.9841269841269843E-2)
,((double)3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)4.2857142857142858E-2)
,((double)-6.4285714285714279E-2)
,((double)-3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-5.7857142857142857E-2)

,((double)0.11785714285714285)
,((double)5.3571428571428568E-2)
,((double)5.3571428571428568E-2)
,((double)-6.4285714285714279E-2)
,((double)6.4285714285714279E-2)
,((double)-6.4285714285714279E-2)
,((double)0.10607142857142857)
,((double)5.3571428571428568E-2)
,((double)3.214285714285714E-2)
,((double)2.1428571428571429E-2)
,((double)-3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.8214285714285716E-2)
,((double)5.3571428571428568E-2)
,((double)2.1428571428571429E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.8214285714285716E-2)
,((double)-6.4285714285714279E-2)
,((double)-3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-5.7857142857142857E-2)
,((double)6.4285714285714279E-2)
,((double)3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)5.7857142857142857E-2)
,((double)-6.4285714285714279E-2)
,((double)-3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-5.7857142857142857E-2)
,((double)0.10607142857142857)
,((double)4.8214285714285716E-2)
,((double)4.8214285714285716E-2)
,((double)-5.7857142857142857E-2)
,((double)5.7857142857142857E-2)
,((double)-5.7857142857142857E-2)
,((double)0.10650974025974026)

};

static const double tria_L3_L3_L3[1000] = {
((double)2.5162337662337662E-3)
,((double)1.8939393939393939E-4)
,((double)1.8939393939393939E-4)
,((double)1.5827922077922079E-3)
,((double)-6.0876623376623375E-4)
,((double)4.0584415584415584E-5)
,((double)4.0584415584415584E-5)
,((double)-6.0876623376623375E-4)
,((double)1.5827922077922079E-3)
,((double)7.3051948051948055E-4)
,((double)1.8939393939393939E-4)
,((double)1.8939393939393939E-4)
,((double)5.4112554112554113E-5)
,((double)1.4813311688311687E-4)
,((double)1.4813311688311687E-4)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)-1.2175324675324675E-5)
,((double)1.8939393939393939E-4)
,((double)5.4112554112554113E-5)
,((double)1.8939393939393939E-4)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)1.4813311688311687E-4)
,((double)1.4813311688311687E-4)
,((double)-1.2175324675324675E-5)
,((double)1.5827922077922079E-3)
,((double)1.4813311688311687E-4)
,((double)6.4935064935064935E-5)
,((double)2.1915584415584414E-3)
,((double)-1.6436688311688311E-3)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-5.4788961038961036E-4)
,((double)1.0957792207792207E-3)
,((double)-1.0957792207792207E-3)
,((double)-6.0876623376623375E-4)
,((double)1.4813311688311687E-4)
,((double)-1.4204545454545455E-5)
,((double)-1.6436688311688311E-3)
,((double)1.3149350649350649E-3)
,((double)7.8530844155844158E-4)
,((double)-3.1047077922077924E-4)
,((double)2.1915584415584417E-4)
,((double)-5.4788961038961036E-4)
,((double)6.5746753246753243E-4)
,((double)4.0584415584415584E-5)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)-4.7483766233766234E-4)
,((double)7.8530844155844158E-4)
,((double)1.497564935064935E-3)
,((double)-5.8441558441558442E-4)
,((double)-3.1047077922077924E-4)
,((double)1.8262987012987013E-5)
,((double)9.8620129870129864E-4)
,((double)4.0584415584415584E-5)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)1.8262987012987013E-5)
,((double)-3.1047077922077924E-4)
,((double)-5.8441558441558442E-4)
,((double)1.497564935064935E-3)
,((double)7.8530844155844158E-4)
,((double)-4.7483766233766234E-4)
,((double)9.8620129870129864E-4)
,((double)-6.0876623376623375E-4)
,((double)-1.4204545454545455E-5)
,((double)1.4813311688311687E-4)
,((double)-5.4788961038961036E-4)
,((double)2.1915584415584417E-4)
,((double)-3.1047077922077924E-4)
,((double)7.8530844155844158E-4)
,((double)1.3149350649350649E-3)
,((double)-1.6436688311688311E-3)
,((double)6.5746753246753243E-4)
,((double)1.5827922077922079E-3)
,((double)6.4935064935064935E-5)
,((double)1.4813311688311687E-4)
,((double)1.0957792207792207E-3)
,((double)-5.4788961038961036E-4)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)-1.6436688311688311E-3)
,((double)2.1915584415584414E-3)
,((double)-1.0957792207792207E-3)
,((double)7.3051948051948055E-4)
,((double)-1.2175324675324675E-5)
,((double)-1.2175324675324675E-5)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)9.8620129870129864E-4)
,((double)9.8620129870129864E-4)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)8.7662337662337668E-4)
,((double)1.8939393939393939E-4)
,((double)1.8939393939393939E-4)
,((double)5.4112554112554113E-5)
,((double)1.4813311688311687E-4)
,((double)1.4813311688311687E-4)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)-1.2175324675324675E-5)
,((double)1.8939393939393939E-4)
,((double)2.5162337662337662E-3)
,((double)1.8939393939393939E-4)
,((double)-6.0876623376623375E-4)
,((double)1.5827922077922079E-3)
,((double)1.5827922077922079E-3)
,((double)-6.0876623376623375E-4)
,((double)4.0584415584415584E-5)
,((double)4.0584415584415584E-5)
,((double)7.3051948051948055E-4)
,((double)5.4112554112554113E-5)
,((double)1.8939393939393939E-4)
,((double)1.8939393939393939E-4)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)1.4813311688311687E-4)
,((double)1.4813311688311687E-4)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)-1.2175324675324675E-5)
,((double)1.4813311688311687E-4)
,((double)-6.0876623376623375E-4)
,((double)-1.4204545454545455E-5)
,((double)1.3149350649350649E-3)
,((double)-1.6436688311688311E-3)
,((double)-5.4788961038961036E-4)
,((double)2.1915584415584417E-4)
,((double)-3.1047077922077924E-4)
,((double)7.8530844155844158E-4)
,((double)6.5746753246753243E-4)
,((double)1.4813311688311687E-4)
,((double)1.5827922077922079E-3)
,((double)6.4935064935064935E-5)
,((double)-1.6436688311688311E-3)
,((double)2.1915584415584414E-3)
,((double)1.0957792207792207E-3)
,((double)-5.4788961038961036E-4)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)-1.0957792207792207E-3)
,((double)6.4935064935064935E-5)
,((double)1.5827922077922079E-3)
,((double)1.4813311688311687E-4)
,((double)-5.4788961038961036E-4)
,((double)1.0957792207792207E-3)
,((double)2.1915584415584414E-3)
,((double)-1.6436688311688311E-3)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-1.0957792207792207E-3)
,((double)-1.4204545454545455E-5)
,((double)-6.0876623376623375E-4)
,((double)1.4813311688311687E-4)
,((double)2.1915584415584417E-4)
,((double)-5.4788961038961036E-4)
,((double)-1.6436688311688311E-3)
,((double)1.3149350649350649E-3)
,((double)7.8530844155844158E-4)
,((double)-3.1047077922077924E-4)
,((double)6.5746753246753243E-4)
,((double)-1.4204545454545455E-5)
,((double)4.0584415584415584E-5)
,((double)6.4935064935064935E-5)
,((double)-3.1047077922077924E-4)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)7.8530844155844158E-4)
,((double)1.497564935064935E-3)
,((double)-5.8441558441558442E-4)
,((double)9.8620129870129864E-4)
,((double)6.4935064935064935E-5)
,((double)4.0584415584415584E-5)
,((double)-1.4204545454545455E-5)
,((double)7.8530844155844158E-4)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-3.1047077922077924E-4)
,((double)-5.8441558441558442E-4)
,((double)1.497564935064935E-3)
,((double)9.8620129870129864E-4)
,((double)-1.2175324675324675E-5)
,((double)7.3051948051948055E-4)
,((double)-1.2175324675324675E-5)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)9.8620129870129864E-4)
,((double)9.8620129870129864E-4)
,((double)8.7662337662337668E-4)

,((double)1.8939393939393939E-4)
,((double)5.4112554112554113E-5)
,((double)1.8939393939393939E-4)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)1.4813311688311687E-4)
,((double)1.4813311688311687E-4)
,((double)-1.2175324675324675E-5)
,((double)5.4112554112554113E-5)
,((double)1.8939393939393939E-4)
,((double)1.8939393939393939E-4)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)1.4813311688311687E-4)
,((double)1.4813311688311687E-4)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)-1.2175324675324675E-5)
,((double)1.8939393939393939E-4)
,((double)1.8939393939393939E-4)
,((double)2.5162337662337662E-3)
,((double)4.0584415584415584E-5)
,((double)4.0584415584415584E-5)
,((double)-6.0876623376623375E-4)
,((double)1.5827922077922079E-3)
,((double)1.5827922077922079E-3)
,((double)-6.0876623376623375E-4)
,((double)7.3051948051948055E-4)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)4.0584415584415584E-5)
,((double)1.497564935064935E-3)
,((double)-5.8441558441558442E-4)
,((double)-3.1047077922077924E-4)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)7.8530844155844158E-4)
,((double)9.8620129870129864E-4)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)4.0584415584415584E-5)
,((double)-5.8441558441558442E-4)
,((double)1.497564935064935E-3)
,((double)7.8530844155844158E-4)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-3.1047077922077924E-4)
,((double)9.8620129870129864E-4)
,((double)-1.4204545454545455E-5)
,((double)1.4813311688311687E-4)
,((double)-6.0876623376623375E-4)
,((double)-3.1047077922077924E-4)
,((double)7.8530844155844158E-4)
,((double)1.3149350649350649E-3)
,((double)-1.6436688311688311E-3)
,((double)-5.4788961038961036E-4)
,((double)2.1915584415584417E-4)
,((double)6.5746753246753243E-4)
,((double)6.4935064935064935E-5)
,((double)1.4813311688311687E-4)
,((double)1.5827922077922079E-3)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)-1.6436688311688311E-3)
,((double)2.1915584415584414E-3)
,((double)1.0957792207792207E-3)
,((double)-5.4788961038961036E-4)
,((double)-1.0957792207792207E-3)
,((double)1.4813311688311687E-4)
,((double)6.4935064935064935E-5)
,((double)1.5827922077922079E-3)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-5.4788961038961036E-4)
,((double)1.0957792207792207E-3)
,((double)2.1915584415584414E-3)
,((double)-1.6436688311688311E-3)
,((double)-1.0957792207792207E-3)
,((double)1.4813311688311687E-4)
,((double)-1.4204545454545455E-5)
,((double)-6.0876623376623375E-4)
,((double)7.8530844155844158E-4)
,((double)-3.1047077922077924E-4)
,((double)2.1915584415584417E-4)
,((double)-5.4788961038961036E-4)
,((double)-1.6436688311688311E-3)
,((double)1.3149350649350649E-3)
,((double)6.5746753246753243E-4)
,((double)-1.2175324675324675E-5)
,((double)-1.2175324675324675E-5)
,((double)7.3051948051948055E-4)
,((double)9.8620129870129864E-4)
,((double)9.8620129870129864E-4)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)8.7662337662337668E-4)

,((double)1.5827922077922079E-3)
,((double)1.4813311688311687E-4)
,((double)6.4935064935064935E-5)
,((double)2.1915584415584414E-3)
,((double)-1.6436688311688311E-3)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-5.4788961038961036E-4)
,((double)1.0957792207792207E-3)
,((double)-1.0957792207792207E-3)
,((double)1.4813311688311687E-4)
,((double)-6.0876623376623375E-4)
,((double)-1.4204545454545455E-5)
,((double)1.3149350649350649E-3)
,((double)-1.6436688311688311E-3)
,((double)-5.4788961038961036E-4)
,((double)2.1915584415584417E-4)
,((double)-3.1047077922077924E-4)
,((double)7.8530844155844158E-4)
,((double)6.5746753246753243E-4)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)4.0584415584415584E-5)
,((double)1.497564935064935E-3)
,((double)-5.8441558441558442E-4)
,((double)-3.1047077922077924E-4)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)7.8530844155844158E-4)
,((double)9.8620129870129864E-4)
,((double)2.1915584415584414E-3)
,((double)1.3149350649350649E-3)
,((double)1.497564935064935E-3)
,((double)2.2189529220779221E-2)
,((double)-1.4793019480519481E-3)
,((double)1.1505681818181819E-3)
,((double)-2.1367694805194807E-3)
,((double)-4.76663961038961E-3)
,((double)7.3965097402597406E-3)
,((double)1.2820616883116883E-2)
,((double)-1.6436688311688311E-3)
,((double)-1.6436688311688311E-3)
,((double)-5.8441558441558442E-4)
,((double)-1.4793019480519481E-3)
,((double)-1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)1.4793019480519481E-3)
,((double)1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)-4.9310064935064934E-3)
,((double)-4.7483766233766234E-4)
,((double)-5.4788961038961036E-4)
,((double)-3.1047077922077924E-4)
,((double)1.1505681818181819E-3)
,((double)-2.6298701298701297E-3)
,((double)-4.76663961038961E-3)
,((double)1.4793019480519481E-3)
,((double)6.5746753246753243E-4)
,((double)-3.2873376623376621E-4)
,((double)-4.2735389610389614E-3)
,((double)1.8262987012987013E-5)
,((double)2.1915584415584417E-4)
,((double)1.8262987012987013E-5)
,((double)-2.1367694805194807E-3)
,((double)1.4793019480519481E-3)
,((double)1.4793019480519481E-3)
,((double)-2.1367694805194807E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.3011363636363637E-3)
,((double)-5.4788961038961036E-4)
,((double)-3.1047077922077924E-4)
,((double)-4.7483766233766234E-4)
,((double)-4.76663961038961E-3)
,((double)1.4793019480519481E-3)
,((double)6.5746753246753243E-4)
,((double)-3.2873376623376621E-4)
,((double)1.1505681818181819E-3)
,((double)-2.6298701298701297E-3)
,((double)-4.2735389610389614E-3)
,((double)1.0957792207792207E-3)
,((double)7.8530844155844158E-4)
,((double)7.8530844155844158E-4)
,((double)7.3965097402597406E-3)
,((double)-2.6298701298701297E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.6298701298701297E-3)
,((double)7.3965097402597406E-3)
,((double)8.5470779220779228E-3)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)9.8620129870129864E-4)
,((double)1.2820616883116883E-2)
,((double)-4.9310064935064934E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)8.5470779220779228E-3)
,((double)5.9172077922077923E-3)

,((double)-6.0876623376623375E-4)
,((double)1.4813311688311687E-4)
,((double)-1.4204545454545455E-5)
,((double)-1.6436688311688311E-3)
,((double)1.3149350649350649E-3)
,((double)7.8530844155844158E-4)
,((double)-3.1047077922077924E-4)
,((double)2.1915584415584417E-4)
,((double)-5.4788961038961036E-4)
,((double)6.5746753246753243E-4)
,((double)1.4813311688311687E-4)
,((double)1.5827922077922079E-3)
,((double)6.4935064935064935E-5)
,((double)-1.6436688311688311E-3)
,((double)2.1915584415584414E-3)
,((double)1.0957792207792207E-3)
,((double)-5.4788961038961036E-4)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)-1.0957792207792207E-3)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)4.0584415584415584E-5)
,((double)-5.8441558441558442E-4)
,((double)1.497564935064935E-3)
,((double)7.8530844155844158E-4)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-3.1047077922077924E-4)
,((double)9.8620129870129864E-4)
,((double)-1.6436688311688311E-3)
,((double)-1.6436688311688311E-3)
,((double)-5.8441558441558442E-4)
,((double)-1.4793019480519481E-3)
,((double)-1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)1.4793019480519481E-3)
,((double)1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)-4.9310064935064934E-3)
,((double)1.3149350649350649E-3)
,((double)2.1915584415584414E-3)
,((double)1.497564935064935E-3)
,((double)-1.4793019480519481E-3)
,((double)2.2189529220779221E-2)
,((double)7.3965097402597406E-3)
,((double)-4.76663961038961E-3)
,((double)-2.1367694805194807E-3)
,((double)1.1505681818181819E-3)
,((double)1.2820616883116883E-2)
,((double)7.8530844155844158E-4)
,((double)1.0957792207792207E-3)
,((double)7.8530844155844158E-4)
,((double)-2.6298701298701297E-3)
,((double)7.3965097402597406E-3)
,((double)7.3965097402597406E-3)
,((double)-2.6298701298701297E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)8.5470779220779228E-3)
,((double)-3.1047077922077924E-4)
,((double)-5.4788961038961036E-4)
,((double)-4.7483766233766234E-4)
,((double)1.4793019480519481E-3)
,((double)-4.76663961038961E-3)
,((double)-2.6298701298701297E-3)
,((double)1.1505681818181819E-3)
,((double)-3.2873376623376621E-4)
,((double)6.5746753246753243E-4)
,((double)-4.2735389610389614E-3)
,((double)2.1915584415584417E-4)
,((double)1.8262987012987013E-5)
,((double)1.8262987012987013E-5)
,((double)1.4793019480519481E-3)
,((double)-2.1367694805194807E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.1367694805194807E-3)
,((double)1.4793019480519481E-3)
,((double)-2.3011363636363637E-3)
,((double)-5.4788961038961036E-4)
,((double)-4.7483766233766234E-4)
,((double)-3.1047077922077924E-4)
,((double)-2.6298701298701297E-3)
,((double)1.1505681818181819E-3)
,((double)-3.2873376623376621E-4)
,((double)6.5746753246753243E-4)
,((double)1.4793019480519481E-3)
,((double)-4.76663961038961E-3)
,((double)-4.2735389610389614E-3)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)9.8620129870129864E-4)
,((double)-4.9310064935064934E-3)
,((double)1.2820616883116883E-2)
,((double)8.5470779220779228E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)5.9172077922077923E-3)

,((double)4.0584415584415584E-5)
,((double)6.4935064935064935E-5)
,((double)-1.4204545454545455E-5)
,((double)-4.7483766233766234E-4)
,((double)7.8530844155844158E-4)
,((double)1.497564935064935E-3)
,((double)-5.8441558441558442E-4)
,((double)-3.1047077922077924E-4)
,((double)1.8262987012987013E-5)
,((double)9.8620129870129864E-4)
,((double)6.4935064935064935E-5)
,((double)1.5827922077922079E-3)
,((double)1.4813311688311687E-4)
,((double)-5.4788961038961036E-4)
,((double)1.0957792207792207E-3)
,((double)2.1915584415584414E-3)
,((double)-1.6436688311688311E-3)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-1.0957792207792207E-3)
,((double)-1.4204545454545455E-5)
,((double)1.4813311688311687E-4)
,((double)-6.0876623376623375E-4)
,((double)-3.1047077922077924E-4)
,((double)7.8530844155844158E-4)
,((double)1.3149350649350649E-3)
,((double)-1.6436688311688311E-3)
,((double)-5.4788961038961036E-4)
,((double)2.1915584415584417E-4)
,((double)6.5746753246753243E-4)
,((double)-4.7483766233766234E-4)
,((double)-5.4788961038961036E-4)
,((double)-3.1047077922077924E-4)
,((double)1.1505681818181819E-3)
,((double)-2.6298701298701297E-3)
,((double)-4.76663961038961E-3)
,((double)1.4793019480519481E-3)
,((double)6.5746753246753243E-4)
,((double)-3.2873376623376621E-4)
,((double)-4.2735389610389614E-3)
,((double)7.8530844155844158E-4)
,((double)1.0957792207792207E-3)
,((double)7.8530844155844158E-4)
,((double)-2.6298701298701297E-3)
,((double)7.3965097402597406E-3)
,((double)7.3965097402597406E-3)
,((double)-2.6298701298701297E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)8.5470779220779228E-3)
,((double)1.497564935064935E-3)
,((double)2.1915584415584414E-3)
,((double)1.3149350649350649E-3)
,((double)-4.76663961038961E-3)
,((double)7.3965097402597406E-3)
,((double)2.2189529220779221E-2)
,((double)-1.4793019480519481E-3)
,((double)1.1505681818181819E-3)
,((double)-2.1367694805194807E-3)
,((double)1.2820616883116883E-2)
,((double)-5.8441558441558442E-4)
,((double)-1.6436688311688311E-3)
,((double)-1.6436688311688311E-3)
,((double)1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)-1.4793019480519481E-3)
,((double)-1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)1.4793019480519481E-3)
,((double)-4.9310064935064934E-3)
,((double)-3.1047077922077924E-4)
,((double)-4.7483766233766234E-4)
,((double)-5.4788961038961036E-4)
,((double)6.5746753246753243E-4)
,((double)-3.2873376623376621E-4)
,((double)1.1505681818181819E-3)
,((double)-2.6298701298701297E-3)
,((double)-4.76663961038961E-3)
,((double)1.4793019480519481E-3)
,((double)-4.2735389610389614E-3)
,((double)1.8262987012987013E-5)
,((double)1.8262987012987013E-5)
,((double)2.1915584415584417E-4)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.1367694805194807E-3)
,((double)1.4793019480519481E-3)
,((double)1.4793019480519481E-3)
,((double)-2.1367694805194807E-3)
,((double)-2.3011363636363637E-3)
,((double)9.8620129870129864E-4)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)-4.2735389610389614E-3)
,((double)8.5470779220779228E-3)
,((double)1.2820616883116883E-2)
,((double)-4.9310064935064934E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)5.9172077922077923E-3)

,((double)4.0584415584415584E-5)
,((double)-1.4204545454545455E-5)
,((double)6.4935064935064935E-5)
,((double)1.8262987012987013E-5)
,((double)-3.1047077922077924E-4)
,((double)-5.8441558441558442E-4)
,((double)1.497564935064935E-3)
,((double)7.8530844155844158E-4)
,((double)-4.7483766233766234E-4)
,((double)9.8620129870129864E-4)
,((double)-1.4204545454545455E-5)
,((double)-6.0876623376623375E-4)
,((double)1.4813311688311687E-4)
,((double)2.1915584415584417E-4)
,((double)-5.4788961038961036E-4)
,((double)-1.6436688311688311E-3)
,((double)1.3149350649350649E-3)
,((double)7.8530844155844158E-4)
,((double)-3.1047077922077924E-4)
,((double)6.5746753246753243E-4)
,((double)6.4935064935064935E-5)
,((double)1.4813311688311687E-4)
,((double)1.5827922077922079E-3)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)-1.6436688311688311E-3)
,((double)2.1915584415584414E-3)
,((double)1.0957792207792207E-3)
,((double)-5.4788961038961036E-4)
,((double)-1.0957792207792207E-3)
,((double)1.8262987012987013E-5)
,((double)2.1915584415584417E-4)
,((double)1.8262987012987013E-5)
,((double)-2.1367694805194807E-3)
,((double)1.4793019480519481E-3)
,((double)1.4793019480519481E-3)
,((double)-2.1367694805194807E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.3011363636363637E-3)
,((double)-3.1047077922077924E-4)
,((double)-5.4788961038961036E-4)
,((double)-4.7483766233766234E-4)
,((double)1.4793019480519481E-3)
,((double)-4.76663961038961E-3)
,((double)-2.6298701298701297E-3)
,((double)1.1505681818181819E-3)
,((double)-3.2873376623376621E-4)
,((double)6.5746753246753243E-4)
,((double)-4.2735389610389614E-3)
,((double)-5.8441558441558442E-4)
,((double)-1.6436688311688311E-3)
,((double)-1.6436688311688311E-3)
,((double)1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)-1.4793019480519481E-3)
,((double)-1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)1.4793019480519481E-3)
,((double)-4.9310064935064934E-3)
,((double)1.497564935064935E-3)
,((double)1.3149350649350649E-3)
,((double)2.1915584415584414E-3)
,((double)-2.1367694805194807E-3)
,((double)1.1505681818181819E-3)
,((double)-1.4793019480519481E-3)
,((double)2.2189529220779221E-2)
,((double)7.3965097402597406E-3)
,((double)-4.76663961038961E-3)
,((double)1.2820616883116883E-2)
,((double)7.8530844155844158E-4)
,((double)7.8530844155844158E-4)
,((double)1.0957792207792207E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.6298701298701297E-3)
,((double)7.3965097402597406E-3)
,((double)7.3965097402597406E-3)
,((double)-2.6298701298701297E-3)
,((double)8.5470779220779228E-3)
,((double)-4.7483766233766234E-4)
,((double)-3.1047077922077924E-4)
,((double)-5.4788961038961036E-4)
,((double)-3.2873376623376621E-4)
,((double)6.5746753246753243E-4)
,((double)1.4793019480519481E-3)
,((double)-4.76663961038961E-3)
,((double)-2.6298701298701297E-3)
,((double)1.1505681818181819E-3)
,((double)-4.2735389610389614E-3)
,((double)9.8620129870129864E-4)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)-4.9310064935064934E-3)
,((double)1.2820616883116883E-2)
,((double)8.5470779220779228E-3)
,((double)-4.2735389610389614E-3)
,((double)5.9172077922077923E-3)

,((double)-6.0876623376623375E-4)
,((double)-1.4204545454545455E-5)
,((double)1.4813311688311687E-4)
,((double)-5.4788961038961036E-4)
,((double)2.1915584415584417E-4)
,((double)-3.1047077922077924E-4)
,((double)7.8530844155844158E-4)
,((double)1.3149350649350649E-3)
,((double)-1.6436688311688311E-3)
,((double)6.5746753246753243E-4)
,((double)-1.4204545454545455E-5)
,((double)4.0584415584415584E-5)
,((double)6.4935064935064935E-5)
,((double)-3.1047077922077924E-4)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)7.8530844155844158E-4)
,((double)1.497564935064935E-3)
,((double)-5.8441558441558442E-4)
,((double)9.8620129870129864E-4)
,((double)1.4813311688311687E-4)
,((double)6.4935064935064935E-5)
,((double)1.5827922077922079E-3)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-5.4788961038961036E-4)
,((double)1.0957792207792207E-3)
,((double)2.1915584415584414E-3)
,((double)-1.6436688311688311E-3)
,((double)-1.0957792207792207E-3)
,((double)-5.4788961038961036E-4)
,((double)-3.1047077922077924E-4)
,((double)-4.7483766233766234E-4)
,((double)-4.76663961038961E-3)
,((double)1.4793019480519481E-3)
,((double)6.5746753246753243E-4)
,((double)-3.2873376623376621E-4)
,((double)1.1505681818181819E-3)
,((double)-2.6298701298701297E-3)
,((double)-4.2735389610389614E-3)
,((double)2.1915584415584417E-4)
,((double)1.8262987012987013E-5)
,((double)1.8262987012987013E-5)
,((double)1.4793019480519481E-3)
,((double)-2.1367694805194807E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.1367694805194807E-3)
,((double)1.4793019480519481E-3)
,((double)-2.3011363636363637E-3)
,((double)-3.1047077922077924E-4)
,((double)-4.7483766233766234E-4)
,((double)-5.4788961038961036E-4)
,((double)6.5746753246753243E-4)
,((double)-3.2873376623376621E-4)
,((double)1.1505681818181819E-3)
,((double)-2.6298701298701297E-3)
,((double)-4.76663961038961E-3)
,((double)1.4793019480519481E-3)
,((double)-4.2735389610389614E-3)
,((double)7.8530844155844158E-4)
,((double)7.8530844155844158E-4)
,((double)1.0957792207792207E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.6298701298701297E-3)
,((double)7.3965097402597406E-3)
,((double)7.3965097402597406E-3)
,((double)-2.6298701298701297E-3)
,((double)8.5470779220779228E-3)
,((double)1.3149350649350649E-3)
,((double)1.497564935064935E-3)
,((double)2.1915584415584414E-3)
,((double)1.1505681818181819E-3)
,((double)-2.1367694805194807E-3)
,((double)-4.76663961038961E-3)
,((double)7.3965097402597406E-3)
,((double)2.2189529220779221E-2)
,((double)-1.4793019480519481E-3)
,((double)1.2820616883116883E-2)
,((double)-1.6436688311688311E-3)
,((double)-5.8441558441558442E-4)
,((double)-1.6436688311688311E-3)
,((double)-2.6298701298701297E-3)
,((double)1.4793019480519481E-3)
,((double)1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)-1.4793019480519481E-3)
,((double)-1.4793019480519481E-3)
,((double)-4.9310064935064934E-3)
,((double)6.5746753246753243E-4)
,((double)9.8620129870129864E-4)
,((double)-1.0957792207792207E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)8.5470779220779228E-3)
,((double)1.2820616883116883E-2)
,((double)-4.9310064935064934E-3)
,((double)5.9172077922077923E-3)

,((double)1.5827922077922079E-3)
,((double)6.4935064935064935E-5)
,((double)1.4813311688311687E-4)
,((double)1.0957792207792207E-3)
,((double)-5.4788961038961036E-4)
,((double)1.8262987012987013E-5)
,((double)-4.7483766233766234E-4)
,((double)-1.6436688311688311E-3)
,((double)2.1915584415584414E-3)
,((double)-1.0957792207792207E-3)
,((double)6.4935064935064935E-5)
,((double)4.0584415584415584E-5)
,((double)-1.4204545454545455E-5)
,((double)7.8530844155844158E-4)
,((double)-4.7483766233766234E-4)
,((double)1.8262987012987013E-5)
,((double)-3.1047077922077924E-4)
,((double)-5.8441558441558442E-4)
,((double)1.497564935064935E-3)
,((double)9.8620129870129864E-4)
,((double)1.4813311688311687E-4)
,((double)-1.4204545454545455E-5)
,((double)-6.0876623376623375E-4)
,((double)7.8530844155844158E-4)
,((double)-3.1047077922077924E-4)
,((double)2.1915584415584417E-4)
,((double)-5.4788961038961036E-4)
,((double)-1.6436688311688311E-3)
,((double)1.3149350649350649E-3)
,((double)6.5746753246753243E-4)
,((double)1.0957792207792207E-3)
,((double)7.8530844155844158E-4)
,((double)7.8530844155844158E-4)
,((double)7.3965097402597406E-3)
,((double)-2.6298701298701297E-3)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.6298701298701297E-3)
,((double)7.3965097402597406E-3)
,((double)8.5470779220779228E-3)
,((double)-5.4788961038961036E-4)
,((double)-4.7483766233766234E-4)
,((double)-3.1047077922077924E-4)
,((double)-2.6298701298701297E-3)
,((double)1.1505681818181819E-3)
,((double)-3.2873376623376621E-4)
,((double)6.5746753246753243E-4)
,((double)1.4793019480519481E-3)
,((double)-4.76663961038961E-3)
,((double)-4.2735389610389614E-3)
,((double)1.8262987012987013E-5)
,((double)1.8262987012987013E-5)
,((double)2.1915584415584417E-4)
,((double)-3.2873376623376621E-4)
,((double)-3.2873376623376621E-4)
,((double)-2.1367694805194807E-3)
,((double)1.4793019480519481E-3)
,((double)1.4793019480519481E-3)
,((double)-2.1367694805194807E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.7483766233766234E-4)
,((double)-3.1047077922077924E-4)
,((double)-5.4788961038961036E-4)
,((double)-3.2873376623376621E-4)
,((double)6.5746753246753243E-4)
,((double)1.4793019480519481E-3)
,((double)-4.76663961038961E-3)
,((double)-2.6298701298701297E-3)
,((double)1.1505681818181819E-3)
,((double)-4.2735389610389614E-3)
,((double)-1.6436688311688311E-3)
,((double)-5.8441558441558442E-4)
,((double)-1.6436688311688311E-3)
,((double)-2.6298701298701297E-3)
,((double)1.4793019480519481E-3)
,((double)1.4793019480519481E-3)
,((double)-2.6298701298701297E-3)
,((double)-1.4793019480519481E-3)
,((double)-1.4793019480519481E-3)
,((double)-4.9310064935064934E-3)
,((double)2.1915584415584414E-3)
,((double)1.497564935064935E-3)
,((double)1.3149350649350649E-3)
,((double)7.3965097402597406E-3)
,((double)-4.76663961038961E-3)
,((double)-2.1367694805194807E-3)
,((double)1.1505681818181819E-3)
,((double)-1.4793019480519481E-3)
,((double)2.2189529220779221E-2)
,((double)1.2820616883116883E-2)
,((double)-1.0957792207792207E-3)
,((double)9.8620129870129864E-4)
,((double)6.5746753246753243E-4)
,((double)8.5470779220779228E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)-4.9310064935064934E-3)
,((double)1.2820616883116883E-2)
,((double)5.9172077922077923E-3)

,((double)7.3051948051948055E-4)
,((double)-1.2175324675324675E-5)
,((double)-1.2175324675324675E-5)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)9.8620129870129864E-4)
,((double)9.8620129870129864E-4)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)8.7662337662337668E-4)
,((double)-1.2175324675324675E-5)
,((double)7.3051948051948055E-4)
,((double)-1.2175324675324675E-5)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)9.8620129870129864E-4)
,((double)9.8620129870129864E-4)
,((double)8.7662337662337668E-4)
,((double)-1.2175324675324675E-5)
,((double)-1.2175324675324675E-5)
,((double)7.3051948051948055E-4)
,((double)9.8620129870129864E-4)
,((double)9.8620129870129864E-4)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)8.7662337662337668E-4)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)9.8620129870129864E-4)
,((double)1.2820616883116883E-2)
,((double)-4.9310064935064934E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)8.5470779220779228E-3)
,((double)5.9172077922077923E-3)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)9.8620129870129864E-4)
,((double)-4.9310064935064934E-3)
,((double)1.2820616883116883E-2)
,((double)8.5470779220779228E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)5.9172077922077923E-3)
,((double)9.8620129870129864E-4)
,((double)-1.0957792207792207E-3)
,((double)6.5746753246753243E-4)
,((double)-4.2735389610389614E-3)
,((double)8.5470779220779228E-3)
,((double)1.2820616883116883E-2)
,((double)-4.9310064935064934E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)5.9172077922077923E-3)
,((double)9.8620129870129864E-4)
,((double)6.5746753246753243E-4)
,((double)-1.0957792207792207E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)-4.9310064935064934E-3)
,((double)1.2820616883116883E-2)
,((double)8.5470779220779228E-3)
,((double)-4.2735389610389614E-3)
,((double)5.9172077922077923E-3)
,((double)6.5746753246753243E-4)
,((double)9.8620129870129864E-4)
,((double)-1.0957792207792207E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)8.5470779220779228E-3)
,((double)1.2820616883116883E-2)
,((double)-4.9310064935064934E-3)
,((double)5.9172077922077923E-3)
,((double)-1.0957792207792207E-3)
,((double)9.8620129870129864E-4)
,((double)6.5746753246753243E-4)
,((double)8.5470779220779228E-3)
,((double)-4.2735389610389614E-3)
,((double)-2.3011363636363637E-3)
,((double)-4.2735389610389614E-3)
,((double)-4.9310064935064934E-3)
,((double)1.2820616883116883E-2)
,((double)5.9172077922077923E-3)
,((double)8.7662337662337668E-4)
,((double)8.7662337662337668E-4)
,((double)8.7662337662337668E-4)
,((double)5.9172077922077923E-3)
,((double)5.9172077922077923E-3)
,((double)5.9172077922077923E-3)
,((double)5.9172077922077923E-3)
,((double)5.9172077922077923E-3)
,((double)5.9172077922077923E-3)
,((double)0.10650974025974026)

};

static const double tria_L1_L2_L2[108] = {
((double)1.1904761904761904E-2)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)2.3809523809523812E-3)
,((double)3.9682539682539683E-4)
,((double)-3.1746031746031746E-3)
,((double)-1.5873015873015873E-3)
,((double)-4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)3.9682539682539683E-4)
,((double)2.3809523809523812E-3)
,((double)-4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)-3.1746031746031746E-3)
,((double)4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)-4.7619047619047623E-3)
,((double)3.8095238095238099E-2)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)4.7619047619047623E-3)
,((double)-4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)3.8095238095238099E-2)
,((double)2.3809523809523812E-3)
,((double)-1.5873015873015873E-3)
,((double)3.9682539682539683E-4)
,((double)-3.1746031746031746E-3)
,((double)-4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)1.1904761904761904E-2)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)3.9682539682539683E-4)
,((double)-1.5873015873015873E-3)
,((double)2.3809523809523812E-3)
,((double)-4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)-1.5873015873015873E-3)
,((double)-3.1746031746031746E-3)
,((double)4.7619047619047623E-3)
,((double)-4.7619047619047623E-3)
,((double)3.8095238095238099E-2)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)-4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)1.9047619047619049E-2)
,((double)3.8095238095238099E-2)
,((double)1.2698412698412698E-2)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)1.2698412698412698E-2)

,((double)2.3809523809523812E-3)
,((double)3.9682539682539683E-4)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)-4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)3.9682539682539683E-4)
,((double)2.3809523809523812E-3)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)-3.1746031746031746E-3)
,((double)-4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)1.1904761904761904E-2)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)-4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)4.7619047619047623E-3)
,((double)1.2698412698412698E-2)
,((double)3.8095238095238099E-2)
,((double)1.9047619047619049E-2)
,((double)-3.1746031746031746E-3)
,((double)-4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)3.8095238095238099E-2)

};

static const double tria_L1_L2p_L2p[147] = {
((double)8.4920634920634924E-2)
,((double)2.7777777777777776E-2)
,((double)2.7777777777777776E-2)
,((double)-2.3809523809523808E-2)
,((double)2.3809523809523808E-2)
,((double)-2.3809523809523808E-2)
,((double)5.3571428571428568E-2)
,((double)2.7777777777777776E-2)
,((double)1.6666666666666666E-2)
,((double)8.3333333333333332E-3)
,((double)-1.1111111111111112E-2)
,((double)1.1111111111111112E-2)
,((double)-1.1111111111111112E-2)
,((double)2.1428571428571429E-2)
,((double)2.7777777777777776E-2)
,((double)8.3333333333333332E-3)
,((double)1.6666666666666666E-2)
,((double)-1.1111111111111112E-2)
,((double)1.1111111111111112E-2)
,((double)-1.1111111111111112E-2)
,((double)2.1428571428571429E-2)
,((double)-2.3809523809523808E-2)
,((double)-1.1111111111111112E-2)
,((double)-1.1111111111111112E-2)
,((double)1.2698412698412698E-2)
,((double)-1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)-2.1428571428571429E-2)
,((double)2.3809523809523808E-2)
,((double)1.1111111111111112E-2)
,((double)1.1111111111111112E-2)
,((double)-1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)-1.2698412698412698E-2)
,((double)2.1428571428571429E-2)
,((double)-2.3809523809523808E-2)
,((double)-1.1111111111111112E-2)
,((double)-1.1111111111111112E-2)
,((double)1.2698412698412698E-2)
,((double)-1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)-2.1428571428571429E-2)
,((double)5.3571428571428568E-2)
,((double)2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)4.8214285714285716E-2)
,((double)7.6984126984126988E-2)
,((double)5.0000000000000003E-2)
,((double)3.0555555555555555E-2)
,((double)-4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)5.3571428571428568E-2)
,((double)5.0000000000000003E-2)
,((double)5.0000000000000003E-2)
,((double)1.6666666666666666E-2)
,((double)-3.3333333333333333E-2)
,((double)3.3333333333333333E-2)
,((double)-3.3333333333333333E-2)
,((double)3.214285714285714E-2)
,((double)3.0555555555555555E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)-2.2222222222222223E-2)
,((double)2.2222222222222223E-2)
,((double)-2.2222222222222223E-2)
,((double)2.1428571428571429E-2)
,((double)-4.9206349206349205E-2)
,((double)-3.3333333333333333E-2)
,((double)-2.2222222222222223E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)4.9206349206349205E-2)
,((double)3.3333333333333333E-2)
,((double)2.2222222222222223E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.214285714285714E-2)
,((double)-4.9206349206349205E-2)
,((double)-3.3333333333333333E-2)
,((double)-2.2222222222222223E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)5.3571428571428568E-2)
,((double)3.214285714285714E-2)
,((double)2.1428571428571429E-2)
,((double)-3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.8214285714285716E-2)

,((double)7.6984126984126988E-2)
,((double)3.0555555555555555E-2)
,((double)5.0000000000000003E-2)
,((double)-4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-4.9206349206349205E-2)
,((double)5.3571428571428568E-2)
,((double)3.0555555555555555E-2)
,((double)1.6666666666666666E-2)
,((double)1.6666666666666666E-2)
,((double)-2.2222222222222223E-2)
,((double)2.2222222222222223E-2)
,((double)-2.2222222222222223E-2)
,((double)2.1428571428571429E-2)
,((double)5.0000000000000003E-2)
,((double)1.6666666666666666E-2)
,((double)5.0000000000000003E-2)
,((double)-3.3333333333333333E-2)
,((double)3.3333333333333333E-2)
,((double)-3.3333333333333333E-2)
,((double)3.214285714285714E-2)
,((double)-4.9206349206349205E-2)
,((double)-2.2222222222222223E-2)
,((double)-3.3333333333333333E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)4.9206349206349205E-2)
,((double)2.2222222222222223E-2)
,((double)3.3333333333333333E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.214285714285714E-2)
,((double)-4.9206349206349205E-2)
,((double)-2.2222222222222223E-2)
,((double)-3.3333333333333333E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.214285714285714E-2)
,((double)5.3571428571428568E-2)
,((double)2.1428571428571429E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.8214285714285716E-2)

};

static const double tria_L1_L3_L3[300] = {
((double)4.464285714285714E-3)
,((double)3.720238095238095E-4)
,((double)3.720238095238095E-4)
,((double)2.6785714285714286E-3)
,((double)-1.3392857142857143E-3)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)-1.3392857142857143E-3)
,((double)2.6785714285714286E-3)
,((double)0.)
,((double)3.720238095238095E-4)
,((double)5.9523809523809529E-4)
,((double)7.4404761904761911E-5)
,((double)1.1160714285714285E-3)
,((double)-8.9285714285714283E-4)
,((double)-4.4642857142857141E-4)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)1.5625000000000001E-3)
,((double)1.3392857142857143E-3)
,((double)3.720238095238095E-4)
,((double)7.4404761904761911E-5)
,((double)5.9523809523809529E-4)
,((double)1.5625000000000001E-3)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)-4.4642857142857141E-4)
,((double)-8.9285714285714283E-4)
,((double)1.1160714285714285E-3)
,((double)1.3392857142857143E-3)
,((double)2.6785714285714286E-3)
,((double)1.1160714285714285E-3)
,((double)1.5625000000000001E-3)
,((double)2.4107142857142858E-2)
,((double)-6.0267857142857146E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)-1.3392857142857143E-3)
,((double)-8.9285714285714283E-4)
,((double)2.2321428571428571E-4)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)0.)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)2.2321428571428571E-4)
,((double)-4.4642857142857141E-4)
,((double)2.2321428571428571E-4)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)0.)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)-4.4642857142857141E-4)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)0.)
,((double)-1.3392857142857143E-3)
,((double)2.2321428571428571E-4)
,((double)-8.9285714285714283E-4)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)1.2053571428571429E-2)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)2.6785714285714286E-3)
,((double)1.5625000000000001E-3)
,((double)1.1160714285714285E-3)
,((double)1.2053571428571429E-2)
,((double)-6.0267857142857146E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-6.0267857142857146E-3)
,((double)2.4107142857142858E-2)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)1.3392857142857143E-3)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.2053571428571429E-2)
,((double)4.8214285714285716E-2)
,((double)5.9523809523809529E-4)
,((double)3.720238095238095E-4)
,((double)7.4404761904761911E-5)
,((double)-8.9285714285714283E-4)
,((double)1.1160714285714285E-3)
,((double)1.5625000000000001E-3)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)-4.4642857142857141E-4)
,((double)1.3392857142857143E-3)
,((double)3.720238095238095E-4)
,((double)4.464285714285714E-3)
,((double)3.720238095238095E-4)
,((double)-1.3392857142857143E-3)
,((double)2.6785714285714286E-3)
,((double)2.6785714285714286E-3)
,((double)-1.3392857142857143E-3)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)0.)
,((double)7.4404761904761911E-5)
,((double)3.720238095238095E-4)
,((double)5.9523809523809529E-4)
,((double)2.2321428571428571E-4)
,((double)1.5625000000000001E-3)
,((double)1.1160714285714285E-3)
,((double)-8.9285714285714283E-4)
,((double)-4.4642857142857141E-4)
,((double)2.2321428571428571E-4)
,((double)1.3392857142857143E-3)
,((double)-8.9285714285714283E-4)
,((double)-1.3392857142857143E-3)
,((double)2.2321428571428571E-4)
,((double)1.2053571428571429E-2)
,((double)-6.0267857142857146E-3)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)0.)
,((double)1.1160714285714285E-3)
,((double)2.6785714285714286E-3)
,((double)1.5625000000000001E-3)
,((double)-6.0267857142857146E-3)
,((double)2.4107142857142858E-2)
,((double)1.2053571428571429E-2)
,((double)-6.0267857142857146E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)1.2053571428571429E-2)
,((double)1.5625000000000001E-3)
,((double)2.6785714285714286E-3)
,((double)1.1160714285714285E-3)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)2.4107142857142858E-2)
,((double)-6.0267857142857146E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)1.2053571428571429E-2)
,((double)2.2321428571428571E-4)
,((double)-1.3392857142857143E-3)
,((double)-8.9285714285714283E-4)
,((double)0.)
,((double)-6.0267857142857146E-3)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)0.)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)-4.4642857142857141E-4)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)0.)
,((double)-4.4642857142857141E-4)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)4.8214285714285716E-2)

,((double)5.9523809523809529E-4)
,((double)7.4404761904761911E-5)
,((double)3.720238095238095E-4)
,((double)-4.4642857142857141E-4)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)1.5625000000000001E-3)
,((double)1.1160714285714285E-3)
,((double)-8.9285714285714283E-4)
,((double)1.3392857142857143E-3)
,((double)7.4404761904761911E-5)
,((double)5.9523809523809529E-4)
,((double)3.720238095238095E-4)
,((double)2.2321428571428571E-4)
,((double)-4.4642857142857141E-4)
,((double)-8.9285714285714283E-4)
,((double)1.1160714285714285E-3)
,((double)1.5625000000000001E-3)
,((double)2.2321428571428571E-4)
,((double)1.3392857142857143E-3)
,((double)3.720238095238095E-4)
,((double)3.720238095238095E-4)
,((double)4.464285714285714E-3)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)-1.3392857142857143E-3)
,((double)2.6785714285714286E-3)
,((double)2.6785714285714286E-3)
,((double)-1.3392857142857143E-3)
,((double)0.)
,((double)-4.4642857142857141E-4)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)0.)
,((double)2.2321428571428571E-4)
,((double)-4.4642857142857141E-4)
,((double)2.2321428571428571E-4)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)0.)
,((double)2.2321428571428571E-4)
,((double)-8.9285714285714283E-4)
,((double)-1.3392857142857143E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)1.2053571428571429E-2)
,((double)-6.0267857142857146E-3)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)0.)
,((double)1.5625000000000001E-3)
,((double)1.1160714285714285E-3)
,((double)2.6785714285714286E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-6.0267857142857146E-3)
,((double)2.4107142857142858E-2)
,((double)1.2053571428571429E-2)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)1.1160714285714285E-3)
,((double)1.5625000000000001E-3)
,((double)2.6785714285714286E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)2.4107142857142858E-2)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)-8.9285714285714283E-4)
,((double)2.2321428571428571E-4)
,((double)-1.3392857142857143E-3)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)0.)
,((double)-6.0267857142857146E-3)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)4.8214285714285716E-2)

};

static const double tria_L2_L3_L3[600] = {
((double)3.2738095238095239E-3)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)2.6785714285714286E-3)
,((double)-1.3392857142857143E-3)
,((double)-2.2321428571428571E-4)
,((double)-2.2321428571428571E-4)
,((double)-1.3392857142857143E-3)
,((double)2.6785714285714286E-3)
,((double)0.)
,((double)2.2321428571428571E-4)
,((double)-1.9841269841269841E-4)
,((double)3.4722222222222222E-5)
,((double)7.5892857142857142E-4)
,((double)-4.4642857142857141E-4)
,((double)0.)
,((double)-1.3392857142857144E-4)
,((double)-4.910714285714286E-4)
,((double)5.8035714285714288E-4)
,((double)2.6785714285714287E-4)
,((double)2.2321428571428571E-4)
,((double)3.4722222222222222E-5)
,((double)-1.9841269841269841E-4)
,((double)5.8035714285714288E-4)
,((double)-4.910714285714286E-4)
,((double)-1.3392857142857144E-4)
,((double)0.)
,((double)-4.4642857142857141E-4)
,((double)7.5892857142857142E-4)
,((double)2.6785714285714287E-4)
,((double)2.6785714285714286E-3)
,((double)7.5892857142857142E-4)
,((double)5.8035714285714288E-4)
,((double)8.0357142857142849E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571428E-4)
,((double)-4.0178571428571428E-4)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)4.0178571428571425E-3)
,((double)-1.3392857142857143E-3)
,((double)-4.4642857142857141E-4)
,((double)-4.910714285714286E-4)
,((double)-2.0089285714285712E-3)
,((double)-2.4107142857142856E-3)
,((double)-1.6071428571428571E-3)
,((double)1.2053571428571428E-3)
,((double)1.6071428571428571E-3)
,((double)-2.0089285714285712E-3)
,((double)-3.2142857142857142E-3)
,((double)-2.2321428571428571E-4)
,((double)0.)
,((double)-1.3392857142857144E-4)
,((double)4.0178571428571428E-4)
,((double)-1.6071428571428571E-3)
,((double)-2.4107142857142856E-3)
,((double)1.2053571428571428E-3)
,((double)1.2053571428571428E-3)
,((double)-4.0178571428571428E-4)
,((double)-1.6071428571428571E-3)
,((double)-2.2321428571428571E-4)
,((double)-1.3392857142857144E-4)
,((double)0.)
,((double)-4.0178571428571428E-4)
,((double)1.2053571428571428E-3)
,((double)1.2053571428571428E-3)
,((double)-2.4107142857142856E-3)
,((double)-1.6071428571428571E-3)
,((double)4.0178571428571428E-4)
,((double)-1.6071428571428571E-3)
,((double)-1.3392857142857143E-3)
,((double)-4.910714285714286E-4)
,((double)-4.4642857142857141E-4)
,((double)-2.0089285714285712E-3)
,((double)1.6071428571428571E-3)
,((double)1.2053571428571428E-3)
,((double)-1.6071428571428571E-3)
,((double)-2.4107142857142856E-3)
,((double)-2.0089285714285712E-3)
,((double)-3.2142857142857142E-3)
,((double)2.6785714285714286E-3)
,((double)5.8035714285714288E-4)
,((double)7.5892857142857142E-4)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)-4.0178571428571428E-4)
,((double)4.0178571428571428E-4)
,((double)-2.0089285714285712E-3)
,((double)8.0357142857142849E-3)
,((double)4.0178571428571425E-3)
,((double)0.)
,((double)2.6785714285714287E-4)
,((double)2.6785714285714287E-4)
,((double)4.0178571428571425E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)4.0178571428571425E-3)
,((double)-9.6428571428571423E-3)
,((double)-1.9841269841269841E-4)
,((double)2.2321428571428571E-4)
,((double)3.4722222222222222E-5)
,((double)-4.4642857142857141E-4)
,((double)7.5892857142857142E-4)
,((double)5.8035714285714288E-4)
,((double)-4.910714285714286E-4)
,((double)-1.3392857142857144E-4)
,((double)0.)
,((double)2.6785714285714287E-4)
,((double)2.2321428571428571E-4)
,((double)3.2738095238095239E-3)
,((double)2.2321428571428571E-4)
,((double)-1.3392857142857143E-3)
,((double)2.6785714285714286E-3)
,((double)2.6785714285714286E-3)
,((double)-1.3392857142857143E-3)
,((double)-2.2321428571428571E-4)
,((double)-2.2321428571428571E-4)
,((double)0.)
,((double)3.4722222222222222E-5)
,((double)2.2321428571428571E-4)
,((double)-1.9841269841269841E-4)
,((double)-4.910714285714286E-4)
,((double)5.8035714285714288E-4)
,((double)7.5892857142857142E-4)
,((double)-4.4642857142857141E-4)
,((double)0.)
,((double)-1.3392857142857144E-4)
,((double)2.6785714285714287E-4)
,((double)-4.4642857142857141E-4)
,((double)-1.3392857142857143E-3)
,((double)-4.910714285714286E-4)
,((double)-2.4107142857142856E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)1.6071428571428571E-3)
,((double)1.2053571428571428E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)7.5892857142857142E-4)
,((double)2.6785714285714286E-3)
,((double)5.8035714285714288E-4)
,((double)-2.0089285714285712E-3)
,((double)8.0357142857142849E-3)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)-4.0178571428571428E-4)
,((double)4.0178571428571428E-4)
,((double)4.0178571428571425E-3)
,((double)5.8035714285714288E-4)
,((double)2.6785714285714286E-3)
,((double)7.5892857142857142E-4)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)8.0357142857142849E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571428E-4)
,((double)-4.0178571428571428E-4)
,((double)4.0178571428571425E-3)
,((double)-4.910714285714286E-4)
,((double)-1.3392857142857143E-3)
,((double)-4.4642857142857141E-4)
,((double)1.6071428571428571E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.4107142857142856E-3)
,((double)-1.6071428571428571E-3)
,((double)1.2053571428571428E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.3392857142857144E-4)
,((double)-2.2321428571428571E-4)
,((double)0.)
,((double)1.2053571428571428E-3)
,((double)-4.0178571428571428E-4)
,((double)4.0178571428571428E-4)
,((double)-1.6071428571428571E-3)
,((double)-2.4107142857142856E-3)
,((double)1.2053571428571428E-3)
,((double)-1.6071428571428571E-3)
,((double)0.)
,((double)-2.2321428571428571E-4)
,((double)-1.3392857142857144E-4)
,((double)-1.6071428571428571E-3)
,((double)4.0178571428571428E-4)
,((double)-4.0178571428571428E-4)
,((double)1.2053571428571428E-3)
,((double)1.2053571428571428E-3)
,((double)-2.4107142857142856E-3)
,((double)-1.6071428571428571E-3)
,((double)2.6785714285714287E-4)
,((double)0.)
,((double)2.6785714285714287E-4)
,((double)-3.2142857142857142E-3)
,((double)4.0178571428571425E-3)
,((double)4.0178571428571425E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-9.6428571428571423E-3)

,((double)-1.9841269841269841E-4)
,((double)3.4722222222222222E-5)
,((double)2.2321428571428571E-4)
,((double)0.)
,((double)-1.3392857142857144E-4)
,((double)-4.910714285714286E-4)
,((double)5.8035714285714288E-4)
,((double)7.5892857142857142E-4)
,((double)-4.4642857142857141E-4)
,((double)2.6785714285714287E-4)
,((double)3.4722222222222222E-5)
,((double)-1.9841269841269841E-4)
,((double)2.2321428571428571E-4)
,((double)-1.3392857142857144E-4)
,((double)0.)
,((double)-4.4642857142857141E-4)
,((double)7.5892857142857142E-4)
,((double)5.8035714285714288E-4)
,((double)-4.910714285714286E-4)
,((double)2.6785714285714287E-4)
,((double)2.2321428571428571E-4)
,((double)2.2321428571428571E-4)
,((double)3.2738095238095239E-3)
,((double)-2.2321428571428571E-4)
,((double)-2.2321428571428571E-4)
,((double)-1.3392857142857143E-3)
,((double)2.6785714285714286E-3)
,((double)2.6785714285714286E-3)
,((double)-1.3392857142857143E-3)
,((double)0.)
,((double)0.)
,((double)-1.3392857142857144E-4)
,((double)-2.2321428571428571E-4)
,((double)-2.4107142857142856E-3)
,((double)1.2053571428571428E-3)
,((double)1.2053571428571428E-3)
,((double)-4.0178571428571428E-4)
,((double)4.0178571428571428E-4)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.3392857142857144E-4)
,((double)0.)
,((double)-2.2321428571428571E-4)
,((double)1.2053571428571428E-3)
,((double)-2.4107142857142856E-3)
,((double)-1.6071428571428571E-3)
,((double)4.0178571428571428E-4)
,((double)-4.0178571428571428E-4)
,((double)1.2053571428571428E-3)
,((double)-1.6071428571428571E-3)
,((double)-4.910714285714286E-4)
,((double)-4.4642857142857141E-4)
,((double)-1.3392857142857143E-3)
,((double)1.2053571428571428E-3)
,((double)-1.6071428571428571E-3)
,((double)-2.4107142857142856E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)5.8035714285714288E-4)
,((double)7.5892857142857142E-4)
,((double)2.6785714285714286E-3)
,((double)-4.0178571428571428E-4)
,((double)4.0178571428571428E-4)
,((double)-2.0089285714285712E-3)
,((double)8.0357142857142849E-3)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)7.5892857142857142E-4)
,((double)5.8035714285714288E-4)
,((double)2.6785714285714286E-3)
,((double)4.0178571428571428E-4)
,((double)-4.0178571428571428E-4)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)8.0357142857142849E-3)
,((double)-2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)-4.4642857142857141E-4)
,((double)-4.910714285714286E-4)
,((double)-1.3392857142857143E-3)
,((double)-1.6071428571428571E-3)
,((double)1.2053571428571428E-3)
,((double)1.6071428571428571E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285712E-3)
,((double)-2.4107142857142856E-3)
,((double)-3.2142857142857142E-3)
,((double)2.6785714285714287E-4)
,((double)2.6785714285714287E-4)
,((double)0.)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)4.0178571428571425E-3)
,((double)4.0178571428571425E-3)
,((double)-3.2142857142857142E-3)
,((double)-9.6428571428571423E-3)

,((double)1.1904761904761906E-3)
,((double)2.5793650793650796E-4)
,((double)3.9682539682539683E-5)
,((double)0.)
,((double)0.)
,((double)7.1428571428571429E-4)
,((double)1.7857142857142857E-4)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.5793650793650796E-4)
,((double)1.1904761904761906E-3)
,((double)3.9682539682539683E-5)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.7857142857142857E-4)
,((double)7.1428571428571429E-4)
,((double)0.)
,((double)3.9682539682539683E-5)
,((double)3.9682539682539683E-5)
,((double)3.9682539682539683E-4)
,((double)1.25E-3)
,((double)1.25E-3)
,((double)7.1428571428571429E-4)
,((double)-8.9285714285714283E-4)
,((double)-8.9285714285714283E-4)
,((double)7.1428571428571429E-4)
,((double)2.142857142857143E-3)
,((double)0.)
,((double)0.)
,((double)1.25E-3)
,((double)2.4107142857142858E-2)
,((double)-4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-4.8214285714285711E-3)
,((double)8.0357142857142849E-3)
,((double)9.6428571428571423E-3)
,((double)0.)
,((double)0.)
,((double)1.25E-3)
,((double)-4.8214285714285711E-3)
,((double)2.4107142857142858E-2)
,((double)8.0357142857142849E-3)
,((double)-4.8214285714285711E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)9.6428571428571423E-3)
,((double)7.1428571428571429E-4)
,((double)0.)
,((double)7.1428571428571429E-4)
,((double)-3.2142857142857142E-3)
,((double)8.0357142857142849E-3)
,((double)8.0357142857142849E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)6.4285714285714285E-3)
,((double)1.7857142857142857E-4)
,((double)0.)
,((double)-8.9285714285714283E-4)
,((double)-1.6071428571428571E-3)
,((double)-4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)4.8214285714285711E-3)
,((double)3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)0.)
,((double)1.7857142857142857E-4)
,((double)-8.9285714285714283E-4)
,((double)-4.8214285714285711E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)3.2142857142857142E-3)
,((double)4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)-3.2142857142857142E-3)
,((double)0.)
,((double)7.1428571428571429E-4)
,((double)7.1428571428571429E-4)
,((double)8.0357142857142849E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)8.0357142857142849E-3)
,((double)6.4285714285714285E-3)
,((double)0.)
,((double)0.)
,((double)2.142857142857143E-3)
,((double)9.6428571428571423E-3)
,((double)9.6428571428571423E-3)
,((double)6.4285714285714285E-3)
,((double)-3.2142857142857142E-3)
,((double)-3.2142857142857142E-3)
,((double)6.4285714285714285E-3)
,((double)5.7857142857142857E-2)

,((double)3.9682539682539683E-4)
,((double)3.9682539682539683E-5)
,((double)3.9682539682539683E-5)
,((double)-8.9285714285714283E-4)
,((double)7.1428571428571429E-4)
,((double)1.25E-3)
,((double)1.25E-3)
,((double)7.1428571428571429E-4)
,((double)-8.9285714285714283E-4)
,((double)2.142857142857143E-3)
,((double)3.9682539682539683E-5)
,((double)1.1904761904761906E-3)
,((double)2.5793650793650796E-4)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)7.1428571428571429E-4)
,((double)1.7857142857142857E-4)
,((double)0.)
,((double)3.9682539682539683E-5)
,((double)2.5793650793650796E-4)
,((double)1.1904761904761906E-3)
,((double)1.7857142857142857E-4)
,((double)7.1428571428571429E-4)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-8.9285714285714283E-4)
,((double)0.)
,((double)1.7857142857142857E-4)
,((double)4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)-4.8214285714285711E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)3.2142857142857142E-3)
,((double)-3.2142857142857142E-3)
,((double)7.1428571428571429E-4)
,((double)0.)
,((double)7.1428571428571429E-4)
,((double)-3.2142857142857142E-3)
,((double)8.0357142857142849E-3)
,((double)8.0357142857142849E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)6.4285714285714285E-3)
,((double)1.25E-3)
,((double)0.)
,((double)0.)
,((double)-4.8214285714285711E-3)
,((double)8.0357142857142849E-3)
,((double)2.4107142857142858E-2)
,((double)-4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)9.6428571428571423E-3)
,((double)1.25E-3)
,((double)0.)
,((double)0.)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)-4.8214285714285711E-3)
,((double)2.4107142857142858E-2)
,((double)8.0357142857142849E-3)
,((double)-4.8214285714285711E-3)
,((double)9.6428571428571423E-3)
,((double)7.1428571428571429E-4)
,((double)7.1428571428571429E-4)
,((double)0.)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)8.0357142857142849E-3)
,((double)8.0357142857142849E-3)
,((double)-3.2142857142857142E-3)
,((double)6.4285714285714285E-3)
,((double)-8.9285714285714283E-4)
,((double)1.7857142857142857E-4)
,((double)0.)
,((double)3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)2.142857142857143E-3)
,((double)0.)
,((double)0.)
,((double)-3.2142857142857142E-3)
,((double)6.4285714285714285E-3)
,((double)9.6428571428571423E-3)
,((double)9.6428571428571423E-3)
,((double)6.4285714285714285E-3)
,((double)-3.2142857142857142E-3)
,((double)5.7857142857142857E-2)

,((double)1.1904761904761906E-3)
,((double)3.9682539682539683E-5)
,((double)2.5793650793650796E-4)
,((double)0.)
,((double)0.)
,((double)1.7857142857142857E-4)
,((double)7.1428571428571429E-4)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.9682539682539683E-5)
,((double)3.9682539682539683E-4)
,((double)3.9682539682539683E-5)
,((double)7.1428571428571429E-4)
,((double)-8.9285714285714283E-4)
,((double)-8.9285714285714283E-4)
,((double)7.1428571428571429E-4)
,((double)1.25E-3)
,((double)1.25E-3)
,((double)2.142857142857143E-3)
,((double)2.5793650793650796E-4)
,((double)3.9682539682539683E-5)
,((double)1.1904761904761906E-3)
,((double)7.1428571428571429E-4)
,((double)1.7857142857142857E-4)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)7.1428571428571429E-4)
,((double)7.1428571428571429E-4)
,((double)8.0357142857142849E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)8.0357142857142849E-3)
,((double)6.4285714285714285E-3)
,((double)0.)
,((double)-8.9285714285714283E-4)
,((double)1.7857142857142857E-4)
,((double)-3.2142857142857142E-3)
,((double)4.8214285714285711E-3)
,((double)3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)1.7857142857142857E-4)
,((double)-8.9285714285714283E-4)
,((double)0.)
,((double)-1.6071428571428571E-3)
,((double)3.2142857142857142E-3)
,((double)4.8214285714285711E-3)
,((double)-3.2142857142857142E-3)
,((double)-4.8214285714285711E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)7.1428571428571429E-4)
,((double)7.1428571428571429E-4)
,((double)0.)
,((double)-1.6071428571428571E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)8.0357142857142849E-3)
,((double)8.0357142857142849E-3)
,((double)-3.2142857142857142E-3)
,((double)6.4285714285714285E-3)
,((double)0.)
,((double)1.25E-3)
,((double)0.)
,((double)-3.2142857142857142E-3)
,((double)-1.6071428571428571E-3)
,((double)-4.8214285714285711E-3)
,((double)8.0357142857142849E-3)
,((double)2.4107142857142858E-2)
,((double)-4.8214285714285711E-3)
,((double)9.6428571428571423E-3)
,((double)0.)
,((double)1.25E-3)
,((double)0.)
,((double)8.0357142857142849E-3)
,((double)-4.8214285714285711E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.2142857142857142E-3)
,((double)-4.8214285714285711E-3)
,((double)2.4107142857142858E-2)
,((double)9.6428571428571423E-3)
,((double)0.)
,((double)2.142857142857143E-3)
,((double)0.)
,((double)6.4285714285714285E-3)
,((double)-3.2142857142857142E-3)
,((double)-3.2142857142857142E-3)
,((double)6.4285714285714285E-3)
,((double)9.6428571428571423E-3)
,((double)9.6428571428571423E-3)
,((double)5.7857142857142857E-2)

};

static const double tria_L2_L2p_L2p[294] = {
((double)7.1428571428571426E-3)
,((double)-4.7619047619047623E-3)
,((double)-4.7619047619047623E-3)
,((double)7.9365079365079361E-3)
,((double)-7.9365079365079361E-3)
,((double)7.9365079365079361E-3)
,((double)-7.1428571428571426E-3)
,((double)-4.7619047619047623E-3)
,((double)-5.5555555555555558E-3)
,((double)-2.7777777777777779E-3)
,((double)4.7619047619047623E-3)
,((double)-4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-5.3571428571428572E-3)
,((double)-4.7619047619047623E-3)
,((double)-2.7777777777777779E-3)
,((double)-5.5555555555555558E-3)
,((double)4.7619047619047623E-3)
,((double)-4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-5.3571428571428572E-3)
,((double)7.9365079365079361E-3)
,((double)4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)7.1428571428571426E-3)
,((double)-7.9365079365079361E-3)
,((double)-4.7619047619047623E-3)
,((double)-4.7619047619047623E-3)
,((double)6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-7.1428571428571426E-3)
,((double)7.9365079365079361E-3)
,((double)4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)-5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-9.6428571428571423E-3)
,((double)-8.7301587301587304E-3)
,((double)4.7619047619047623E-3)
,((double)-5.9523809523809521E-3)
,((double)1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)1.5873015873015873E-3)
,((double)-8.9285714285714281E-3)
,((double)4.7619047619047623E-3)
,((double)1.6666666666666666E-2)
,((double)0.)
,((double)-4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-4.7619047619047623E-3)
,((double)0.)
,((double)-5.9523809523809521E-3)
,((double)0.)
,((double)-5.5555555555555558E-3)
,((double)3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)3.1746031746031746E-3)
,((double)-5.3571428571428572E-3)
,((double)1.5873015873015873E-3)
,((double)-4.7619047619047623E-3)
,((double)3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.5714285714285713E-3)
,((double)-1.5873015873015873E-3)
,((double)4.7619047619047623E-3)
,((double)-3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.5714285714285713E-3)
,((double)1.5873015873015873E-3)
,((double)-4.7619047619047623E-3)
,((double)3.1746031746031746E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.5714285714285713E-3)
,((double)-8.9285714285714281E-3)
,((double)0.)
,((double)-5.3571428571428572E-3)
,((double)3.5714285714285713E-3)
,((double)-3.5714285714285713E-3)
,((double)3.5714285714285713E-3)
,((double)-9.6428571428571423E-3)

,((double)-8.7301587301587304E-3)
,((double)-5.9523809523809521E-3)
,((double)4.7619047619047623E-3)
,((double)1.5873015873015873E-3)
,((double)-1.5873015873015873E-3)
,((double)1.5873015873015873E-3)
,((double)-8.9285714285714281E-3)
,((double)-5.9523809523809521E-3)
,((double)-5.5555555555555558E-3)
,((double)0.)
,((double)3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)3.1746031746031746E-3)
,((double)-5.3571428571428572E-3)
,((double)4.7619047619047623E-3)
,((double)0.)
,((double)1.6666666666666666E-2)
,((double)-4.7619047619047623E-3)
,((double)4.7619047619047623E-3)
,((double)-4.7619047619047623E-3)
,((double)0.)
,((double)1.5873015873015873E-3)
,((double)3.1746031746031746E-3)
,((double)-4.7619047619047623E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.5714285714285713E-3)
,((double)-1.5873015873015873E-3)
,((double)-3.1746031746031746E-3)
,((double)4.7619047619047623E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.5714285714285713E-3)
,((double)1.5873015873015873E-3)
,((double)3.1746031746031746E-3)
,((double)-4.7619047619047623E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.5714285714285713E-3)
,((double)-8.9285714285714281E-3)
,((double)-5.3571428571428572E-3)
,((double)0.)
,((double)3.5714285714285713E-3)
,((double)-3.5714285714285713E-3)
,((double)3.5714285714285713E-3)
,((double)-9.6428571428571423E-3)

,((double)7.7777777777777779E-2)
,((double)4.1269841269841269E-2)
,((double)2.3809523809523808E-2)
,((double)-3.1746031746031744E-2)
,((double)3.1746031746031744E-2)
,((double)-3.1746031746031744E-2)
,((double)6.0714285714285714E-2)
,((double)4.1269841269841269E-2)
,((double)3.3333333333333333E-2)
,((double)1.1111111111111112E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)3.214285714285714E-2)
,((double)2.3809523809523808E-2)
,((double)1.1111111111111112E-2)
,((double)1.1111111111111112E-2)
,((double)-1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)-1.2698412698412698E-2)
,((double)2.1428571428571429E-2)
,((double)-3.1746031746031744E-2)
,((double)-1.9047619047619049E-2)
,((double)-1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-2.8571428571428571E-2)
,((double)3.1746031746031744E-2)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)2.8571428571428571E-2)
,((double)-3.1746031746031744E-2)
,((double)-1.9047619047619049E-2)
,((double)-1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-2.8571428571428571E-2)
,((double)6.0714285714285714E-2)
,((double)3.214285714285714E-2)
,((double)2.1428571428571429E-2)
,((double)-2.8571428571428571E-2)
,((double)2.8571428571428571E-2)
,((double)-2.8571428571428571E-2)
,((double)5.7857142857142857E-2)

,((double)9.3650793650793651E-2)
,((double)4.9206349206349205E-2)
,((double)4.9206349206349205E-2)
,((double)-6.9841269841269843E-2)
,((double)6.9841269841269843E-2)
,((double)-6.9841269841269843E-2)
,((double)6.4285714285714279E-2)
,((double)4.9206349206349205E-2)
,((double)3.3333333333333333E-2)
,((double)2.2222222222222223E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.214285714285714E-2)
,((double)4.9206349206349205E-2)
,((double)2.2222222222222223E-2)
,((double)3.3333333333333333E-2)
,((double)-3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)3.214285714285714E-2)
,((double)-6.9841269841269843E-2)
,((double)-3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-4.2857142857142858E-2)
,((double)6.9841269841269843E-2)
,((double)3.8095238095238099E-2)
,((double)3.8095238095238099E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)4.2857142857142858E-2)
,((double)-6.9841269841269843E-2)
,((double)-3.8095238095238099E-2)
,((double)-3.8095238095238099E-2)
,((double)5.7142857142857141E-2)
,((double)-5.7142857142857141E-2)
,((double)5.7142857142857141E-2)
,((double)-4.2857142857142858E-2)
,((double)6.4285714285714279E-2)
,((double)3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)5.7857142857142857E-2)

,((double)7.7777777777777779E-2)
,((double)2.3809523809523808E-2)
,((double)4.1269841269841269E-2)
,((double)-3.1746031746031744E-2)
,((double)3.1746031746031744E-2)
,((double)-3.1746031746031744E-2)
,((double)6.0714285714285714E-2)
,((double)2.3809523809523808E-2)
,((double)1.1111111111111112E-2)
,((double)1.1111111111111112E-2)
,((double)-1.2698412698412698E-2)
,((double)1.2698412698412698E-2)
,((double)-1.2698412698412698E-2)
,((double)2.1428571428571429E-2)
,((double)4.1269841269841269E-2)
,((double)1.1111111111111112E-2)
,((double)3.3333333333333333E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)3.214285714285714E-2)
,((double)-3.1746031746031744E-2)
,((double)-1.2698412698412698E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-2.8571428571428571E-2)
,((double)3.1746031746031744E-2)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)2.8571428571428571E-2)
,((double)-3.1746031746031744E-2)
,((double)-1.2698412698412698E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-2.8571428571428571E-2)
,((double)6.0714285714285714E-2)
,((double)2.1428571428571429E-2)
,((double)3.214285714285714E-2)
,((double)-2.8571428571428571E-2)
,((double)2.8571428571428571E-2)
,((double)-2.8571428571428571E-2)
,((double)5.7857142857142857E-2)

};

static const double tria_L3_L2p_L2p[490] = {
((double)1.1111111111111112E-2)
,((double)2.7777777777777779E-3)
,((double)2.7777777777777779E-3)
,((double)-3.5714285714285713E-3)
,((double)3.5714285714285713E-3)
,((double)-3.5714285714285713E-3)
,((double)2.142857142857143E-3)
,((double)2.7777777777777779E-3)
,((double)2.3809523809523812E-3)
,((double)1.1904761904761906E-3)
,((double)-2.1825396825396826E-3)
,((double)2.1825396825396826E-3)
,((double)-2.1825396825396826E-3)
,((double)1.3392857142857143E-3)
,((double)2.7777777777777779E-3)
,((double)1.1904761904761906E-3)
,((double)2.3809523809523812E-3)
,((double)-2.1825396825396826E-3)
,((double)2.1825396825396826E-3)
,((double)-2.1825396825396826E-3)
,((double)1.3392857142857143E-3)
,((double)-3.5714285714285713E-3)
,((double)-2.1825396825396826E-3)
,((double)-2.1825396825396826E-3)
,((double)3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)3.1746031746031746E-3)
,((double)-2.142857142857143E-3)
,((double)3.5714285714285713E-3)
,((double)2.1825396825396826E-3)
,((double)2.1825396825396826E-3)
,((double)-3.1746031746031746E-3)
,((double)3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)2.142857142857143E-3)
,((double)-3.5714285714285713E-3)
,((double)-2.1825396825396826E-3)
,((double)-2.1825396825396826E-3)
,((double)3.1746031746031746E-3)
,((double)-3.1746031746031746E-3)
,((double)3.1746031746031746E-3)
,((double)-2.142857142857143E-3)
,((double)2.142857142857143E-3)
,((double)1.3392857142857143E-3)
,((double)1.3392857142857143E-3)
,((double)-2.142857142857143E-3)
,((double)2.142857142857143E-3)
,((double)-2.142857142857143E-3)
,((double)8.7662337662337668E-4)
,((double)3.1746031746031746E-3)
,((double)1.7857142857142857E-3)
,((double)1.984126984126984E-3)
,((double)-3.9682539682539683E-4)
,((double)3.9682539682539683E-4)
,((double)-3.9682539682539683E-4)
,((double)1.3392857142857143E-3)
,((double)1.7857142857142857E-3)
,((double)7.1428571428571426E-3)
,((double)5.9523809523809529E-4)
,((double)-1.1904761904761906E-3)
,((double)1.1904761904761906E-3)
,((double)-1.1904761904761906E-3)
,((double)0.)
,((double)1.984126984126984E-3)
,((double)5.9523809523809529E-4)
,((double)2.3809523809523812E-3)
,((double)-7.9365079365079365E-4)
,((double)7.9365079365079365E-4)
,((double)-7.9365079365079365E-4)
,((double)1.3392857142857143E-3)
,((double)-3.9682539682539683E-4)
,((double)-1.1904761904761906E-3)
,((double)-7.9365079365079365E-4)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.9682539682539683E-4)
,((double)1.1904761904761906E-3)
,((double)7.9365079365079365E-4)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.9682539682539683E-4)
,((double)-1.1904761904761906E-3)
,((double)-7.9365079365079365E-4)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)8.7662337662337668E-4)

,((double)3.1746031746031746E-3)
,((double)1.984126984126984E-3)
,((double)1.7857142857142857E-3)
,((double)-3.9682539682539683E-4)
,((double)3.9682539682539683E-4)
,((double)-3.9682539682539683E-4)
,((double)1.3392857142857143E-3)
,((double)1.984126984126984E-3)
,((double)2.3809523809523812E-3)
,((double)5.9523809523809529E-4)
,((double)-7.9365079365079365E-4)
,((double)7.9365079365079365E-4)
,((double)-7.9365079365079365E-4)
,((double)1.3392857142857143E-3)
,((double)1.7857142857142857E-3)
,((double)5.9523809523809529E-4)
,((double)7.1428571428571426E-3)
,((double)-1.1904761904761906E-3)
,((double)1.1904761904761906E-3)
,((double)-1.1904761904761906E-3)
,((double)0.)
,((double)-3.9682539682539683E-4)
,((double)-7.9365079365079365E-4)
,((double)-1.1904761904761906E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.9682539682539683E-4)
,((double)7.9365079365079365E-4)
,((double)1.1904761904761906E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.9682539682539683E-4)
,((double)-7.9365079365079365E-4)
,((double)-1.1904761904761906E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.3392857142857143E-3)
,((double)1.3392857142857143E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)8.7662337662337668E-4)

,((double)2.3214285714285715E-2)
,((double)1.7857142857142857E-3)
,((double)0.)
,((double)5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)8.8392857142857145E-3)
,((double)1.7857142857142857E-3)
,((double)-5.3571428571428572E-3)
,((double)-1.7857142857142857E-3)
,((double)5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)0.)
,((double)0.)
,((double)-1.7857142857142857E-3)
,((double)-1.7857142857142857E-3)
,((double)3.5714285714285713E-3)
,((double)-3.5714285714285713E-3)
,((double)3.5714285714285713E-3)
,((double)0.)
,((double)5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)3.5714285714285713E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)3.2142857142857142E-3)
,((double)-5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)-3.5714285714285713E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-3.2142857142857142E-3)
,((double)5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)3.5714285714285713E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)3.2142857142857142E-3)
,((double)8.8392857142857145E-3)
,((double)0.)
,((double)0.)
,((double)3.2142857142857142E-3)
,((double)-3.2142857142857142E-3)
,((double)3.2142857142857142E-3)
,((double)5.9172077922077923E-3)

,((double)5.3571428571428572E-3)
,((double)1.7857142857142856E-2)
,((double)0.)
,((double)-8.9285714285714281E-3)
,((double)8.9285714285714281E-3)
,((double)-8.9285714285714281E-3)
,((double)6.4285714285714285E-3)
,((double)1.7857142857142856E-2)
,((double)2.6785714285714284E-2)
,((double)3.5714285714285713E-3)
,((double)-1.0714285714285714E-2)
,((double)1.0714285714285714E-2)
,((double)-1.0714285714285714E-2)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)3.5714285714285713E-3)
,((double)-1.7857142857142857E-3)
,((double)-1.7857142857142857E-3)
,((double)1.7857142857142857E-3)
,((double)-1.7857142857142857E-3)
,((double)0.)
,((double)-8.9285714285714281E-3)
,((double)-1.0714285714285714E-2)
,((double)-1.7857142857142857E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-6.4285714285714285E-3)
,((double)8.9285714285714281E-3)
,((double)1.0714285714285714E-2)
,((double)1.7857142857142857E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)6.4285714285714285E-3)
,((double)-8.9285714285714281E-3)
,((double)-1.0714285714285714E-2)
,((double)-1.7857142857142857E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-6.4285714285714285E-3)
,((double)6.4285714285714285E-3)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)-6.4285714285714285E-3)
,((double)6.4285714285714285E-3)
,((double)-6.4285714285714285E-3)
,((double)5.9172077922077923E-3)

,((double)2.3214285714285715E-2)
,((double)2.5000000000000001E-2)
,((double)3.5714285714285713E-3)
,((double)-2.3214285714285715E-2)
,((double)2.3214285714285715E-2)
,((double)-2.3214285714285715E-2)
,((double)9.6428571428571423E-3)
,((double)2.5000000000000001E-2)
,((double)2.6785714285714284E-2)
,((double)7.1428571428571426E-3)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)3.5714285714285713E-3)
,((double)7.1428571428571426E-3)
,((double)-5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)0.)
,((double)-2.3214285714285715E-2)
,((double)-2.1428571428571429E-2)
,((double)-5.3571428571428572E-3)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-9.6428571428571423E-3)
,((double)2.3214285714285715E-2)
,((double)2.1428571428571429E-2)
,((double)5.3571428571428572E-3)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)9.6428571428571423E-3)
,((double)-2.3214285714285715E-2)
,((double)-2.1428571428571429E-2)
,((double)-5.3571428571428572E-3)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-9.6428571428571423E-3)
,((double)9.6428571428571423E-3)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)-9.6428571428571423E-3)
,((double)9.6428571428571423E-3)
,((double)-9.6428571428571423E-3)
,((double)5.9172077922077923E-3)

,((double)2.3214285714285715E-2)
,((double)3.5714285714285713E-3)
,((double)2.5000000000000001E-2)
,((double)-2.3214285714285715E-2)
,((double)2.3214285714285715E-2)
,((double)-2.3214285714285715E-2)
,((double)9.6428571428571423E-3)
,((double)3.5714285714285713E-3)
,((double)-5.3571428571428572E-3)
,((double)7.1428571428571426E-3)
,((double)-5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)0.)
,((double)2.5000000000000001E-2)
,((double)7.1428571428571426E-3)
,((double)2.6785714285714284E-2)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)-2.3214285714285715E-2)
,((double)-5.3571428571428572E-3)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-9.6428571428571423E-3)
,((double)2.3214285714285715E-2)
,((double)5.3571428571428572E-3)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)9.6428571428571423E-3)
,((double)-2.3214285714285715E-2)
,((double)-5.3571428571428572E-3)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-2.1428571428571429E-2)
,((double)2.1428571428571429E-2)
,((double)-9.6428571428571423E-3)
,((double)9.6428571428571423E-3)
,((double)0.)
,((double)1.2053571428571429E-2)
,((double)-9.6428571428571423E-3)
,((double)9.6428571428571423E-3)
,((double)-9.6428571428571423E-3)
,((double)5.9172077922077923E-3)

,((double)5.3571428571428572E-3)
,((double)0.)
,((double)1.7857142857142856E-2)
,((double)-8.9285714285714281E-3)
,((double)8.9285714285714281E-3)
,((double)-8.9285714285714281E-3)
,((double)6.4285714285714285E-3)
,((double)0.)
,((double)-1.7857142857142857E-3)
,((double)3.5714285714285713E-3)
,((double)-1.7857142857142857E-3)
,((double)1.7857142857142857E-3)
,((double)-1.7857142857142857E-3)
,((double)0.)
,((double)1.7857142857142856E-2)
,((double)3.5714285714285713E-3)
,((double)2.6785714285714284E-2)
,((double)-1.0714285714285714E-2)
,((double)1.0714285714285714E-2)
,((double)-1.0714285714285714E-2)
,((double)1.2053571428571429E-2)
,((double)-8.9285714285714281E-3)
,((double)-1.7857142857142857E-3)
,((double)-1.0714285714285714E-2)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-6.4285714285714285E-3)
,((double)8.9285714285714281E-3)
,((double)1.7857142857142857E-3)
,((double)1.0714285714285714E-2)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)6.4285714285714285E-3)
,((double)-8.9285714285714281E-3)
,((double)-1.7857142857142857E-3)
,((double)-1.0714285714285714E-2)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-6.4285714285714285E-3)
,((double)6.4285714285714285E-3)
,((double)0.)
,((double)1.2053571428571429E-2)
,((double)-6.4285714285714285E-3)
,((double)6.4285714285714285E-3)
,((double)-6.4285714285714285E-3)
,((double)5.9172077922077923E-3)

,((double)2.3214285714285715E-2)
,((double)0.)
,((double)1.7857142857142857E-3)
,((double)5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)8.8392857142857145E-3)
,((double)0.)
,((double)-1.7857142857142857E-3)
,((double)-1.7857142857142857E-3)
,((double)3.5714285714285713E-3)
,((double)-3.5714285714285713E-3)
,((double)3.5714285714285713E-3)
,((double)0.)
,((double)1.7857142857142857E-3)
,((double)-1.7857142857142857E-3)
,((double)-5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)-5.3571428571428572E-3)
,((double)5.3571428571428572E-3)
,((double)0.)
,((double)5.3571428571428572E-3)
,((double)3.5714285714285713E-3)
,((double)5.3571428571428572E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)3.2142857142857142E-3)
,((double)-5.3571428571428572E-3)
,((double)-3.5714285714285713E-3)
,((double)-5.3571428571428572E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-3.2142857142857142E-3)
,((double)5.3571428571428572E-3)
,((double)3.5714285714285713E-3)
,((double)5.3571428571428572E-3)
,((double)-7.1428571428571426E-3)
,((double)7.1428571428571426E-3)
,((double)-7.1428571428571426E-3)
,((double)3.2142857142857142E-3)
,((double)8.8392857142857145E-3)
,((double)0.)
,((double)0.)
,((double)3.2142857142857142E-3)
,((double)-3.2142857142857142E-3)
,((double)3.2142857142857142E-3)
,((double)5.9172077922077923E-3)

,((double)0.11785714285714285)
,((double)5.3571428571428568E-2)
,((double)5.3571428571428568E-2)
,((double)-6.4285714285714279E-2)
,((double)6.4285714285714279E-2)
,((double)-6.4285714285714279E-2)
,((double)0.10607142857142857)
,((double)5.3571428571428568E-2)
,((double)3.214285714285714E-2)
,((double)2.1428571428571429E-2)
,((double)-3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.8214285714285716E-2)
,((double)5.3571428571428568E-2)
,((double)2.1428571428571429E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.8214285714285716E-2)
,((double)-6.4285714285714279E-2)
,((double)-3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-5.7857142857142857E-2)
,((double)6.4285714285714279E-2)
,((double)3.214285714285714E-2)
,((double)3.214285714285714E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)5.7857142857142857E-2)
,((double)-6.4285714285714279E-2)
,((double)-3.214285714285714E-2)
,((double)-3.214285714285714E-2)
,((double)4.2857142857142858E-2)
,((double)-4.2857142857142858E-2)
,((double)4.2857142857142858E-2)
,((double)-5.7857142857142857E-2)
,((double)0.10607142857142857)
,((double)4.8214285714285716E-2)
,((double)4.8214285714285716E-2)
,((double)-5.7857142857142857E-2)
,((double)5.7857142857142857E-2)
,((double)-5.7857142857142857E-2)
,((double)0.10650974025974026)

};

static const double tria_L1dx_L1[9] = {
((double)-0.16666666666666666)
,((double)-0.16666666666666666)
,((double)-0.16666666666666666)
,((double)0.16666666666666666)
,((double)0.16666666666666666)
,((double)0.16666666666666666)

,((double)0.)
,((double)0.)
,((double)0.)

};

static const double tria_L2dx_L2[36] = {
((double)-6.6666666666666666E-2)
,((double)3.3333333333333333E-2)
,((double)3.3333333333333333E-2)
,((double)-0.10000000000000001)
,((double)3.3333333333333333E-2)
,((double)-0.10000000000000001)
,((double)-3.3333333333333333E-2)
,((double)6.6666666666666666E-2)
,((double)-3.3333333333333333E-2)
,((double)0.10000000000000001)
,((double)0.10000000000000001)
,((double)-3.3333333333333333E-2)

,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)

,((double)0.10000000000000001)
,((double)-0.10000000000000001)
,((double)0.)
,((double)0.)
,((double)-0.13333333333333333)
,((double)0.13333333333333333)

,((double)-3.3333333333333333E-2)
,((double)-3.3333333333333333E-2)
,((double)6.6666666666666666E-2)
,((double)0.13333333333333333)
,((double)0.26666666666666666)
,((double)0.26666666666666666)

,((double)3.3333333333333333E-2)
,((double)3.3333333333333333E-2)
,((double)-6.6666666666666666E-2)
,((double)-0.13333333333333333)
,((double)-0.26666666666666666)
,((double)-0.26666666666666666)

};

static const double tria_L3dx_L3[100] = {
((double)-3.8095238095238099E-2)
,((double)-1.1309523809523809E-2)
,((double)-1.1309523809523809E-2)
,((double)-6.160714285714286E-2)
,((double)3.4821428571428573E-2)
,((double)-1.3392857142857142E-2)
,((double)-1.3392857142857142E-2)
,((double)3.4821428571428573E-2)
,((double)-6.160714285714286E-2)
,((double)1.607142857142857E-2)
,((double)1.1309523809523809E-2)
,((double)3.8095238095238099E-2)
,((double)1.1309523809523809E-2)
,((double)-3.4821428571428573E-2)
,((double)6.160714285714286E-2)
,((double)6.160714285714286E-2)
,((double)-3.4821428571428573E-2)
,((double)1.3392857142857142E-2)
,((double)1.3392857142857142E-2)
,((double)-1.607142857142857E-2)

,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)

,((double)6.160714285714286E-2)
,((double)3.4821428571428573E-2)
,((double)0.)
,((double)0.)
,((double)-9.6428571428571433E-2)
,((double)4.8214285714285716E-2)
,((double)2.4107142857142858E-2)
,((double)-2.4107142857142858E-2)
,((double)9.6428571428571433E-2)
,((double)-0.14464285714285716)

,((double)-3.4821428571428573E-2)
,((double)-6.160714285714286E-2)
,((double)0.)
,((double)9.6428571428571433E-2)
,((double)0.)
,((double)-9.6428571428571433E-2)
,((double)2.4107142857142858E-2)
,((double)-2.4107142857142858E-2)
,((double)-4.8214285714285716E-2)
,((double)0.14464285714285716)

,((double)1.3392857142857142E-2)
,((double)-2.6785714285714286E-3)
,((double)-2.1428571428571429E-2)
,((double)-4.8214285714285716E-2)
,((double)9.6428571428571433E-2)
,((double)0.19285714285714287)
,((double)2.4107142857142858E-2)
,((double)-7.2321428571428578E-2)
,((double)-4.8214285714285716E-2)
,((double)0.24107142857142858)

,((double)1.3392857142857142E-2)
,((double)1.3392857142857142E-2)
,((double)5.8928571428571427E-2)
,((double)-2.4107142857142858E-2)
,((double)-2.4107142857142858E-2)
,((double)-7.2321428571428578E-2)
,((double)0.19285714285714287)
,((double)0.19285714285714287)
,((double)-7.2321428571428578E-2)
,((double)9.6428571428571433E-2)

,((double)-1.3392857142857142E-2)
,((double)-1.3392857142857142E-2)
,((double)-5.8928571428571427E-2)
,((double)2.4107142857142858E-2)
,((double)2.4107142857142858E-2)
,((double)7.2321428571428578E-2)
,((double)-0.19285714285714287)
,((double)-0.19285714285714287)
,((double)7.2321428571428578E-2)
,((double)-9.6428571428571433E-2)

,((double)2.6785714285714286E-3)
,((double)-1.3392857142857142E-2)
,((double)2.1428571428571429E-2)
,((double)-9.6428571428571433E-2)
,((double)4.8214285714285716E-2)
,((double)4.8214285714285716E-2)
,((double)7.2321428571428578E-2)
,((double)-2.4107142857142858E-2)
,((double)-0.19285714285714287)
,((double)-0.24107142857142858)

,((double)-1.607142857142857E-2)
,((double)1.607142857142857E-2)
,((double)0.)
,((double)0.14464285714285716)
,((double)-0.14464285714285716)
,((double)-0.24107142857142858)
,((double)-9.6428571428571433E-2)
,((double)9.6428571428571433E-2)
,((double)0.24107142857142858)
,((double)0.)

};

static const double tria_L1_L1dx_L1[27] = {
((double)-8.3333333333333329E-2)
,((double)-4.1666666666666664E-2)
,((double)-4.1666666666666664E-2)
,((double)8.3333333333333329E-2)
,((double)4.1666666666666664E-2)
,((double)4.1666666666666664E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-4.1666666666666664E-2)
,((double)-8.3333333333333329E-2)
,((double)-4.1666666666666664E-2)
,((double)4.1666666666666664E-2)
,((double)8.3333333333333329E-2)
,((double)4.1666666666666664E-2)
,((double)0.)
,((double)0.)
,((double)0.)

,((double)-4.1666666666666664E-2)
,((double)-4.1666666666666664E-2)
,((double)-8.3333333333333329E-2)
,((double)4.1666666666666664E-2)
,((double)4.1666666666666664E-2)
,((double)8.3333333333333329E-2)
,((double)0.)
,((double)0.)
,((double)0.)

};

static const double tria_L2_L2dx_L2[216] = {
((double)-3.0952380952380953E-2)
,((double)3.5714285714285713E-3)
,((double)3.5714285714285713E-3)
,((double)-1.9047619047619049E-2)
,((double)-4.7619047619047623E-3)
,((double)-1.9047619047619049E-2)
,((double)-7.1428571428571426E-3)
,((double)-3.5714285714285713E-3)
,((double)4.3650793650793652E-3)
,((double)-1.2698412698412698E-2)
,((double)-7.9365079365079361E-3)
,((double)-6.3492063492063492E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.8095238095238099E-2)
,((double)0.)
,((double)-7.9365079365079361E-3)
,((double)3.1746031746031744E-2)
,((double)1.2698412698412698E-2)
,((double)2.5396825396825397E-2)
,((double)9.5238095238095247E-3)
,((double)1.5873015873015873E-3)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)-1.9047619047619049E-2)
,((double)-1.2698412698412698E-2)
,((double)-9.5238095238095247E-3)
,((double)-1.5873015873015873E-3)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)3.5714285714285713E-3)
,((double)7.1428571428571426E-3)
,((double)-4.3650793650793652E-3)
,((double)1.2698412698412698E-2)
,((double)6.3492063492063492E-3)
,((double)7.9365079365079361E-3)
,((double)-3.5714285714285713E-3)
,((double)3.0952380952380953E-2)
,((double)-3.5714285714285713E-3)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)4.7619047619047623E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.8095238095238099E-2)
,((double)7.9365079365079361E-3)
,((double)-3.1746031746031744E-2)
,((double)-2.5396825396825397E-2)
,((double)-1.2698412698412698E-2)
,((double)1.5873015873015873E-3)
,((double)9.5238095238095247E-3)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)-1.2698412698412698E-2)
,((double)-1.9047619047619049E-2)
,((double)-1.5873015873015873E-3)
,((double)-9.5238095238095247E-3)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)

,((double)3.5714285714285713E-3)
,((double)-4.3650793650793652E-3)
,((double)7.1428571428571426E-3)
,((double)7.9365079365079361E-3)
,((double)6.3492063492063492E-3)
,((double)1.2698412698412698E-2)
,((double)4.3650793650793652E-3)
,((double)-3.5714285714285713E-3)
,((double)-7.1428571428571426E-3)
,((double)-7.9365079365079361E-3)
,((double)-1.2698412698412698E-2)
,((double)-6.3492063492063492E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-7.9365079365079361E-3)
,((double)7.9365079365079361E-3)
,((double)0.)
,((double)0.)
,((double)6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)4.7619047619047616E-2)
,((double)-6.3492063492063492E-3)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-4.7619047619047616E-2)
,((double)6.3492063492063492E-3)
,((double)-1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)

,((double)-1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)7.9365079365079361E-3)
,((double)-6.3492063492063489E-2)
,((double)-6.3492063492063492E-3)
,((double)-3.1746031746031744E-2)
,((double)-1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)-7.9365079365079361E-3)
,((double)6.3492063492063489E-2)
,((double)3.1746031746031744E-2)
,((double)6.3492063492063492E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.1746031746031744E-2)
,((double)-3.1746031746031744E-2)
,((double)0.)
,((double)0.)
,((double)-2.5396825396825397E-2)
,((double)2.5396825396825397E-2)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)5.0793650793650794E-2)
,((double)5.0793650793650794E-2)
,((double)5.0793650793650794E-2)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-5.0793650793650794E-2)
,((double)-5.0793650793650794E-2)
,((double)-5.0793650793650794E-2)

,((double)-4.7619047619047623E-3)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)3.8095238095238099E-2)
,((double)-6.3492063492063492E-3)
,((double)-7.9365079365079361E-3)
,((double)1.9047619047619049E-2)
,((double)-1.2698412698412698E-2)
,((double)3.1746031746031744E-2)
,((double)6.3492063492063489E-2)
,((double)6.3492063492063492E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.2698412698412698E-2)
,((double)-2.5396825396825397E-2)
,((double)6.3492063492063492E-3)
,((double)-2.5396825396825397E-2)
,((double)-0.10158730158730159)
,((double)0.)
,((double)-1.9047619047619049E-2)
,((double)-1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)5.0793650793650794E-2)
,((double)0.15238095238095239)
,((double)7.6190476190476197E-2)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)-1.9047619047619049E-2)
,((double)-5.0793650793650794E-2)
,((double)-0.15238095238095239)
,((double)-7.6190476190476197E-2)

,((double)-1.9047619047619049E-2)
,((double)7.9365079365079361E-3)
,((double)1.2698412698412698E-2)
,((double)-3.1746031746031744E-2)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063489E-2)
,((double)-6.3492063492063492E-3)
,((double)4.7619047619047623E-3)
,((double)-6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-3.8095238095238099E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.5396825396825397E-2)
,((double)-1.2698412698412698E-2)
,((double)-6.3492063492063492E-3)
,((double)2.5396825396825397E-2)
,((double)0.)
,((double)0.10158730158730159)
,((double)-1.2698412698412698E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)5.0793650793650794E-2)
,((double)7.6190476190476197E-2)
,((double)0.15238095238095239)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)-5.0793650793650794E-2)
,((double)-7.6190476190476197E-2)
,((double)-0.15238095238095239)

};

static const double tria_L3_L3dx_L3[1000] = {
((double)-1.7708333333333333E-2)
,((double)-1.488095238095238E-3)
,((double)-1.488095238095238E-3)
,((double)-1.3392857142857142E-2)
,((double)6.0267857142857146E-3)
,((double)0.)
,((double)0.)
,((double)6.0267857142857146E-3)
,((double)-1.3392857142857142E-2)
,((double)-2.6785714285714286E-3)
,((double)2.976190476190476E-3)
,((double)1.488095238095238E-3)
,((double)8.8541666666666662E-4)
,((double)3.3482142857142857E-4)
,((double)2.6116071428571429E-3)
,((double)2.4107142857142856E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.4062499999999999E-3)
,((double)2.3437499999999999E-3)
,((double)1.4732142857142858E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.6785714285714284E-2)
,((double)2.2767857142857143E-3)
,((double)2.4107142857142856E-3)
,((double)2.0089285714285716E-2)
,((double)-7.0312500000000002E-3)
,((double)1.2053571428571428E-3)
,((double)-1.2053571428571428E-3)
,((double)-1.1049107142857144E-2)
,((double)2.2098214285714287E-2)
,((double)6.0267857142857146E-3)
,((double)-1.2053571428571429E-2)
,((double)-2.2767857142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)-7.0312500000000002E-3)
,((double)-1.6071428571428571E-3)
,((double)-3.6160714285714286E-3)
,((double)3.0133928571428573E-3)
,((double)6.4285714285714285E-3)
,((double)-1.1049107142857144E-2)
,((double)-4.8214285714285711E-3)
,((double)0.)
,((double)-6.6964285714285718E-5)
,((double)-1.4062499999999999E-3)
,((double)-4.0178571428571425E-3)
,((double)3.8169642857142855E-3)
,((double)7.4330357142857141E-3)
,((double)1.4062499999999999E-3)
,((double)-2.0089285714285714E-4)
,((double)-2.0089285714285712E-3)
,((double)8.4375000000000006E-3)
,((double)0.)
,((double)4.0178571428571428E-4)
,((double)2.3437499999999999E-3)
,((double)-1.0044642857142856E-3)
,((double)-4.0178571428571428E-4)
,((double)-2.8124999999999999E-3)
,((double)7.4330357142857141E-3)
,((double)7.633928571428571E-3)
,((double)-5.0223214285714289E-3)
,((double)4.8214285714285711E-3)
,((double)0.)
,((double)-4.0178571428571428E-4)
,((double)-2.3437499999999999E-3)
,((double)1.0044642857142856E-3)
,((double)4.0178571428571428E-4)
,((double)2.8124999999999999E-3)
,((double)-7.4330357142857141E-3)
,((double)-7.633928571428571E-3)
,((double)5.0223214285714289E-3)
,((double)-4.8214285714285711E-3)
,((double)-5.3571428571428572E-3)
,((double)6.6964285714285718E-5)
,((double)-6.6964285714285718E-5)
,((double)-2.0089285714285712E-3)
,((double)1.0044642857142856E-3)
,((double)-2.0089285714285714E-4)
,((double)2.2098214285714286E-3)
,((double)5.0223214285714289E-3)
,((double)-4.0178571428571425E-3)
,((double)6.0267857142857146E-3)
,((double)5.3571428571428572E-3)
,((double)0.)
,((double)1.4732142857142858E-3)
,((double)6.0267857142857146E-3)
,((double)-4.8214285714285711E-3)
,((double)-7.2321428571428571E-3)
,((double)-3.6160714285714286E-3)
,((double)-4.8214285714285711E-3)
,((double)6.0267857142857146E-3)
,((double)-1.4464285714285714E-2)
,((double)-1.488095238095238E-3)
,((double)-2.976190476190476E-3)
,((double)-8.8541666666666662E-4)
,((double)-2.6116071428571429E-3)
,((double)-3.3482142857142857E-4)
,((double)-2.3437499999999999E-3)
,((double)1.4062499999999999E-3)
,((double)1.8080357142857143E-3)
,((double)-2.4107142857142856E-3)
,((double)-1.4732142857142858E-3)
,((double)1.488095238095238E-3)
,((double)1.7708333333333333E-2)
,((double)1.488095238095238E-3)
,((double)-6.0267857142857146E-3)
,((double)1.3392857142857142E-2)
,((double)1.3392857142857142E-2)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)0.)
,((double)2.6785714285714286E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.2767857142857143E-3)
,((double)1.2053571428571429E-2)
,((double)1.8080357142857143E-3)
,((double)1.6071428571428571E-3)
,((double)7.0312500000000002E-3)
,((double)1.1049107142857144E-2)
,((double)-6.4285714285714285E-3)
,((double)-3.0133928571428573E-3)
,((double)3.6160714285714286E-3)
,((double)4.8214285714285711E-3)
,((double)-2.2767857142857143E-3)
,((double)-2.6785714285714284E-2)
,((double)-2.4107142857142856E-3)
,((double)7.0312500000000002E-3)
,((double)-2.0089285714285716E-2)
,((double)-2.2098214285714287E-2)
,((double)1.1049107142857144E-2)
,((double)1.2053571428571428E-3)
,((double)-1.2053571428571428E-3)
,((double)-6.0267857142857146E-3)
,((double)-6.6964285714285718E-5)
,((double)5.3571428571428572E-3)
,((double)6.6964285714285718E-5)
,((double)-1.0044642857142856E-3)
,((double)2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)-5.0223214285714289E-3)
,((double)-2.2098214285714286E-3)
,((double)2.0089285714285714E-4)
,((double)-6.0267857142857146E-3)
,((double)4.0178571428571428E-4)
,((double)0.)
,((double)2.3437499999999999E-3)
,((double)-4.0178571428571428E-4)
,((double)-1.0044642857142856E-3)
,((double)-5.0223214285714289E-3)
,((double)7.633928571428571E-3)
,((double)7.4330357142857141E-3)
,((double)-2.8124999999999999E-3)
,((double)4.8214285714285711E-3)
,((double)-4.0178571428571428E-4)
,((double)0.)
,((double)-2.3437499999999999E-3)
,((double)4.0178571428571428E-4)
,((double)1.0044642857142856E-3)
,((double)5.0223214285714289E-3)
,((double)-7.633928571428571E-3)
,((double)-7.4330357142857141E-3)
,((double)2.8124999999999999E-3)
,((double)-4.8214285714285711E-3)
,((double)6.6964285714285718E-5)
,((double)0.)
,((double)1.4062499999999999E-3)
,((double)-3.8169642857142855E-3)
,((double)4.0178571428571425E-3)
,((double)2.0089285714285712E-3)
,((double)2.0089285714285714E-4)
,((double)-1.4062499999999999E-3)
,((double)-7.4330357142857141E-3)
,((double)-8.4375000000000006E-3)
,((double)0.)
,((double)-5.3571428571428572E-3)
,((double)-1.4732142857142858E-3)
,((double)4.8214285714285711E-3)
,((double)-6.0267857142857146E-3)
,((double)-6.0267857142857146E-3)
,((double)4.8214285714285711E-3)
,((double)3.6160714285714286E-3)
,((double)7.2321428571428571E-3)
,((double)1.4464285714285714E-2)

,((double)-1.488095238095238E-3)
,((double)-8.8541666666666662E-4)
,((double)-2.976190476190476E-3)
,((double)-2.4107142857142856E-3)
,((double)1.8080357142857143E-3)
,((double)1.4062499999999999E-3)
,((double)-2.3437499999999999E-3)
,((double)-3.3482142857142857E-4)
,((double)-2.6116071428571429E-3)
,((double)-1.4732142857142858E-3)
,((double)8.8541666666666662E-4)
,((double)1.488095238095238E-3)
,((double)2.976190476190476E-3)
,((double)-1.8080357142857143E-3)
,((double)2.4107142857142856E-3)
,((double)2.6116071428571429E-3)
,((double)3.3482142857142857E-4)
,((double)2.3437499999999999E-3)
,((double)-1.4062499999999999E-3)
,((double)1.4732142857142858E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.4107142857142856E-3)
,((double)1.8080357142857143E-3)
,((double)0.)
,((double)0.)
,((double)-4.2187500000000003E-3)
,((double)-2.0089285714285714E-4)
,((double)1.0044642857142856E-3)
,((double)-1.0044642857142856E-3)
,((double)3.8169642857142855E-3)
,((double)-3.6160714285714286E-3)
,((double)-1.8080357142857143E-3)
,((double)-2.4107142857142856E-3)
,((double)0.)
,((double)4.2187500000000003E-3)
,((double)0.)
,((double)-3.8169642857142855E-3)
,((double)1.0044642857142856E-3)
,((double)-1.0044642857142856E-3)
,((double)2.0089285714285714E-4)
,((double)3.6160714285714286E-3)
,((double)-1.4062499999999999E-3)
,((double)6.6964285714285718E-5)
,((double)-1.2053571428571429E-2)
,((double)2.0089285714285714E-4)
,((double)3.8169642857142855E-3)
,((double)6.0267857142857146E-3)
,((double)-1.2053571428571429E-2)
,((double)-1.2053571428571429E-2)
,((double)6.0267857142857146E-3)
,((double)0.)
,((double)2.3437499999999999E-3)
,((double)2.3437499999999999E-3)
,((double)3.214285714285714E-2)
,((double)-1.0044642857142856E-3)
,((double)-1.0044642857142856E-3)
,((double)-1.2053571428571429E-2)
,((double)2.4107142857142858E-2)
,((double)2.4107142857142858E-2)
,((double)-1.2053571428571429E-2)
,((double)0.)
,((double)-2.3437499999999999E-3)
,((double)-2.3437499999999999E-3)
,((double)-3.214285714285714E-2)
,((double)1.0044642857142856E-3)
,((double)1.0044642857142856E-3)
,((double)1.2053571428571429E-2)
,((double)-2.4107142857142858E-2)
,((double)-2.4107142857142858E-2)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)-6.6964285714285718E-5)
,((double)1.4062499999999999E-3)
,((double)1.2053571428571429E-2)
,((double)-3.8169642857142855E-3)
,((double)-2.0089285714285714E-4)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)1.4732142857142858E-3)
,((double)-1.4732142857142858E-3)
,((double)0.)
,((double)3.6160714285714286E-3)
,((double)-3.6160714285714286E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)

,((double)-1.3392857142857142E-2)
,((double)-2.6116071428571429E-3)
,((double)-2.4107142857142856E-3)
,((double)-4.0178571428571432E-2)
,((double)1.40625E-2)
,((double)2.8124999999999999E-3)
,((double)2.2098214285714286E-3)
,((double)1.0044642857142858E-2)
,((double)-2.0089285714285716E-2)
,((double)-1.2053571428571429E-2)
,((double)3.3482142857142857E-4)
,((double)-6.0267857142857146E-3)
,((double)-1.8080357142857143E-3)
,((double)-3.2142857142857142E-3)
,((double)-1.40625E-2)
,((double)-1.0044642857142858E-2)
,((double)6.8303571428571432E-3)
,((double)2.6116071428571429E-3)
,((double)2.0089285714285714E-4)
,((double)-9.6428571428571423E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.0089285714285716E-2)
,((double)1.6071428571428571E-3)
,((double)0.)
,((double)0.)
,((double)-2.1696428571428571E-2)
,((double)-7.2321428571428571E-3)
,((double)3.6160714285714286E-3)
,((double)-3.6160714285714286E-3)
,((double)1.8080357142857145E-2)
,((double)-1.0848214285714286E-2)
,((double)-7.0312500000000002E-3)
,((double)7.0312500000000002E-3)
,((double)4.2187500000000003E-3)
,((double)4.3392857142857143E-2)
,((double)2.1696428571428571E-2)
,((double)1.4464285714285714E-2)
,((double)-1.2656250000000001E-2)
,((double)-9.0401785714285723E-3)
,((double)1.8080357142857143E-3)
,((double)3.2544642857142855E-2)
,((double)-4.0178571428571425E-3)
,((double)-1.0044642857142856E-3)
,((double)2.0089285714285714E-4)
,((double)1.4464285714285714E-2)
,((double)-1.2656250000000001E-2)
,((double)-2.3504464285714285E-2)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)3.6160714285714286E-3)
,((double)-2.1696428571428571E-2)
,((double)-1.0044642857142856E-3)
,((double)-4.0178571428571428E-4)
,((double)-1.0044642857142856E-3)
,((double)-7.2321428571428571E-3)
,((double)3.6160714285714286E-3)
,((double)3.6160714285714286E-3)
,((double)-7.2321428571428571E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.0848214285714286E-2)
,((double)1.0044642857142856E-3)
,((double)4.0178571428571428E-4)
,((double)1.0044642857142856E-3)
,((double)7.2321428571428571E-3)
,((double)-3.6160714285714286E-3)
,((double)-3.6160714285714286E-3)
,((double)7.2321428571428571E-3)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)1.0848214285714286E-2)
,((double)-2.0089285714285712E-3)
,((double)-3.8169642857142855E-3)
,((double)-3.8169642857142855E-3)
,((double)-3.6160714285714289E-2)
,((double)1.2656250000000001E-2)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)1.2656250000000001E-2)
,((double)-3.6160714285714289E-2)
,((double)-4.3392857142857143E-2)
,((double)6.0267857142857146E-3)
,((double)4.8214285714285711E-3)
,((double)3.6160714285714286E-3)
,((double)2.1696428571428571E-2)
,((double)0.)
,((double)2.1696428571428571E-2)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)3.2544642857142855E-2)
,((double)6.5089285714285711E-2)

,((double)6.0267857142857146E-3)
,((double)-3.3482142857142857E-4)
,((double)1.8080357142857143E-3)
,((double)1.40625E-2)
,((double)3.2142857142857142E-3)
,((double)-2.0089285714285714E-4)
,((double)-2.6116071428571429E-3)
,((double)-6.8303571428571432E-3)
,((double)1.0044642857142858E-2)
,((double)9.6428571428571423E-3)
,((double)2.6116071428571429E-3)
,((double)1.3392857142857142E-2)
,((double)2.4107142857142856E-3)
,((double)-1.40625E-2)
,((double)4.0178571428571432E-2)
,((double)2.0089285714285716E-2)
,((double)-1.0044642857142858E-2)
,((double)-2.2098214285714286E-3)
,((double)-2.8124999999999999E-3)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-7.0312500000000002E-3)
,((double)7.0312500000000002E-3)
,((double)-4.2187500000000003E-3)
,((double)-2.1696428571428571E-2)
,((double)-4.3392857142857143E-2)
,((double)-1.8080357142857143E-3)
,((double)9.0401785714285723E-3)
,((double)1.2656250000000001E-2)
,((double)-1.4464285714285714E-2)
,((double)-3.2544642857142855E-2)
,((double)-1.6071428571428571E-3)
,((double)-2.0089285714285716E-2)
,((double)0.)
,((double)2.1696428571428571E-2)
,((double)0.)
,((double)-1.8080357142857145E-2)
,((double)3.6160714285714286E-3)
,((double)-3.6160714285714286E-3)
,((double)7.2321428571428571E-3)
,((double)1.0848214285714286E-2)
,((double)3.8169642857142855E-3)
,((double)2.0089285714285712E-3)
,((double)3.8169642857142855E-3)
,((double)-1.2656250000000001E-2)
,((double)3.6160714285714289E-2)
,((double)3.6160714285714289E-2)
,((double)-1.2656250000000001E-2)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)4.3392857142857143E-2)
,((double)-4.0178571428571428E-4)
,((double)-1.0044642857142856E-3)
,((double)-1.0044642857142856E-3)
,((double)3.6160714285714286E-3)
,((double)-7.2321428571428571E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)-7.2321428571428571E-3)
,((double)3.6160714285714286E-3)
,((double)-1.0848214285714286E-2)
,((double)4.0178571428571428E-4)
,((double)1.0044642857142856E-3)
,((double)1.0044642857142856E-3)
,((double)-3.6160714285714286E-3)
,((double)7.2321428571428571E-3)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)7.2321428571428571E-3)
,((double)-3.6160714285714286E-3)
,((double)1.0848214285714286E-2)
,((double)1.0044642857142856E-3)
,((double)4.0178571428571425E-3)
,((double)-2.0089285714285714E-4)
,((double)1.2656250000000001E-2)
,((double)-1.4464285714285714E-2)
,((double)-3.6160714285714286E-3)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)2.3504464285714285E-2)
,((double)2.1696428571428571E-2)
,((double)-4.8214285714285711E-3)
,((double)-6.0267857142857146E-3)
,((double)-3.6160714285714286E-3)
,((double)0.)
,((double)-2.1696428571428571E-2)
,((double)-3.2544642857142855E-2)
,((double)1.0848214285714286E-2)
,((double)0.)
,((double)-2.1696428571428571E-2)
,((double)-6.5089285714285711E-2)

,((double)0.)
,((double)-2.3437499999999999E-3)
,((double)1.4062499999999999E-3)
,((double)2.8124999999999999E-3)
,((double)-2.0089285714285714E-4)
,((double)-1.4866071428571428E-2)
,((double)1.4062499999999999E-3)
,((double)-2.6116071428571429E-3)
,((double)2.2098214285714286E-3)
,((double)-1.2053571428571428E-3)
,((double)2.4107142857142856E-3)
,((double)1.3392857142857142E-2)
,((double)2.6116071428571429E-3)
,((double)-1.0044642857142858E-2)
,((double)2.0089285714285716E-2)
,((double)4.0178571428571432E-2)
,((double)-1.40625E-2)
,((double)-2.8124999999999999E-3)
,((double)-2.2098214285714286E-3)
,((double)1.2053571428571429E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.2053571428571428E-3)
,((double)1.1049107142857144E-2)
,((double)-2.0089285714285714E-4)
,((double)-7.2321428571428571E-3)
,((double)-1.8080357142857143E-3)
,((double)4.700892857142857E-2)
,((double)-1.8080357142857143E-3)
,((double)5.4241071428571428E-3)
,((double)-5.4241071428571428E-3)
,((double)0.)
,((double)-3.6160714285714286E-3)
,((double)-2.2098214285714287E-2)
,((double)-3.8169642857142855E-3)
,((double)1.4464285714285714E-2)
,((double)-1.8080357142857145E-2)
,((double)-7.2321428571428578E-2)
,((double)1.4464285714285714E-2)
,((double)0.)
,((double)5.4241071428571428E-3)
,((double)-1.0848214285714286E-2)
,((double)7.4330357142857141E-3)
,((double)4.0178571428571425E-3)
,((double)6.0267857142857146E-3)
,((double)-2.3504464285714285E-2)
,((double)3.6160714285714289E-2)
,((double)0.10848214285714286)
,((double)-5.4241071428571428E-3)
,((double)5.4241071428571428E-3)
,((double)-1.0848214285714286E-2)
,((double)6.5089285714285711E-2)
,((double)-2.8124999999999999E-3)
,((double)-5.0223214285714289E-3)
,((double)-1.2053571428571429E-2)
,((double)3.6160714285714286E-3)
,((double)-1.8080357142857143E-3)
,((double)1.0848214285714286E-2)
,((double)-2.7120535714285715E-2)
,((double)-2.7120535714285715E-2)
,((double)1.0848214285714286E-2)
,((double)-2.1696428571428571E-2)
,((double)2.8124999999999999E-3)
,((double)5.0223214285714289E-3)
,((double)1.2053571428571429E-2)
,((double)-3.6160714285714286E-3)
,((double)1.8080357142857143E-3)
,((double)-1.0848214285714286E-2)
,((double)2.7120535714285715E-2)
,((double)2.7120535714285715E-2)
,((double)-1.0848214285714286E-2)
,((double)2.1696428571428571E-2)
,((double)-2.0089285714285714E-4)
,((double)2.0089285714285712E-3)
,((double)-6.0267857142857146E-3)
,((double)1.8080357142857143E-3)
,((double)-3.6160714285714286E-3)
,((double)2.1696428571428571E-2)
,((double)-5.4241071428571428E-3)
,((double)5.4241071428571428E-3)
,((double)1.0848214285714286E-2)
,((double)2.1696428571428571E-2)
,((double)-7.2321428571428571E-3)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)2.1696428571428571E-2)
,((double)-3.2544642857142855E-2)
,((double)-0.13017857142857142)
,((double)1.0848214285714286E-2)
,((double)-1.0848214285714286E-2)
,((double)0.)
,((double)-8.6785714285714285E-2)

,((double)0.)
,((double)1.4062499999999999E-3)
,((double)-2.3437499999999999E-3)
,((double)2.2098214285714286E-3)
,((double)-2.6116071428571429E-3)
,((double)1.4062499999999999E-3)
,((double)-1.4866071428571428E-2)
,((double)-2.0089285714285714E-4)
,((double)2.8124999999999999E-3)
,((double)-1.2053571428571428E-3)
,((double)-1.8080357142857143E-3)
,((double)-6.0267857142857146E-3)
,((double)3.3482142857142857E-4)
,((double)6.8303571428571432E-3)
,((double)-1.0044642857142858E-2)
,((double)-1.40625E-2)
,((double)-3.2142857142857142E-3)
,((double)2.0089285714285714E-4)
,((double)2.6116071428571429E-3)
,((double)-9.6428571428571423E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-1.2053571428571428E-3)
,((double)-6.4285714285714285E-3)
,((double)1.0044642857142856E-3)
,((double)3.6160714285714286E-3)
,((double)9.0401785714285723E-3)
,((double)-1.8080357142857143E-3)
,((double)1.4464285714285714E-2)
,((double)-5.4241071428571428E-3)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)3.0133928571428573E-3)
,((double)1.1049107142857144E-2)
,((double)1.0044642857142856E-3)
,((double)-1.2656250000000001E-2)
,((double)3.6160714285714286E-3)
,((double)1.4464285714285714E-2)
,((double)3.6160714285714286E-3)
,((double)5.4241071428571428E-3)
,((double)-5.4241071428571428E-3)
,((double)0.)
,((double)1.4062499999999999E-3)
,((double)-5.0223214285714289E-3)
,((double)-1.2053571428571429E-2)
,((double)-1.8080357142857143E-3)
,((double)-1.2656250000000001E-2)
,((double)-5.4241071428571428E-3)
,((double)5.424107142857143E-2)
,((double)0.)
,((double)-5.4241071428571428E-3)
,((double)1.0848214285714286E-2)
,((double)7.4330357142857141E-3)
,((double)7.633928571428571E-3)
,((double)2.4107142857142858E-2)
,((double)-7.2321428571428571E-3)
,((double)-1.8080357142857143E-3)
,((double)-2.7120535714285715E-2)
,((double)0.10848214285714286)
,((double)5.424107142857143E-2)
,((double)-2.7120535714285715E-2)
,((double)5.424107142857143E-2)
,((double)-7.4330357142857141E-3)
,((double)-7.633928571428571E-3)
,((double)-2.4107142857142858E-2)
,((double)7.2321428571428571E-3)
,((double)1.8080357142857143E-3)
,((double)2.7120535714285715E-2)
,((double)-0.10848214285714286)
,((double)-5.424107142857143E-2)
,((double)2.7120535714285715E-2)
,((double)-5.424107142857143E-2)
,((double)2.2098214285714286E-3)
,((double)2.0089285714285714E-4)
,((double)1.2053571428571429E-2)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)-5.4241071428571428E-3)
,((double)5.424107142857143E-2)
,((double)0.)
,((double)-5.4241071428571428E-3)
,((double)1.0848214285714286E-2)
,((double)-3.6160714285714286E-3)
,((double)4.8214285714285711E-3)
,((double)0.)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)-0.10848214285714286)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)-2.1696428571428571E-2)

,((double)6.0267857142857146E-3)
,((double)1.8080357142857143E-3)
,((double)-3.3482142857142857E-4)
,((double)1.0044642857142858E-2)
,((double)-6.8303571428571432E-3)
,((double)-2.6116071428571429E-3)
,((double)-2.0089285714285714E-4)
,((double)3.2142857142857142E-3)
,((double)1.40625E-2)
,((double)9.6428571428571423E-3)
,((double)-1.4062499999999999E-3)
,((double)0.)
,((double)2.3437499999999999E-3)
,((double)2.6116071428571429E-3)
,((double)-2.2098214285714286E-3)
,((double)-2.8124999999999999E-3)
,((double)2.0089285714285714E-4)
,((double)1.4866071428571428E-2)
,((double)-1.4062499999999999E-3)
,((double)1.2053571428571428E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-1.1049107142857144E-2)
,((double)-3.0133928571428573E-3)
,((double)-1.0044642857142856E-3)
,((double)-3.6160714285714286E-3)
,((double)1.2656250000000001E-2)
,((double)5.4241071428571428E-3)
,((double)-5.4241071428571428E-3)
,((double)-3.6160714285714286E-3)
,((double)-1.4464285714285714E-2)
,((double)0.)
,((double)6.4285714285714285E-3)
,((double)1.2053571428571428E-3)
,((double)-1.0044642857142856E-3)
,((double)-9.0401785714285723E-3)
,((double)-3.6160714285714286E-3)
,((double)0.)
,((double)5.4241071428571428E-3)
,((double)-1.4464285714285714E-2)
,((double)1.8080357142857143E-3)
,((double)-1.0848214285714286E-2)
,((double)-2.0089285714285714E-4)
,((double)-2.2098214285714286E-3)
,((double)-1.2053571428571429E-2)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)5.4241071428571428E-3)
,((double)0.)
,((double)-5.424107142857143E-2)
,((double)5.4241071428571428E-3)
,((double)-1.0848214285714286E-2)
,((double)7.633928571428571E-3)
,((double)7.4330357142857141E-3)
,((double)2.4107142857142858E-2)
,((double)-1.8080357142857143E-3)
,((double)-7.2321428571428571E-3)
,((double)-2.7120535714285715E-2)
,((double)5.424107142857143E-2)
,((double)0.10848214285714286)
,((double)-2.7120535714285715E-2)
,((double)5.424107142857143E-2)
,((double)-7.633928571428571E-3)
,((double)-7.4330357142857141E-3)
,((double)-2.4107142857142858E-2)
,((double)1.8080357142857143E-3)
,((double)7.2321428571428571E-3)
,((double)2.7120535714285715E-2)
,((double)-5.424107142857143E-2)
,((double)-0.10848214285714286)
,((double)2.7120535714285715E-2)
,((double)-5.424107142857143E-2)
,((double)5.0223214285714289E-3)
,((double)-1.4062499999999999E-3)
,((double)1.2053571428571429E-2)
,((double)1.2656250000000001E-2)
,((double)1.8080357142857143E-3)
,((double)5.4241071428571428E-3)
,((double)0.)
,((double)-5.424107142857143E-2)
,((double)5.4241071428571428E-3)
,((double)-1.0848214285714286E-2)
,((double)-4.8214285714285711E-3)
,((double)3.6160714285714286E-3)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)0.)
,((double)0.10848214285714286)
,((double)-1.0848214285714286E-2)
,((double)2.1696428571428571E-2)

,((double)-1.3392857142857142E-2)
,((double)-2.4107142857142856E-3)
,((double)-2.6116071428571429E-3)
,((double)-2.0089285714285716E-2)
,((double)1.0044642857142858E-2)
,((double)2.2098214285714286E-3)
,((double)2.8124999999999999E-3)
,((double)1.40625E-2)
,((double)-4.0178571428571432E-2)
,((double)-1.2053571428571429E-2)
,((double)2.3437499999999999E-3)
,((double)0.)
,((double)-1.4062499999999999E-3)
,((double)2.0089285714285714E-4)
,((double)-2.8124999999999999E-3)
,((double)-2.2098214285714286E-3)
,((double)2.6116071428571429E-3)
,((double)-1.4062499999999999E-3)
,((double)1.4866071428571428E-2)
,((double)1.2053571428571428E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.2098214285714287E-2)
,((double)3.6160714285714286E-3)
,((double)3.8169642857142855E-3)
,((double)1.8080357142857145E-2)
,((double)-1.4464285714285714E-2)
,((double)-5.4241071428571428E-3)
,((double)0.)
,((double)-1.4464285714285714E-2)
,((double)7.2321428571428578E-2)
,((double)1.0848214285714286E-2)
,((double)-1.1049107142857144E-2)
,((double)-1.2053571428571428E-3)
,((double)2.0089285714285714E-4)
,((double)1.8080357142857143E-3)
,((double)7.2321428571428571E-3)
,((double)5.4241071428571428E-3)
,((double)-5.4241071428571428E-3)
,((double)1.8080357142857143E-3)
,((double)-4.700892857142857E-2)
,((double)0.)
,((double)-2.0089285714285712E-3)
,((double)2.0089285714285714E-4)
,((double)6.0267857142857146E-3)
,((double)3.6160714285714286E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.0848214285714286E-2)
,((double)-5.4241071428571428E-3)
,((double)5.4241071428571428E-3)
,((double)-2.1696428571428571E-2)
,((double)-2.1696428571428571E-2)
,((double)-5.0223214285714289E-3)
,((double)-2.8124999999999999E-3)
,((double)-1.2053571428571429E-2)
,((double)-1.8080357142857143E-3)
,((double)3.6160714285714286E-3)
,((double)1.0848214285714286E-2)
,((double)-2.7120535714285715E-2)
,((double)-2.7120535714285715E-2)
,((double)1.0848214285714286E-2)
,((double)-2.1696428571428571E-2)
,((double)5.0223214285714289E-3)
,((double)2.8124999999999999E-3)
,((double)1.2053571428571429E-2)
,((double)1.8080357142857143E-3)
,((double)-3.6160714285714286E-3)
,((double)-1.0848214285714286E-2)
,((double)2.7120535714285715E-2)
,((double)2.7120535714285715E-2)
,((double)-1.0848214285714286E-2)
,((double)2.1696428571428571E-2)
,((double)-4.0178571428571425E-3)
,((double)-7.4330357142857141E-3)
,((double)-6.0267857142857146E-3)
,((double)-3.6160714285714289E-2)
,((double)2.3504464285714285E-2)
,((double)1.0848214285714286E-2)
,((double)-5.4241071428571428E-3)
,((double)5.4241071428571428E-3)
,((double)-0.10848214285714286)
,((double)-6.5089285714285711E-2)
,((double)6.0267857142857146E-3)
,((double)7.2321428571428571E-3)
,((double)0.)
,((double)3.2544642857142855E-2)
,((double)-2.1696428571428571E-2)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)-1.0848214285714286E-2)
,((double)0.13017857142857142)
,((double)8.6785714285714285E-2)

,((double)-2.6785714285714286E-3)
,((double)-1.4732142857142858E-3)
,((double)-1.4732142857142858E-3)
,((double)-1.2053571428571429E-2)
,((double)9.6428571428571423E-3)
,((double)-1.2053571428571428E-3)
,((double)-1.2053571428571428E-3)
,((double)9.6428571428571423E-3)
,((double)-1.2053571428571429E-2)
,((double)2.8928571428571428E-2)
,((double)1.4732142857142858E-3)
,((double)2.6785714285714286E-3)
,((double)1.4732142857142858E-3)
,((double)-9.6428571428571423E-3)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)-9.6428571428571423E-3)
,((double)1.2053571428571428E-3)
,((double)1.2053571428571428E-3)
,((double)-2.8928571428571428E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)6.0267857142857146E-3)
,((double)4.8214285714285711E-3)
,((double)-3.6160714285714286E-3)
,((double)-1.0848214285714286E-2)
,((double)-3.2544642857142855E-2)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)-0.13017857142857142)
,((double)-4.8214285714285711E-3)
,((double)-6.0267857142857146E-3)
,((double)3.6160714285714286E-3)
,((double)3.2544642857142855E-2)
,((double)1.0848214285714286E-2)
,((double)-1.0848214285714286E-2)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)0.)
,((double)0.13017857142857142)
,((double)8.4375000000000006E-3)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)-2.1696428571428571E-2)
,((double)4.3392857142857143E-2)
,((double)6.5089285714285711E-2)
,((double)1.0848214285714286E-2)
,((double)-1.0848214285714286E-2)
,((double)-2.1696428571428571E-2)
,((double)0.17357142857142857)
,((double)4.8214285714285711E-3)
,((double)4.8214285714285711E-3)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)-1.0848214285714286E-2)
,((double)-2.1696428571428571E-2)
,((double)5.424107142857143E-2)
,((double)5.424107142857143E-2)
,((double)-2.1696428571428571E-2)
,((double)4.3392857142857143E-2)
,((double)-4.8214285714285711E-3)
,((double)-4.8214285714285711E-3)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)2.1696428571428571E-2)
,((double)-5.424107142857143E-2)
,((double)-5.424107142857143E-2)
,((double)2.1696428571428571E-2)
,((double)-4.3392857142857143E-2)
,((double)6.0267857142857146E-3)
,((double)-8.4375000000000006E-3)
,((double)0.)
,((double)-4.3392857142857143E-2)
,((double)2.1696428571428571E-2)
,((double)2.1696428571428571E-2)
,((double)1.0848214285714286E-2)
,((double)-1.0848214285714286E-2)
,((double)-6.5089285714285711E-2)
,((double)-0.17357142857142857)
,((double)-1.4464285714285714E-2)
,((double)1.4464285714285714E-2)
,((double)0.)
,((double)6.5089285714285711E-2)
,((double)-6.5089285714285711E-2)
,((double)-8.6785714285714285E-2)
,((double)-2.1696428571428571E-2)
,((double)2.1696428571428571E-2)
,((double)8.6785714285714285E-2)
,((double)0.)

};

static const double tria_L1dy_L1[9] = {
((double)-0.16666666666666666)
,((double)-0.16666666666666666)
,((double)-0.16666666666666666)
,((double)0.)
,((double)0.)
,((double)0.)

,((double)0.16666666666666666)
,((double)0.16666666666666666)
,((double)0.16666666666666666)

};

static const double tria_L2dy_L2[36] = {
((double)-6.6666666666666666E-2)
,((double)3.3333333333333333E-2)
,((double)3.3333333333333333E-2)
,((double)-0.10000000000000001)
,((double)3.3333333333333333E-2)
,((double)-0.10000000000000001)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)

,((double)-3.3333333333333333E-2)
,((double)-3.3333333333333333E-2)
,((double)6.6666666666666666E-2)
,((double)-3.3333333333333333E-2)
,((double)0.10000000000000001)
,((double)0.10000000000000001)

,((double)3.3333333333333333E-2)
,((double)-6.6666666666666666E-2)
,((double)3.3333333333333333E-2)
,((double)-0.26666666666666666)
,((double)-0.26666666666666666)
,((double)-0.13333333333333333)

,((double)-3.3333333333333333E-2)
,((double)6.6666666666666666E-2)
,((double)-3.3333333333333333E-2)
,((double)0.26666666666666666)
,((double)0.26666666666666666)
,((double)0.13333333333333333)

,((double)0.10000000000000001)
,((double)0.)
,((double)-0.10000000000000001)
,((double)0.13333333333333333)
,((double)-0.13333333333333333)
,((double)0.)

};

static const double tria_L3dy_L3[100] = {
((double)-3.8095238095238099E-2)
,((double)-1.1309523809523809E-2)
,((double)-1.1309523809523809E-2)
,((double)-6.160714285714286E-2)
,((double)3.4821428571428573E-2)
,((double)-1.3392857142857142E-2)
,((double)-1.3392857142857142E-2)
,((double)3.4821428571428573E-2)
,((double)-6.160714285714286E-2)
,((double)1.607142857142857E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)

,((double)1.1309523809523809E-2)
,((double)1.1309523809523809E-2)
,((double)3.8095238095238099E-2)
,((double)1.3392857142857142E-2)
,((double)1.3392857142857142E-2)
,((double)-3.4821428571428573E-2)
,((double)6.160714285714286E-2)
,((double)6.160714285714286E-2)
,((double)-3.4821428571428573E-2)
,((double)-1.607142857142857E-2)

,((double)2.6785714285714286E-3)
,((double)2.1428571428571429E-2)
,((double)-1.3392857142857142E-2)
,((double)-0.19285714285714287)
,((double)-2.4107142857142858E-2)
,((double)7.2321428571428578E-2)
,((double)4.8214285714285716E-2)
,((double)4.8214285714285716E-2)
,((double)-9.6428571428571433E-2)
,((double)-0.24107142857142858)

,((double)-1.3392857142857142E-2)
,((double)-5.8928571428571427E-2)
,((double)-1.3392857142857142E-2)
,((double)7.2321428571428578E-2)
,((double)-0.19285714285714287)
,((double)-0.19285714285714287)
,((double)7.2321428571428578E-2)
,((double)2.4107142857142858E-2)
,((double)2.4107142857142858E-2)
,((double)-9.6428571428571433E-2)

,((double)1.3392857142857142E-2)
,((double)5.8928571428571427E-2)
,((double)1.3392857142857142E-2)
,((double)-7.2321428571428578E-2)
,((double)0.19285714285714287)
,((double)0.19285714285714287)
,((double)-7.2321428571428578E-2)
,((double)-2.4107142857142858E-2)
,((double)-2.4107142857142858E-2)
,((double)9.6428571428571433E-2)

,((double)1.3392857142857142E-2)
,((double)-2.1428571428571429E-2)
,((double)-2.6785714285714286E-3)
,((double)-4.8214285714285716E-2)
,((double)-7.2321428571428578E-2)
,((double)2.4107142857142858E-2)
,((double)0.19285714285714287)
,((double)9.6428571428571433E-2)
,((double)-4.8214285714285716E-2)
,((double)0.24107142857142858)

,((double)-3.4821428571428573E-2)
,((double)0.)
,((double)-6.160714285714286E-2)
,((double)-4.8214285714285716E-2)
,((double)-2.4107142857142858E-2)
,((double)2.4107142857142858E-2)
,((double)-9.6428571428571433E-2)
,((double)0.)
,((double)9.6428571428571433E-2)
,((double)0.14464285714285716)

,((double)6.160714285714286E-2)
,((double)0.)
,((double)3.4821428571428573E-2)
,((double)9.6428571428571433E-2)
,((double)-2.4107142857142858E-2)
,((double)2.4107142857142858E-2)
,((double)4.8214285714285716E-2)
,((double)-9.6428571428571433E-2)
,((double)0.)
,((double)-0.14464285714285716)

,((double)-1.607142857142857E-2)
,((double)0.)
,((double)1.607142857142857E-2)
,((double)0.24107142857142858)
,((double)9.6428571428571433E-2)
,((double)-9.6428571428571433E-2)
,((double)-0.24107142857142858)
,((double)-0.14464285714285716)
,((double)0.14464285714285716)
,((double)0.)

};

static const double tria_L1_L1dy_L1[27] = {
((double)-8.3333333333333329E-2)
,((double)-4.1666666666666664E-2)
,((double)-4.1666666666666664E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)8.3333333333333329E-2)
,((double)4.1666666666666664E-2)
,((double)4.1666666666666664E-2)
,((double)-4.1666666666666664E-2)
,((double)-8.3333333333333329E-2)
,((double)-4.1666666666666664E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)4.1666666666666664E-2)
,((double)8.3333333333333329E-2)
,((double)4.1666666666666664E-2)

,((double)-4.1666666666666664E-2)
,((double)-4.1666666666666664E-2)
,((double)-8.3333333333333329E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)4.1666666666666664E-2)
,((double)4.1666666666666664E-2)
,((double)8.3333333333333329E-2)

};

static const double tria_L2_L2dy_L2[216] = {
((double)-3.0952380952380953E-2)
,((double)3.5714285714285713E-3)
,((double)3.5714285714285713E-3)
,((double)-1.9047619047619049E-2)
,((double)-4.7619047619047623E-3)
,((double)-1.9047619047619049E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-7.1428571428571426E-3)
,((double)4.3650793650793652E-3)
,((double)-3.5714285714285713E-3)
,((double)-6.3492063492063492E-3)
,((double)-7.9365079365079361E-3)
,((double)-1.2698412698412698E-2)
,((double)-9.5238095238095247E-3)
,((double)6.3492063492063492E-3)
,((double)-1.5873015873015873E-3)
,((double)1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)6.3492063492063492E-3)
,((double)9.5238095238095247E-3)
,((double)-6.3492063492063492E-3)
,((double)1.5873015873015873E-3)
,((double)-1.2698412698412698E-2)
,((double)-1.9047619047619049E-2)
,((double)-6.3492063492063492E-3)
,((double)3.8095238095238099E-2)
,((double)-7.9365079365079361E-3)
,((double)0.)
,((double)2.5396825396825397E-2)
,((double)1.2698412698412698E-2)
,((double)3.1746031746031744E-2)
,((double)3.5714285714285713E-3)
,((double)7.1428571428571426E-3)
,((double)-4.3650793650793652E-3)
,((double)1.2698412698412698E-2)
,((double)6.3492063492063492E-3)
,((double)7.9365079365079361E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)4.3650793650793652E-3)
,((double)-7.1428571428571426E-3)
,((double)-3.5714285714285713E-3)
,((double)-6.3492063492063492E-3)
,((double)-1.2698412698412698E-2)
,((double)-7.9365079365079361E-3)
,((double)6.3492063492063492E-3)
,((double)-4.7619047619047616E-2)
,((double)6.3492063492063492E-3)
,((double)-1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)4.7619047619047616E-2)
,((double)-6.3492063492063492E-3)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-6.3492063492063492E-3)
,((double)-7.9365079365079361E-3)
,((double)0.)
,((double)7.9365079365079361E-3)
,((double)-6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)0.)

,((double)3.5714285714285713E-3)
,((double)-4.3650793650793652E-3)
,((double)7.1428571428571426E-3)
,((double)7.9365079365079361E-3)
,((double)6.3492063492063492E-3)
,((double)1.2698412698412698E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.5714285714285713E-3)
,((double)-3.5714285714285713E-3)
,((double)3.0952380952380953E-2)
,((double)4.7619047619047623E-3)
,((double)1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-1.5873015873015873E-3)
,((double)6.3492063492063492E-3)
,((double)-9.5238095238095247E-3)
,((double)1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)6.3492063492063492E-3)
,((double)1.5873015873015873E-3)
,((double)-6.3492063492063492E-3)
,((double)9.5238095238095247E-3)
,((double)-1.9047619047619049E-2)
,((double)-1.2698412698412698E-2)
,((double)-6.3492063492063492E-3)
,((double)0.)
,((double)7.9365079365079361E-3)
,((double)-3.8095238095238099E-2)
,((double)-1.2698412698412698E-2)
,((double)-2.5396825396825397E-2)
,((double)-3.1746031746031744E-2)

,((double)-1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)7.9365079365079361E-3)
,((double)-6.3492063492063489E-2)
,((double)-6.3492063492063492E-3)
,((double)-3.1746031746031744E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)4.7619047619047623E-3)
,((double)-3.8095238095238099E-2)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)1.2698412698412698E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-0.15238095238095239)
,((double)-7.6190476190476197E-2)
,((double)-5.0793650793650794E-2)
,((double)-1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)0.15238095238095239)
,((double)7.6190476190476197E-2)
,((double)5.0793650793650794E-2)
,((double)2.5396825396825397E-2)
,((double)-6.3492063492063492E-3)
,((double)-1.2698412698412698E-2)
,((double)0.10158730158730159)
,((double)0.)
,((double)2.5396825396825397E-2)

,((double)-4.7619047619047623E-3)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)3.8095238095238099E-2)
,((double)-6.3492063492063492E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-7.9365079365079361E-3)
,((double)-1.2698412698412698E-2)
,((double)1.9047619047619049E-2)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063489E-2)
,((double)3.1746031746031744E-2)
,((double)1.9047619047619049E-2)
,((double)-1.9047619047619049E-2)
,((double)1.2698412698412698E-2)
,((double)-7.6190476190476197E-2)
,((double)-0.15238095238095239)
,((double)-5.0793650793650794E-2)
,((double)-1.9047619047619049E-2)
,((double)1.9047619047619049E-2)
,((double)-1.2698412698412698E-2)
,((double)7.6190476190476197E-2)
,((double)0.15238095238095239)
,((double)5.0793650793650794E-2)
,((double)1.2698412698412698E-2)
,((double)6.3492063492063492E-3)
,((double)-2.5396825396825397E-2)
,((double)0.)
,((double)-0.10158730158730159)
,((double)-2.5396825396825397E-2)

,((double)-1.9047619047619049E-2)
,((double)7.9365079365079361E-3)
,((double)1.2698412698412698E-2)
,((double)-3.1746031746031744E-2)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063489E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-1.2698412698412698E-2)
,((double)-7.9365079365079361E-3)
,((double)1.9047619047619049E-2)
,((double)6.3492063492063492E-3)
,((double)3.1746031746031744E-2)
,((double)6.3492063492063489E-2)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)6.3492063492063492E-3)
,((double)-5.0793650793650794E-2)
,((double)-5.0793650793650794E-2)
,((double)-5.0793650793650794E-2)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)-6.3492063492063492E-3)
,((double)5.0793650793650794E-2)
,((double)5.0793650793650794E-2)
,((double)5.0793650793650794E-2)
,((double)3.1746031746031744E-2)
,((double)0.)
,((double)-3.1746031746031744E-2)
,((double)2.5396825396825397E-2)
,((double)-2.5396825396825397E-2)
,((double)0.)

};

static const double tria_L3_L3dy_L3[1000] = {
((double)-1.7708333333333333E-2)
,((double)-1.488095238095238E-3)
,((double)-1.488095238095238E-3)
,((double)-1.3392857142857142E-2)
,((double)6.0267857142857146E-3)
,((double)0.)
,((double)0.)
,((double)6.0267857142857146E-3)
,((double)-1.3392857142857142E-2)
,((double)-2.6785714285714286E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.976190476190476E-3)
,((double)8.8541666666666662E-4)
,((double)1.488095238095238E-3)
,((double)2.3437499999999999E-3)
,((double)-1.4062499999999999E-3)
,((double)-1.8080357142857143E-3)
,((double)2.4107142857142856E-3)
,((double)2.6116071428571429E-3)
,((double)3.3482142857142857E-4)
,((double)1.4732142857142858E-3)
,((double)-5.3571428571428572E-3)
,((double)-6.6964285714285718E-5)
,((double)6.6964285714285718E-5)
,((double)-4.0178571428571425E-3)
,((double)5.0223214285714289E-3)
,((double)2.2098214285714286E-3)
,((double)-2.0089285714285714E-4)
,((double)1.0044642857142856E-3)
,((double)-2.0089285714285712E-3)
,((double)6.0267857142857146E-3)
,((double)0.)
,((double)-2.3437499999999999E-3)
,((double)-4.0178571428571428E-4)
,((double)5.0223214285714289E-3)
,((double)-7.633928571428571E-3)
,((double)-7.4330357142857141E-3)
,((double)2.8124999999999999E-3)
,((double)4.0178571428571428E-4)
,((double)1.0044642857142856E-3)
,((double)-4.8214285714285711E-3)
,((double)0.)
,((double)2.3437499999999999E-3)
,((double)4.0178571428571428E-4)
,((double)-5.0223214285714289E-3)
,((double)7.633928571428571E-3)
,((double)7.4330357142857141E-3)
,((double)-2.8124999999999999E-3)
,((double)-4.0178571428571428E-4)
,((double)-1.0044642857142856E-3)
,((double)4.8214285714285711E-3)
,((double)0.)
,((double)-1.4062499999999999E-3)
,((double)-6.6964285714285718E-5)
,((double)-2.0089285714285712E-3)
,((double)-2.0089285714285714E-4)
,((double)1.4062499999999999E-3)
,((double)7.4330357142857141E-3)
,((double)3.8169642857142855E-3)
,((double)-4.0178571428571425E-3)
,((double)8.4375000000000006E-3)
,((double)-1.2053571428571429E-2)
,((double)-1.8080357142857143E-3)
,((double)-2.2767857142857143E-3)
,((double)-1.1049107142857144E-2)
,((double)6.4285714285714285E-3)
,((double)3.0133928571428573E-3)
,((double)-3.6160714285714286E-3)
,((double)-1.6071428571428571E-3)
,((double)-7.0312500000000002E-3)
,((double)-4.8214285714285711E-3)
,((double)2.6785714285714284E-2)
,((double)2.4107142857142856E-3)
,((double)2.2767857142857143E-3)
,((double)2.2098214285714287E-2)
,((double)-1.1049107142857144E-2)
,((double)-1.2053571428571428E-3)
,((double)1.2053571428571428E-3)
,((double)-7.0312500000000002E-3)
,((double)2.0089285714285716E-2)
,((double)6.0267857142857146E-3)
,((double)5.3571428571428572E-3)
,((double)1.4732142857142858E-3)
,((double)0.)
,((double)6.0267857142857146E-3)
,((double)-4.8214285714285711E-3)
,((double)-3.6160714285714286E-3)
,((double)-7.2321428571428571E-3)
,((double)-4.8214285714285711E-3)
,((double)6.0267857142857146E-3)
,((double)-1.4464285714285714E-2)
,((double)-1.488095238095238E-3)
,((double)-2.976190476190476E-3)
,((double)-8.8541666666666662E-4)
,((double)-2.6116071428571429E-3)
,((double)-3.3482142857142857E-4)
,((double)-2.3437499999999999E-3)
,((double)1.4062499999999999E-3)
,((double)1.8080357142857143E-3)
,((double)-2.4107142857142856E-3)
,((double)-1.4732142857142858E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)8.8541666666666662E-4)
,((double)2.976190476190476E-3)
,((double)1.488095238095238E-3)
,((double)-1.4062499999999999E-3)
,((double)2.3437499999999999E-3)
,((double)3.3482142857142857E-4)
,((double)2.6116071428571429E-3)
,((double)2.4107142857142856E-3)
,((double)-1.8080357142857143E-3)
,((double)1.4732142857142858E-3)
,((double)-6.6964285714285718E-5)
,((double)1.2053571428571429E-2)
,((double)1.4062499999999999E-3)
,((double)-6.0267857142857146E-3)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)-6.0267857142857146E-3)
,((double)-2.0089285714285714E-4)
,((double)-3.8169642857142855E-3)
,((double)0.)
,((double)-2.3437499999999999E-3)
,((double)-3.214285714285714E-2)
,((double)-2.3437499999999999E-3)
,((double)1.2053571428571429E-2)
,((double)-2.4107142857142858E-2)
,((double)-2.4107142857142858E-2)
,((double)1.2053571428571429E-2)
,((double)1.0044642857142856E-3)
,((double)1.0044642857142856E-3)
,((double)0.)
,((double)2.3437499999999999E-3)
,((double)3.214285714285714E-2)
,((double)2.3437499999999999E-3)
,((double)-1.2053571428571429E-2)
,((double)2.4107142857142858E-2)
,((double)2.4107142857142858E-2)
,((double)-1.2053571428571429E-2)
,((double)-1.0044642857142856E-3)
,((double)-1.0044642857142856E-3)
,((double)0.)
,((double)-1.4062499999999999E-3)
,((double)-1.2053571428571429E-2)
,((double)6.6964285714285718E-5)
,((double)6.0267857142857146E-3)
,((double)-1.2053571428571429E-2)
,((double)-1.2053571428571429E-2)
,((double)6.0267857142857146E-3)
,((double)3.8169642857142855E-3)
,((double)2.0089285714285714E-4)
,((double)0.)
,((double)-1.8080357142857143E-3)
,((double)0.)
,((double)-2.4107142857142856E-3)
,((double)2.0089285714285714E-4)
,((double)-1.0044642857142856E-3)
,((double)1.0044642857142856E-3)
,((double)-3.8169642857142855E-3)
,((double)0.)
,((double)4.2187500000000003E-3)
,((double)3.6160714285714286E-3)
,((double)2.4107142857142856E-3)
,((double)0.)
,((double)1.8080357142857143E-3)
,((double)3.8169642857142855E-3)
,((double)-1.0044642857142856E-3)
,((double)1.0044642857142856E-3)
,((double)-2.0089285714285714E-4)
,((double)-4.2187500000000003E-3)
,((double)0.)
,((double)-3.6160714285714286E-3)
,((double)1.4732142857142858E-3)
,((double)0.)
,((double)-1.4732142857142858E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-3.6160714285714286E-3)
,((double)3.6160714285714286E-3)
,((double)0.)

,((double)-1.488095238095238E-3)
,((double)-8.8541666666666662E-4)
,((double)-2.976190476190476E-3)
,((double)-2.4107142857142856E-3)
,((double)1.8080357142857143E-3)
,((double)1.4062499999999999E-3)
,((double)-2.3437499999999999E-3)
,((double)-3.3482142857142857E-4)
,((double)-2.6116071428571429E-3)
,((double)-1.4732142857142858E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.488095238095238E-3)
,((double)1.488095238095238E-3)
,((double)1.7708333333333333E-2)
,((double)0.)
,((double)0.)
,((double)-6.0267857142857146E-3)
,((double)1.3392857142857142E-2)
,((double)1.3392857142857142E-2)
,((double)-6.0267857142857146E-3)
,((double)2.6785714285714286E-3)
,((double)6.6964285714285718E-5)
,((double)1.4062499999999999E-3)
,((double)0.)
,((double)-7.4330357142857141E-3)
,((double)-1.4062499999999999E-3)
,((double)2.0089285714285714E-4)
,((double)2.0089285714285712E-3)
,((double)4.0178571428571425E-3)
,((double)-3.8169642857142855E-3)
,((double)-8.4375000000000006E-3)
,((double)-4.0178571428571428E-4)
,((double)-2.3437499999999999E-3)
,((double)0.)
,((double)2.8124999999999999E-3)
,((double)-7.4330357142857141E-3)
,((double)-7.633928571428571E-3)
,((double)5.0223214285714289E-3)
,((double)1.0044642857142856E-3)
,((double)4.0178571428571428E-4)
,((double)-4.8214285714285711E-3)
,((double)4.0178571428571428E-4)
,((double)2.3437499999999999E-3)
,((double)0.)
,((double)-2.8124999999999999E-3)
,((double)7.4330357142857141E-3)
,((double)7.633928571428571E-3)
,((double)-5.0223214285714289E-3)
,((double)-1.0044642857142856E-3)
,((double)-4.0178571428571428E-4)
,((double)4.8214285714285711E-3)
,((double)-6.6964285714285718E-5)
,((double)6.6964285714285718E-5)
,((double)5.3571428571428572E-3)
,((double)2.0089285714285714E-4)
,((double)-2.2098214285714286E-3)
,((double)-5.0223214285714289E-3)
,((double)4.0178571428571425E-3)
,((double)2.0089285714285712E-3)
,((double)-1.0044642857142856E-3)
,((double)-6.0267857142857146E-3)
,((double)-2.2767857142857143E-3)
,((double)-2.4107142857142856E-3)
,((double)-2.6785714285714284E-2)
,((double)-1.2053571428571428E-3)
,((double)1.2053571428571428E-3)
,((double)1.1049107142857144E-2)
,((double)-2.2098214285714287E-2)
,((double)-2.0089285714285716E-2)
,((double)7.0312500000000002E-3)
,((double)-6.0267857142857146E-3)
,((double)2.2767857142857143E-3)
,((double)1.8080357142857143E-3)
,((double)1.2053571428571429E-2)
,((double)3.6160714285714286E-3)
,((double)-3.0133928571428573E-3)
,((double)-6.4285714285714285E-3)
,((double)1.1049107142857144E-2)
,((double)7.0312500000000002E-3)
,((double)1.6071428571428571E-3)
,((double)4.8214285714285711E-3)
,((double)0.)
,((double)-1.4732142857142858E-3)
,((double)-5.3571428571428572E-3)
,((double)7.2321428571428571E-3)
,((double)3.6160714285714286E-3)
,((double)4.8214285714285711E-3)
,((double)-6.0267857142857146E-3)
,((double)-6.0267857142857146E-3)
,((double)4.8214285714285711E-3)
,((double)1.4464285714285714E-2)

,((double)-1.3392857142857142E-2)
,((double)-2.6116071428571429E-3)
,((double)-2.4107142857142856E-3)
,((double)-4.0178571428571432E-2)
,((double)1.40625E-2)
,((double)2.8124999999999999E-3)
,((double)2.2098214285714286E-3)
,((double)1.0044642857142858E-2)
,((double)-2.0089285714285716E-2)
,((double)-1.2053571428571429E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.3437499999999999E-3)
,((double)-1.4062499999999999E-3)
,((double)0.)
,((double)1.4866071428571428E-2)
,((double)-1.4062499999999999E-3)
,((double)2.6116071428571429E-3)
,((double)-2.2098214285714286E-3)
,((double)-2.8124999999999999E-3)
,((double)2.0089285714285714E-4)
,((double)1.2053571428571428E-3)
,((double)-4.0178571428571425E-3)
,((double)-6.0267857142857146E-3)
,((double)-7.4330357142857141E-3)
,((double)-0.10848214285714286)
,((double)5.4241071428571428E-3)
,((double)-5.4241071428571428E-3)
,((double)1.0848214285714286E-2)
,((double)2.3504464285714285E-2)
,((double)-3.6160714285714289E-2)
,((double)-6.5089285714285711E-2)
,((double)5.0223214285714289E-3)
,((double)1.2053571428571429E-2)
,((double)2.8124999999999999E-3)
,((double)-1.0848214285714286E-2)
,((double)2.7120535714285715E-2)
,((double)2.7120535714285715E-2)
,((double)-1.0848214285714286E-2)
,((double)-3.6160714285714286E-3)
,((double)1.8080357142857143E-3)
,((double)2.1696428571428571E-2)
,((double)-5.0223214285714289E-3)
,((double)-1.2053571428571429E-2)
,((double)-2.8124999999999999E-3)
,((double)1.0848214285714286E-2)
,((double)-2.7120535714285715E-2)
,((double)-2.7120535714285715E-2)
,((double)1.0848214285714286E-2)
,((double)3.6160714285714286E-3)
,((double)-1.8080357142857143E-3)
,((double)-2.1696428571428571E-2)
,((double)-2.0089285714285712E-3)
,((double)6.0267857142857146E-3)
,((double)2.0089285714285714E-4)
,((double)-2.1696428571428571E-2)
,((double)5.4241071428571428E-3)
,((double)-5.4241071428571428E-3)
,((double)-1.0848214285714286E-2)
,((double)-1.8080357142857143E-3)
,((double)3.6160714285714286E-3)
,((double)-2.1696428571428571E-2)
,((double)-1.1049107142857144E-2)
,((double)2.0089285714285714E-4)
,((double)-1.2053571428571428E-3)
,((double)-4.700892857142857E-2)
,((double)1.8080357142857143E-3)
,((double)-5.4241071428571428E-3)
,((double)5.4241071428571428E-3)
,((double)7.2321428571428571E-3)
,((double)1.8080357142857143E-3)
,((double)0.)
,((double)2.2098214285714287E-2)
,((double)3.8169642857142855E-3)
,((double)3.6160714285714286E-3)
,((double)7.2321428571428578E-2)
,((double)-1.4464285714285714E-2)
,((double)0.)
,((double)-5.4241071428571428E-3)
,((double)-1.4464285714285714E-2)
,((double)1.8080357142857145E-2)
,((double)1.0848214285714286E-2)
,((double)6.0267857142857146E-3)
,((double)0.)
,((double)7.2321428571428571E-3)
,((double)0.13017857142857142)
,((double)-1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)0.)
,((double)-2.1696428571428571E-2)
,((double)3.2544642857142855E-2)
,((double)8.6785714285714285E-2)

,((double)6.0267857142857146E-3)
,((double)-3.3482142857142857E-4)
,((double)1.8080357142857143E-3)
,((double)1.40625E-2)
,((double)3.2142857142857142E-3)
,((double)-2.0089285714285714E-4)
,((double)-2.6116071428571429E-3)
,((double)-6.8303571428571432E-3)
,((double)1.0044642857142858E-2)
,((double)9.6428571428571423E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-1.4062499999999999E-3)
,((double)2.3437499999999999E-3)
,((double)0.)
,((double)-1.4062499999999999E-3)
,((double)1.4866071428571428E-2)
,((double)2.0089285714285714E-4)
,((double)-2.8124999999999999E-3)
,((double)-2.2098214285714286E-3)
,((double)2.6116071428571429E-3)
,((double)1.2053571428571428E-3)
,((double)5.0223214285714289E-3)
,((double)1.2053571428571429E-2)
,((double)-1.4062499999999999E-3)
,((double)5.4241071428571428E-3)
,((double)-5.424107142857143E-2)
,((double)0.)
,((double)5.4241071428571428E-3)
,((double)1.8080357142857143E-3)
,((double)1.2656250000000001E-2)
,((double)-1.0848214285714286E-2)
,((double)-7.633928571428571E-3)
,((double)-2.4107142857142858E-2)
,((double)-7.4330357142857141E-3)
,((double)2.7120535714285715E-2)
,((double)-0.10848214285714286)
,((double)-5.424107142857143E-2)
,((double)2.7120535714285715E-2)
,((double)7.2321428571428571E-3)
,((double)1.8080357142857143E-3)
,((double)-5.424107142857143E-2)
,((double)7.633928571428571E-3)
,((double)2.4107142857142858E-2)
,((double)7.4330357142857141E-3)
,((double)-2.7120535714285715E-2)
,((double)0.10848214285714286)
,((double)5.424107142857143E-2)
,((double)-2.7120535714285715E-2)
,((double)-7.2321428571428571E-3)
,((double)-1.8080357142857143E-3)
,((double)5.424107142857143E-2)
,((double)-2.0089285714285714E-4)
,((double)-1.2053571428571429E-2)
,((double)-2.2098214285714286E-3)
,((double)5.4241071428571428E-3)
,((double)-5.424107142857143E-2)
,((double)0.)
,((double)5.4241071428571428E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.0848214285714286E-2)
,((double)6.4285714285714285E-3)
,((double)-1.0044642857142856E-3)
,((double)1.2053571428571428E-3)
,((double)1.8080357142857143E-3)
,((double)-1.4464285714285714E-2)
,((double)5.4241071428571428E-3)
,((double)0.)
,((double)-3.6160714285714286E-3)
,((double)-9.0401785714285723E-3)
,((double)-1.0848214285714286E-2)
,((double)-1.1049107142857144E-2)
,((double)-1.0044642857142856E-3)
,((double)-3.0133928571428573E-3)
,((double)-1.4464285714285714E-2)
,((double)-3.6160714285714286E-3)
,((double)-5.4241071428571428E-3)
,((double)5.4241071428571428E-3)
,((double)1.2656250000000001E-2)
,((double)-3.6160714285714286E-3)
,((double)0.)
,((double)-4.8214285714285711E-3)
,((double)0.)
,((double)3.6160714285714286E-3)
,((double)-1.0848214285714286E-2)
,((double)0.10848214285714286)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)2.1696428571428571E-2)

,((double)0.)
,((double)-2.3437499999999999E-3)
,((double)1.4062499999999999E-3)
,((double)2.8124999999999999E-3)
,((double)-2.0089285714285714E-4)
,((double)-1.4866071428571428E-2)
,((double)1.4062499999999999E-3)
,((double)-2.6116071428571429E-3)
,((double)2.2098214285714286E-3)
,((double)-1.2053571428571428E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)-1.8080357142857143E-3)
,((double)3.3482142857142857E-4)
,((double)-6.0267857142857146E-3)
,((double)2.6116071428571429E-3)
,((double)2.0089285714285714E-4)
,((double)-3.2142857142857142E-3)
,((double)-1.40625E-2)
,((double)-1.0044642857142858E-2)
,((double)6.8303571428571432E-3)
,((double)-9.6428571428571423E-3)
,((double)2.2098214285714286E-3)
,((double)1.2053571428571429E-2)
,((double)2.0089285714285714E-4)
,((double)-5.4241071428571428E-3)
,((double)0.)
,((double)5.424107142857143E-2)
,((double)-5.4241071428571428E-3)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)1.0848214285714286E-2)
,((double)-7.4330357142857141E-3)
,((double)-2.4107142857142858E-2)
,((double)-7.633928571428571E-3)
,((double)2.7120535714285715E-2)
,((double)-5.424107142857143E-2)
,((double)-0.10848214285714286)
,((double)2.7120535714285715E-2)
,((double)1.8080357142857143E-3)
,((double)7.2321428571428571E-3)
,((double)-5.424107142857143E-2)
,((double)7.4330357142857141E-3)
,((double)2.4107142857142858E-2)
,((double)7.633928571428571E-3)
,((double)-2.7120535714285715E-2)
,((double)5.424107142857143E-2)
,((double)0.10848214285714286)
,((double)-2.7120535714285715E-2)
,((double)-1.8080357142857143E-3)
,((double)-7.2321428571428571E-3)
,((double)5.424107142857143E-2)
,((double)1.4062499999999999E-3)
,((double)-1.2053571428571429E-2)
,((double)-5.0223214285714289E-3)
,((double)-5.4241071428571428E-3)
,((double)0.)
,((double)5.424107142857143E-2)
,((double)-5.4241071428571428E-3)
,((double)-1.2656250000000001E-2)
,((double)-1.8080357142857143E-3)
,((double)1.0848214285714286E-2)
,((double)3.0133928571428573E-3)
,((double)1.0044642857142856E-3)
,((double)1.1049107142857144E-2)
,((double)-5.4241071428571428E-3)
,((double)5.4241071428571428E-3)
,((double)3.6160714285714286E-3)
,((double)1.4464285714285714E-2)
,((double)3.6160714285714286E-3)
,((double)-1.2656250000000001E-2)
,((double)0.)
,((double)-1.2053571428571428E-3)
,((double)1.0044642857142856E-3)
,((double)-6.4285714285714285E-3)
,((double)0.)
,((double)-5.4241071428571428E-3)
,((double)1.4464285714285714E-2)
,((double)-1.8080357142857143E-3)
,((double)9.0401785714285723E-3)
,((double)3.6160714285714286E-3)
,((double)1.0848214285714286E-2)
,((double)-3.6160714285714286E-3)
,((double)0.)
,((double)4.8214285714285711E-3)
,((double)1.0848214285714286E-2)
,((double)0.)
,((double)-0.10848214285714286)
,((double)1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)0.)
,((double)-2.1696428571428571E-2)

,((double)0.)
,((double)1.4062499999999999E-3)
,((double)-2.3437499999999999E-3)
,((double)2.2098214285714286E-3)
,((double)-2.6116071428571429E-3)
,((double)1.4062499999999999E-3)
,((double)-1.4866071428571428E-2)
,((double)-2.0089285714285714E-4)
,((double)2.8124999999999999E-3)
,((double)-1.2053571428571428E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.4107142857142856E-3)
,((double)2.6116071428571429E-3)
,((double)1.3392857142857142E-2)
,((double)-2.2098214285714286E-3)
,((double)-2.8124999999999999E-3)
,((double)-1.40625E-2)
,((double)4.0178571428571432E-2)
,((double)2.0089285714285716E-2)
,((double)-1.0044642857142858E-2)
,((double)1.2053571428571429E-2)
,((double)-2.0089285714285714E-4)
,((double)-6.0267857142857146E-3)
,((double)2.0089285714285712E-3)
,((double)1.0848214285714286E-2)
,((double)5.4241071428571428E-3)
,((double)-5.4241071428571428E-3)
,((double)2.1696428571428571E-2)
,((double)-3.6160714285714286E-3)
,((double)1.8080357142857143E-3)
,((double)2.1696428571428571E-2)
,((double)2.8124999999999999E-3)
,((double)1.2053571428571429E-2)
,((double)5.0223214285714289E-3)
,((double)-1.0848214285714286E-2)
,((double)2.7120535714285715E-2)
,((double)2.7120535714285715E-2)
,((double)-1.0848214285714286E-2)
,((double)1.8080357142857143E-3)
,((double)-3.6160714285714286E-3)
,((double)2.1696428571428571E-2)
,((double)-2.8124999999999999E-3)
,((double)-1.2053571428571429E-2)
,((double)-5.0223214285714289E-3)
,((double)1.0848214285714286E-2)
,((double)-2.7120535714285715E-2)
,((double)-2.7120535714285715E-2)
,((double)1.0848214285714286E-2)
,((double)-1.8080357142857143E-3)
,((double)3.6160714285714286E-3)
,((double)-2.1696428571428571E-2)
,((double)7.4330357142857141E-3)
,((double)6.0267857142857146E-3)
,((double)4.0178571428571425E-3)
,((double)-1.0848214285714286E-2)
,((double)5.4241071428571428E-3)
,((double)-5.4241071428571428E-3)
,((double)0.10848214285714286)
,((double)3.6160714285714289E-2)
,((double)-2.3504464285714285E-2)
,((double)6.5089285714285711E-2)
,((double)-3.6160714285714286E-3)
,((double)-3.8169642857142855E-3)
,((double)-2.2098214285714287E-2)
,((double)5.4241071428571428E-3)
,((double)0.)
,((double)1.4464285714285714E-2)
,((double)-7.2321428571428578E-2)
,((double)-1.8080357142857145E-2)
,((double)1.4464285714285714E-2)
,((double)-1.0848214285714286E-2)
,((double)1.2053571428571428E-3)
,((double)-2.0089285714285714E-4)
,((double)1.1049107142857144E-2)
,((double)-5.4241071428571428E-3)
,((double)5.4241071428571428E-3)
,((double)-1.8080357142857143E-3)
,((double)4.700892857142857E-2)
,((double)-1.8080357142857143E-3)
,((double)-7.2321428571428571E-3)
,((double)0.)
,((double)-7.2321428571428571E-3)
,((double)0.)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)-0.13017857142857142)
,((double)-3.2544642857142855E-2)
,((double)2.1696428571428571E-2)
,((double)-8.6785714285714285E-2)

,((double)6.0267857142857146E-3)
,((double)1.8080357142857143E-3)
,((double)-3.3482142857142857E-4)
,((double)1.0044642857142858E-2)
,((double)-6.8303571428571432E-3)
,((double)-2.6116071428571429E-3)
,((double)-2.0089285714285714E-4)
,((double)3.2142857142857142E-3)
,((double)1.40625E-2)
,((double)9.6428571428571423E-3)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)2.6116071428571429E-3)
,((double)2.4107142857142856E-3)
,((double)1.3392857142857142E-2)
,((double)-2.8124999999999999E-3)
,((double)-2.2098214285714286E-3)
,((double)-1.0044642857142858E-2)
,((double)2.0089285714285716E-2)
,((double)4.0178571428571432E-2)
,((double)-1.40625E-2)
,((double)1.2053571428571429E-2)
,((double)1.0044642857142856E-3)
,((double)-2.0089285714285714E-4)
,((double)4.0178571428571425E-3)
,((double)2.3504464285714285E-2)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)-3.6160714285714286E-3)
,((double)-1.4464285714285714E-2)
,((double)1.2656250000000001E-2)
,((double)2.1696428571428571E-2)
,((double)4.0178571428571428E-4)
,((double)1.0044642857142856E-3)
,((double)1.0044642857142856E-3)
,((double)-3.6160714285714286E-3)
,((double)7.2321428571428571E-3)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)7.2321428571428571E-3)
,((double)-3.6160714285714286E-3)
,((double)1.0848214285714286E-2)
,((double)-4.0178571428571428E-4)
,((double)-1.0044642857142856E-3)
,((double)-1.0044642857142856E-3)
,((double)3.6160714285714286E-3)
,((double)-7.2321428571428571E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)-7.2321428571428571E-3)
,((double)3.6160714285714286E-3)
,((double)-1.0848214285714286E-2)
,((double)3.8169642857142855E-3)
,((double)3.8169642857142855E-3)
,((double)2.0089285714285712E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.2656250000000001E-2)
,((double)3.6160714285714289E-2)
,((double)3.6160714285714289E-2)
,((double)-1.2656250000000001E-2)
,((double)4.3392857142857143E-2)
,((double)-1.6071428571428571E-3)
,((double)0.)
,((double)-2.0089285714285716E-2)
,((double)7.2321428571428571E-3)
,((double)-3.6160714285714286E-3)
,((double)3.6160714285714286E-3)
,((double)-1.8080357142857145E-2)
,((double)0.)
,((double)2.1696428571428571E-2)
,((double)1.0848214285714286E-2)
,((double)-7.0312500000000002E-3)
,((double)-4.2187500000000003E-3)
,((double)7.0312500000000002E-3)
,((double)-1.4464285714285714E-2)
,((double)1.2656250000000001E-2)
,((double)9.0401785714285723E-3)
,((double)-1.8080357142857143E-3)
,((double)-4.3392857142857143E-2)
,((double)-2.1696428571428571E-2)
,((double)-3.2544642857142855E-2)
,((double)-4.8214285714285711E-3)
,((double)-3.6160714285714286E-3)
,((double)-6.0267857142857146E-3)
,((double)-2.1696428571428571E-2)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)-3.2544642857142855E-2)
,((double)-2.1696428571428571E-2)
,((double)0.)
,((double)-6.5089285714285711E-2)

,((double)-1.3392857142857142E-2)
,((double)-2.4107142857142856E-3)
,((double)-2.6116071428571429E-3)
,((double)-2.0089285714285716E-2)
,((double)1.0044642857142858E-2)
,((double)2.2098214285714286E-3)
,((double)2.8124999999999999E-3)
,((double)1.40625E-2)
,((double)-4.0178571428571432E-2)
,((double)-1.2053571428571429E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)3.3482142857142857E-4)
,((double)-1.8080357142857143E-3)
,((double)-6.0267857142857146E-3)
,((double)2.0089285714285714E-4)
,((double)2.6116071428571429E-3)
,((double)6.8303571428571432E-3)
,((double)-1.0044642857142858E-2)
,((double)-1.40625E-2)
,((double)-3.2142857142857142E-3)
,((double)-9.6428571428571423E-3)
,((double)-2.0089285714285712E-3)
,((double)-3.8169642857142855E-3)
,((double)-3.8169642857142855E-3)
,((double)-3.6160714285714289E-2)
,((double)1.2656250000000001E-2)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)1.2656250000000001E-2)
,((double)-3.6160714285714289E-2)
,((double)-4.3392857142857143E-2)
,((double)1.0044642857142856E-3)
,((double)1.0044642857142856E-3)
,((double)4.0178571428571428E-4)
,((double)1.8080357142857143E-3)
,((double)1.8080357142857143E-3)
,((double)7.2321428571428571E-3)
,((double)-3.6160714285714286E-3)
,((double)-3.6160714285714286E-3)
,((double)7.2321428571428571E-3)
,((double)1.0848214285714286E-2)
,((double)-1.0044642857142856E-3)
,((double)-1.0044642857142856E-3)
,((double)-4.0178571428571428E-4)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)-7.2321428571428571E-3)
,((double)3.6160714285714286E-3)
,((double)3.6160714285714286E-3)
,((double)-7.2321428571428571E-3)
,((double)-1.0848214285714286E-2)
,((double)-4.0178571428571425E-3)
,((double)2.0089285714285714E-4)
,((double)-1.0044642857142856E-3)
,((double)3.6160714285714286E-3)
,((double)-1.8080357142857143E-3)
,((double)-1.8080357142857143E-3)
,((double)-2.3504464285714285E-2)
,((double)-1.2656250000000001E-2)
,((double)1.4464285714285714E-2)
,((double)-2.1696428571428571E-2)
,((double)-7.0312500000000002E-3)
,((double)4.2187500000000003E-3)
,((double)7.0312500000000002E-3)
,((double)1.8080357142857143E-3)
,((double)-9.0401785714285723E-3)
,((double)-1.2656250000000001E-2)
,((double)1.4464285714285714E-2)
,((double)2.1696428571428571E-2)
,((double)4.3392857142857143E-2)
,((double)3.2544642857142855E-2)
,((double)2.0089285714285716E-2)
,((double)0.)
,((double)1.6071428571428571E-3)
,((double)1.8080357142857145E-2)
,((double)-3.6160714285714286E-3)
,((double)3.6160714285714286E-3)
,((double)-7.2321428571428571E-3)
,((double)-2.1696428571428571E-2)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)6.0267857142857146E-3)
,((double)3.6160714285714286E-3)
,((double)4.8214285714285711E-3)
,((double)3.2544642857142855E-2)
,((double)-1.0848214285714286E-2)
,((double)0.)
,((double)2.1696428571428571E-2)
,((double)0.)
,((double)2.1696428571428571E-2)
,((double)6.5089285714285711E-2)

,((double)-2.6785714285714286E-3)
,((double)-1.4732142857142858E-3)
,((double)-1.4732142857142858E-3)
,((double)-1.2053571428571429E-2)
,((double)9.6428571428571423E-3)
,((double)-1.2053571428571428E-3)
,((double)-1.2053571428571428E-3)
,((double)9.6428571428571423E-3)
,((double)-1.2053571428571429E-2)
,((double)2.8928571428571428E-2)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)0.)
,((double)1.4732142857142858E-3)
,((double)1.4732142857142858E-3)
,((double)2.6785714285714286E-3)
,((double)1.2053571428571428E-3)
,((double)1.2053571428571428E-3)
,((double)-9.6428571428571423E-3)
,((double)1.2053571428571429E-2)
,((double)1.2053571428571429E-2)
,((double)-9.6428571428571423E-3)
,((double)-2.8928571428571428E-2)
,((double)6.0267857142857146E-3)
,((double)0.)
,((double)-8.4375000000000006E-3)
,((double)-6.5089285714285711E-2)
,((double)-1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)2.1696428571428571E-2)
,((double)2.1696428571428571E-2)
,((double)-4.3392857142857143E-2)
,((double)-0.17357142857142857)
,((double)-4.8214285714285711E-3)
,((double)0.)
,((double)-4.8214285714285711E-3)
,((double)2.1696428571428571E-2)
,((double)-5.424107142857143E-2)
,((double)-5.424107142857143E-2)
,((double)2.1696428571428571E-2)
,((double)1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)-4.3392857142857143E-2)
,((double)4.8214285714285711E-3)
,((double)0.)
,((double)4.8214285714285711E-3)
,((double)-2.1696428571428571E-2)
,((double)5.424107142857143E-2)
,((double)5.424107142857143E-2)
,((double)-2.1696428571428571E-2)
,((double)-1.0848214285714286E-2)
,((double)-1.0848214285714286E-2)
,((double)4.3392857142857143E-2)
,((double)8.4375000000000006E-3)
,((double)0.)
,((double)-6.0267857142857146E-3)
,((double)-2.1696428571428571E-2)
,((double)-1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)6.5089285714285711E-2)
,((double)4.3392857142857143E-2)
,((double)-2.1696428571428571E-2)
,((double)0.17357142857142857)
,((double)-4.8214285714285711E-3)
,((double)3.6160714285714286E-3)
,((double)-6.0267857142857146E-3)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)0.)
,((double)-1.0848214285714286E-2)
,((double)1.0848214285714286E-2)
,((double)3.2544642857142855E-2)
,((double)0.13017857142857142)
,((double)6.0267857142857146E-3)
,((double)-3.6160714285714286E-3)
,((double)4.8214285714285711E-3)
,((double)1.0848214285714286E-2)
,((double)0.)
,((double)1.0848214285714286E-2)
,((double)0.)
,((double)-3.2544642857142855E-2)
,((double)-1.0848214285714286E-2)
,((double)-0.13017857142857142)
,((double)-1.4464285714285714E-2)
,((double)0.)
,((double)1.4464285714285714E-2)
,((double)8.6785714285714285E-2)
,((double)2.1696428571428571E-2)
,((double)-2.1696428571428571E-2)
,((double)-8.6785714285714285E-2)
,((double)-6.5089285714285711E-2)
,((double)6.5089285714285711E-2)
,((double)0.)

};

#define dim 		((I)2)
#define nfaceinelm 	((I)3)



void  dgadvection_init_with_quadrature(cst_mkS 		s_teta_a_,
				       cst_mkS 		s_teta_u_,
				       cst_mkS 		s_teta_,
				       cst_mkS 		s_test_,
				       cst_mkS 		s_trial_,
				       
				       cst_pI 		qelm_n_,
				       cst_pR 		qelm_p_,
				       cst_pR 		qelm_w_,
				       
				       cst_pI 		qface_n_,
				       cst_pR 		qface_p_,
				       cst_pR 		qface_w_,

				       cst_pI           iinfo_n_,
				       pI		iinfo_,
				       cst_pI		rinfo_n_,
				       pR 		rinfo_,
				       cst_pI 		rwork_n_,
				       pR		rwork_)
{
  
  pI ferr_ 	= &iinfo_[DG::ERR];  
  ferr_[0] 	= (I)0;  
  if (iinfo_n_[0] < DG::I_n)
    {
      ferr_[0] =
	DGERR_USER;
      fprintf(stderr,"*** MOK_DGI_INIT ERROR IINFO[DG::I_QFACE_N]<1\n");
      exit(1);
    }
  if (iinfo_[DG::I_QFACE_N]<1)
    {
      ferr_[0] =
	DGERR_USER;
      fprintf(stderr,"*** MOK_DGI_INIT ERROR IINFO[DG::I_QFACE_N]<1\n");
      exit(1);
    }
  
  if (iinfo_[DG::I_QELM_N]<1)
    {
      ferr_[0] = DGERR_USER;
      fprintf(stderr,"*** MOK_DGI_INIT ERROR IINFO[DG::I_QELM_N]<1\n");
      exit(1);
    }
  
  iinfo_[DG::I_TETA_A_NBASIS]    = (s_teta_a_) ? mkS_n(s_teta_a_):((I)0);
  iinfo_[DG::I_TETA_U_NBASIS]	 = mkS_n(s_teta_u_);
  iinfo_[DG::I_TETA_NBASIS]	 = mkS_n(s_teta_);
  iinfo_[DG::I_TRIAL_NBASIS]	 = mkS_n(s_trial_);
  iinfo_[DG::I_TEST_NBASIS]	 = mkS_n(s_test_);

  if (ferr_[0]) 
    {
      return;
    }
  
  if (iinfo_[DG::I_TRIAL_NBASIS]!=iinfo_[DG::I_TEST_NBASIS])   
    { 
      ferr_[0] = DGERR_USER;
      fprintf(stderr,"*** MOK_DGI_INIT ERROR IINFO[DG::I_TEST_NBASIS]!=IINFO[DG::I_TRIAL_NBASIS]\n");    
    }

  iinfo_[DG::I_QELM_N] = qelm_n_[0];  

  mkS_st s_teta_a;
  mkS_st s_teta_u;
  mkS_st s_teta;
  mkS_st s_test;
  mkS_st s_trial;

  mkS_copy(&s_teta_a,s_teta_a_);
  mkS_copy(&s_teta_u,s_teta_u_);
  mkS_copy(&s_teta,s_teta_);
  mkS_copy(&s_test,s_test_);
  mkS_copy(&s_trial,s_trial_);

  const I s_teta_a_degree = mkS_k(s_teta_a_);
  const I s_teta_u_degree = mkS_k(s_teta_u_);

  const I trial_n	= iinfo_[DG::I_TRIAL_NBASIS];
  const I teta_n	= iinfo_[DG::I_TETA_NBASIS];
  const I nA	 	= iinfo_[DG::I_TETA_A_NBASIS];
  const I nU	 	= iinfo_[DG::I_TETA_U_NBASIS];

  fprintf(stdout,"trial_n " ifmt "\n",trial_n);
  fprintf(stdout,"teta_n " ifmt "\n",teta_n);
  fprintf(stdout,"nA " ifmt "\n",nA);
  fprintf(stdout,"nU " ifmt "\n",nU);
  
  const I trial_nXtrial_n 	= trial_n * trial_n;

  
  const I numValuesOnElement	= nA + dim * nU;
  const I numValuesOnFace	= nfaceinelm * qface_n_[0];  
  const I numValues 	 	= numValuesOnElement + numValuesOnFace;
  
  const I bmat_n 	= trial_n * trial_n + teta_n * trial_n;      
  const I bmatx_size 	= bmat_n*(nfaceinelm * qface_n_[0] * nfaceinelm);
  const I evalu_size 	= nU * (dim*nU + nfaceinelm * qface_n_[0]);  
  
  if (rinfo_n_[0] < 2 * numValues + bmat_n*numValues + bmatx_size + evalu_size)
    {
      fprintf(stderr,"*** DGI too small rinfo_ array (" ifmt "<" ifmt ")\n",
	      rinfo_n_[0],
	      2*numValues+bmat_n*numValues+bmatx_size+evalu_size);
      ferr_[0] = DGERR_MEMORY;
      return;
    }
  
  /* on recopie la quadrature pour les faces */  
  /* on recopie les interpolants */
  iinfo_[DG::I_nTot]     	= numValues;
  iinfo_[DG::I_nTotElm]  	= numValuesOnElement;
  iinfo_[DG::I_nTotFace] 	= numValuesOnFace;
  
  /* matrice de flux */  
  /* les points d evaluation en coordonnees locales */
  iinfo_[DG::IA_lc]        	= 0;
  iinfo_[DG::IA_lc_elm]    	= 0;
  iinfo_[DG::IA_lc_elm_a]  	= 0;
  iinfo_[DG::IA_lc_elm_u0] 	= iinfo_[DG::I_TETA_A_NBASIS];
  iinfo_[DG::IA_lc_elm_u1] 	= iinfo_[DG::I_TETA_A_NBASIS]+iinfo_[DG::I_TETA_U_NBASIS];
  iinfo_[DG::IA_lc_face]   	= numValuesOnElement;
  iinfo_[DG::IA_lc_u]      	= iinfo_[DG::I_TETA_A_NBASIS];
  
  iinfo_[DG::I_bmat_n] 		= bmat_n;
  iinfo_[DG::I_bmat_m] 		= numValues;
  iinfo_[DG::I_bmat_len] 	= bmat_n*numValues;
  iinfo_[DG::RA_bmat] 		= 2*numValues;
  iinfo_[DG::RA_bmatx] 		= iinfo_[DG::RA_bmat]  + iinfo_[DG::I_bmat_len];
  iinfo_[DG::RA_EVAL_TETA_U]    = iinfo_[DG::RA_bmatx] + bmatx_size;

  iinfo_[DG::I_lc_len] 		= 2*numValues;
  
  const I npts_velocity 	= iinfo_[DG::I_nTot]-iinfo_[DG::I_TETA_A_NBASIS];  
    
  pR bmat_x 			= &rinfo_[iinfo_[DG::RA_bmat]];  
  if (nA>0)
    {
      pR teta_a_trial_test = &bmat_x[0];
      pR teta_a_teta_test  = &bmat_x[trial_nXtrial_n];
      
      mkS_kji(mkS_b(&s_teta_a),
	      mkS_b(&s_trial),
	      mkS_b(&s_test),
	      teta_a_trial_test,
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);

#if 0
      I i;for (i=0;i<36;++i) { printf("hh %e \n",nsFABS(tria_L2_L2[i]-bmat_x[i]));  }      
#endif

      mkS_kji(mkS_b(&s_teta_a),
	      mkS_b(&s_teta),
	      mkS_b(&s_test),
	      teta_a_teta_test,
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);
      
#if 0
      for (i=0;i<36;++i) { printf("gg %e \n",nsFABS(tria_L2_L2[i]-bmat_x[i]));  }
#endif
      
    }

  
  if (nU>0)
    {
#if DG_CONSERVATIVE_WEAK_FORM
      mkS_kji(mkS_b(&s_teta_u),
	      mkS_b(&s_trial),
	      mkS_dx(&s_test),
	      &bmat_x[nA*bmat_n],
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);
      
      mkS_kji(mkS_b(&s_teta_u),
	      mkS_b(&s_trial),
	      mkS_dy(&s_test),
	      &bmat_x[(nA+nU)*bmat_n],
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);
      
      mkS_kji(mkS_b(&s_teta_u),
	      mkS_b(&s_teta),
	      mkS_dx(&s_test),
	      &bmat_x[nA*bmat_n+trial_nXtrial_n],
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);
      
      mkS_kji(mkS_b(&s_teta_u),
	      mkS_b(&s_teta),
	      mkS_dy(&s_test),
	      &bmat_x[(nA+nU)*bmat_n+trial_nXtrial_n],
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);
      
#else



      pR teta_u_dxtrial_test = &bmat_x[nA*bmat_n];
      pR teta_u_dytrial_test = &bmat_x[(nA+nU)*bmat_n];
      pR teta_u_dxteta_test = &bmat_x[nA*bmat_n+trial_nXtrial_n];
      pR teta_u_dyteta_test = &bmat_x[(nA+nU)*bmat_n+trial_nXtrial_n];
      mkS_kji(mkS_b(&s_teta_u),
	      mkS_dx(&s_trial),
	      mkS_b(&s_test),
	      teta_u_dxtrial_test,
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);

#if 0
      I i,j;for (j=0;j<6;++j) for (i=0;i<36;++i) { printf("gg %e \n",nsFABS(tria_L2_L2dx_L2[j*36+i]-bmat_x[nA*bmat_n+j*bmat_n+i]));  }
      mk_err("salut !\n");
#endif

      mkS_kji(mkS_b(&s_teta_u),
	      mkS_dy(&s_trial),
	      mkS_b(&s_test),
	      teta_u_dytrial_test,
	      //  &bmat_x[(nA+nU)*bmat_n],
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);
      
      mkS_kji(mkS_b(&s_teta_u),
	      mkS_dx(&s_teta),
	      mkS_b(&s_test),
	      teta_u_dxteta_test,//     &bmat_x[nA*bmat_n+trial_nXtrial_n],
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);

      
      mkS_kji(mkS_b(&s_teta_u),
	      mkS_dy(&s_teta),
	      mkS_b(&s_test),
	      teta_u_dyteta_test,// &bmat_x[(nA+nU)*bmat_n+trial_nXtrial_n],
	      &bmat_n,
	      qelm_n_,
	      qelm_w_,
	      qelm_p_,
	      qelm_n_,
	      rwork_n_,
	      rwork_,
	      ferr_);
      
#endif
    }  

  /* -------------------------------------------------------------------------------------- */
  /* LOCAL COORDINATES -------------------------------------------------------------------  */
  /* -------------------------------------------------------------------------------------- */            
  { pR lc = &rinfo_[iinfo_[DG::IA_lc]];

    if (iinfo_[DG::I_TETA_A_NBASIS]>0)
      {
	mkS_lagrange_localspl_tria(&s_teta_a_degree,
				   &lc[iinfo_[DG::IA_lc_elm_a]],
				   &numValues);
      }
    
    mkS_lagrange_localspl_tria	(&s_teta_u_degree,
				 &lc[iinfo_[DG::IA_lc_elm_u0]],
				 &numValues);
    
    mkS_lagrange_localspl_tria	(&s_teta_u_degree,
				 &lc[iinfo_[DG::IA_lc_elm_u1]],
				 &numValues);
    
    mkS_bmapping		(qface_n_[0],
				 &lc[iinfo_[DG::IA_lc_face]],
				 &numValues,
				 qface_p_);
    
    /* -------------------------------------------------------------------------------------- */
    /* CALCUL DE L EVALUATION DE TETA_U POUR TOUS LES POINTS D INTEGRATION ELM + 3*NFACES */
    /* -------------------------------------------------------------------------------------- */            
    mkS_basis(mkS_b(&s_teta_u),
	      &npts_velocity,
	      &rinfo_[iinfo_[DG::RA_EVAL_TETA_U]],
	      &iinfo_[DG::I_TETA_U_NBASIS],
	      &rinfo_[iinfo_[DG::IA_lc_u]],
	      &iinfo_[DG::I_nTot],// DG::I_numValues			   			   
	      rwork_,
	      rwork_n_,
	      ferr_);  }
  
#if 0
  {
    I i,j;pR lc = &rinfo_[iinfo_[DG::IA_lc]];
    for (i=0;i<npts_velocity;++i)
      {
	printf("allo %e %e " ifmt "\n",lc[iinfo_[DG::IA_lc_face]+i],lc[iinfo_[DG::IA_lc_face]+numValues+i],iinfo_[DG::I_TETA_U_NBASIS]);
	for (j=0;j<iinfo_[DG::I_TETA_U_NBASIS];++j)
	  {
	    printf("%e\n",rinfo_[iinfo_[DG::RA_EVAL_TETA_U] + iinfo_[DG::I_TETA_U_NBASIS]*i+j]);
	  }
      }
    exit(1);}
#endif


  /* -------------------------------------------------------------------------------------- */
  /* MATRICES PONDEREES SUR LE BORD */
  /* -------------------------------------------------------------------------------------- */        

  mkS_bwji(qface_n_,
	   qface_p_,
	   qface_w_,
	   mkS_b(&s_trial),
	   mkS_b(&s_test),
	   &bmat_x[(nA+2*nU)*bmat_n],
	   bmat_n,
	   ferr_);
  
  mkS_bwji(qface_n_,
	   qface_p_,
	   qface_w_,
	   mkS_b(&s_teta),
	   mkS_b(&s_test),
	   &bmat_x[(nA+2*nU)*bmat_n+trial_nXtrial_n],
	   bmat_n,
	   ferr_);

  
  /* -------------------------------------------------------------------------------------- */
  /* MATRICES PONDEREES SUR LE BORD CONTRAPOSEE AVEC LE BORD */
  /* -------------------------------------------------------------------------------------- */            

  { pR bmatflux = &rinfo_[iinfo_[DG::RA_bmatx]];

    mkS_bwji_nei(qface_n_,
		 qface_p_,
		 qface_w_,
		 mkS_b(&s_trial),
		 mkS_b(&s_test),
		 bmatflux,
		 bmat_n,
		 ferr_);    
    
    mkS_bwji_nei(qface_n_,
		 qface_p_,
		 qface_w_,
		 mkS_b(&s_teta),
		 mkS_b(&s_test),
		 &bmatflux[trial_nXtrial_n],
		 bmat_n,
		 ferr_); }
  return;
#if 0
  I s_teta_a[4]      = {iinfo_[DG::I_TETA_A_FAMILY],0,iinfo_[DG::I_TETA_A_DEGREE],iinfo_[DG::I_TETA_A_NBASIS]};
  I s_teta_u[4]      = {iinfo_[DG::I_TETA_U_FAMILY],0,iinfo_[DG::I_TETA_U_DEGREE],iinfo_[DG::I_TETA_U_NBASIS]};
  I s_teta[4]        = {iinfo_[DG::I_TETA_FAMILY],0,iinfo_[DG::I_TETA_DEGREE],iinfo_[DG::I_TETA_NBASIS]};
  I s_test[4]        = {iinfo_[DG::I_TEST_FAMILY],0,iinfo_[DG::I_TEST_DEGREE],iinfo_[DG::I_TEST_NBASIS]};
  I s_trial[4]       = {iinfo_[DG::I_TRIAL_FAMILY],0,iinfo_[DG::I_TRIAL_DEGREE],iinfo_[DG::I_TRIAL_NBASIS]};
#endif
}









void  dgadvection(cst_mkS 		s_teta_a_,
		  cst_mkS 		s_teta_u_,
		  cst_mkS 		s_teta_,
		  cst_mkS 		s_test_,
		  cst_mkS 		s_trial_,
		  cst_pI         	iinfo_n_,
		  pI			iinfo_,		  
		  cst_pI		rinfo_n_,
		  pR 			rinfo_,
		  cst_pI 		rwork_n_,
		  pR			rwork_)
{

  pI ferr_ 	= &iinfo_[DG::ERR];  
  ferr_[0] 	= (I)0;  
  if (iinfo_[DG::I_QFACE_N]<1)
    {
      ferr_[0] =
	DGERR_USER;
      fprintf(stderr,"*** MOK_DGI_INIT ERROR IINFO[DG::I_QFACE_N]<1\n");
      exit(1);
    }
  
  if (iinfo_[DG::I_QELM_N]<1)
    {
      ferr_[0] = DGERR_USER;
      fprintf(stderr,"*** MOK_DGI_INIT ERROR IINFO[DG::I_QELM_N]<1\n");
      exit(1);
    }

  const I qelm_n_	[1] 	= {iinfo_[DG::I_QELM_N]*iinfo_[DG::I_QELM_N]};
  const I qface_n_	[1] 	= {iinfo_[DG::I_QFACE_N]};

  R qelm_p_	[64*64*2];
  R qelm_w_	[64*64];
  R qface_p_	[64];
  R qface_w_	[64];
  
  fprintf(stdout,"generate quadrature " ifmt " " ifmt "\n",
	  qelm_n_[0],
	  qface_n_[0]);
  
  {
    const I rwork_n = (rwork_n_[0]>3*iinfo_[DG::I_QELM_N])?rwork_n_[0]-3*iinfo_[DG::I_QELM_N]:(I)0;
    if (rwork_n<1)
      {
	fprintf(stderr,"*** MOK_DGI_INIT ERROR TOO SMALL RWORK_N\n");
	ferr_[0] = DGERR_MEMORY;
	return;
      }
    mkQ_legendre_interval_(qface_n_,
			   qface_p_,
			   &negal1,
			   qface_w_,
			   &negal1,
			   rwork_,
			   rwork_n_,
			   ferr_);
    if (ferr_[0])
      {
	ferr_[0] = 1;
	fprintf(stderr,"*** MOK_DGI:first mkQ_legendre_interval_ failed (ferr_ = " ifmt "\n",ferr_[0]);
	return;
      }
    mkQ_legendre_interval_(&iinfo_[DG::I_QELM_N],
			   rwork_,
			   &negal1,
			   &rwork_[2*iinfo_[DG::I_QELM_N]],
			   &negal1,
			   &rwork_[3*iinfo_[DG::I_QELM_N]],
			   rwork_n_,
			   ferr_);    
    if (ferr_[0])
      {
	ferr_[0] = 1;
	fprintf(stderr,"*** MOK_DGI:second mkQ_legendre_interval_ failed (ferr_ = " ifmt "\n",ferr_[0]);
	return;
      }
    I qelm_n=0;
    mkQ_collapse_		(&iinfo_[DG::I_QELM_N],
				 rwork_,
				 &negal1,
				 &rwork_[2*iinfo_[DG::I_QELM_N]],
				 &negal1,
				 &qelm_n,
				 qelm_p_,
				 qelm_n_,
				 qelm_w_,
				 &negal1,
				 ferr_);
    
    if (ferr_[0])
      {
	ferr_[0] = 1;
	fprintf(stderr,"*** MOK_DGI:mkQ_legendre_interval_ failed\n");
	return;
      }
  }
  fprintf(stdout,"generate quadrature done\n");



  dgadvection_init_with_quadrature(s_teta_a_,
				   s_teta_u_,
				   s_teta_,
				   s_test_,
				   s_trial_,
		  
				   qelm_n_,
				   qelm_p_,
				   qelm_w_,
		  
				   qface_n_,
				   qface_p_,
				   qface_w_,

				   iinfo_n_,
				   iinfo_,

				   rinfo_n_,
				   rinfo_,

				   rwork_n_,
				   rwork_);

}



void dgadvection_solve(cst_pR 	xa_,
		       cst_pR 	xu_,
		       cst_pR	rhs_,
		       cst_pI 	rhsoff_,
		       
		       cst_pI  	cnc_u_,
		       cst_pI  	cncoff_u_,
		       cst_pR 	data_u_,		       
		       cst_pR	data_v_,
		       
		       cst_pR	sol_,
		       cst_pI 	soloff_,
		       
		       pR	corr_,
		       cst_pI 	corroff_,
		       
		       cst_pR 	t_,
		       cst_pI 	nelm_,
		       cst_pR 	coo_,
		       cst_pI 	cooff_,
		       cst_pI 	cnc_,
		       cst_pI 	cncoff_,
		       cst_pI 	adj_,
		       cst_pI 	adjoff_,
		       cst_pI 	vcod_,
		       cst_pI 	noboundary_cod_,
		       
		       cst_pI 	rwork_n_,
		       pR  	rwork_,
		       cst_pI 	iwork_n_,
		       pI	iwork_,
		       
		       cst_pR 	rinfo_,
		       const I  iinfo_[DG::I_n],
		       R 	rres_[DG_rres_n],
		       I 	ires_[DG_ires_n])
{  
  struct matrix_handle mat_tmpbrhs_uface0;
  struct matrix_handle mat_tmpbrhs_uface1;
  struct matrix_handle mat_tmpbrhs_uface2;
  struct matrix_handle mat_matflux_corr;
  struct matrix_handle mat_matflux_residu;
  struct matrix_handle hbmat;
  struct matrix_handle hlcmatr;
  struct matrix_handle mat_lcmatc;  
  struct matrix_handle u_eval;
 
  struct vector_handle vec_uface0;
  struct vector_handle vec_uface1;
  struct vector_handle vec_uface2;
  struct vector_handle vec_nrmelm0;
  struct vector_handle vec_nrmelm1;
  struct vector_handle vec_nrmelm2;
  struct vector_handle vec_neicorr;
  struct vector_handle vec_neisol;
  struct vector_handle hbrhs;
  struct vector_handle hlcmat;
  struct vector_handle hlcrhs;
  struct vector_handle hsol;
  
  struct vector_handle u_ldofs;
  struct vector_handle v_ldofs;
  struct vector_handle brhs_u;
  struct vector_handle brhs_v;
  struct matrix_handle mat_tmpbrhs_uelm;
  struct matrix_handle mat_belm;
  struct matrix_handle mat_brhs_uelm;
  
  cst_pI	trial_n = &iinfo_[DG::I_TRIAL_NBASIS];
  cst_pI	test_n  = &iinfo_[DG::I_TEST_NBASIS];
  cst_pI	teta_n  = &iinfo_[DG::I_TETA_NBASIS];
  cst_pI	qface_n = &iinfo_[DG::I_QFACE_N];
  cst_pI	nu      = &iinfo_[DG::I_TETA_U_NBASIS];
  
  /*_____________________________________________________*/

  static const R
    mr1=(R)-1.0,
    r1=(R)1.0,
    r0=(R)0.0;
  
  static const I
    n1	= (I)1,
    n2 	= (I)2;
  
  /*_____________________________________________________*/
#if DG_CONSERVATIVE_WEAK_FORM
  const R mxu=xu_[0]*((R)-1.0);
#else
  const R mxu=xu_[0]*((R)1.0);
#endif

  /*_____________________________________________________*/

  I marker_size	= 0;
  
  pI
    lcperm 	= NULL,
    perm 	= NULL,
    graph 	= NULL,
    marker 	= NULL,
    marker_begin= NULL,
    marker_flag = NULL;

  pR
    brhs        = NULL,
    brhs_uelm   = NULL,
    brhs_a      = NULL,
    uface0 	= NULL,
    uface1 	= NULL,
    uface2 	= NULL;
  
  R mx;  
  I
    id,
    ielm,
    info_lapack,
    iter_gauss_seidel,
    b1,
    b2,
    pp,
    n,
    vcod[3*1],
    cnc[3*1],neids[8*1],neids_face[8*1],codface[8*1];
  
  R
    jacelm[1],
    x,
    longueurs[3],
    jacface[3*1],
    nrmelm[6*1],
    cooelm[6*1],
    belm[4*1],
    lcsol[21];

  const I q_nx3 		= qface_n[0]*3;
  const I bmat_n 		= iinfo_[DG::I_bmat_n];
  const I bmat_m 		= iinfo_[DG::I_bmat_m];  

  //
  // VELOCITY EVALUATION
  //
  cst_pR eval_u_ 		= &rinfo_[iinfo_[DG::RA_EVAL_TETA_U]];
  const I eval_uoff_        	= iinfo_[DG::I_TETA_U_NBASIS];

  //
  // Pointers to bmat and bmatx
  //
  cst_pR bmat 	 		= &rinfo_[iinfo_[DG::RA_bmat]];
  cst_pR bmatflux 		= &rinfo_[iinfo_[DG::RA_bmatx]];
  
  cst_pR fpart[3][3];
  { I i,j;
    for (i=0;i<3;++i)
      for (j=0;j<3;++j)
	fpart[i][j] = &bmatflux[bmat_n*( (i*3+j)*qface_n[0]  ) ];
  }

#if __mk_debug__
  if (bmat_m!=1 + 2*nu[0]+3*qface_n[0]) 
    {
      fprintf(stderr,"*** DGERR " ifmt " " ifmt "",1 + 2*nu[0]+3*qface_n[0],bmat_m);exit(1);
    }
#endif
  I N_pts_u = bmat_m-1;/*nTot-nA*/
  
  R 	matflux[21*(21+21)];/*trial_n*(trial_n+teta_n)*/
  pR 		matflux_corr 	= &matflux[0];
  pR 		matflux_residu 	= &matflux[trial_n[0]*trial_n[0]];
  
  R 	lcmat[21*21*2];
  R 	lcrhs[21*2];
  pR 		lcmatc = &lcmat[0];
  pR 		lcmatr = &lcmat[trial_n[0]*trial_n[0]];

  const I renum_iwork_n = 3*nelm_[0] + 4*(nelm_[0]+1) + trial_n[0];
  ires_[DG_ires_err] = (I)0;
  
  /*_____________________________________________________*/
  if (rwork_n_[0]< bmat_m + 2 * bmat_m)
    {      
      ires_[DG_ires_err] = (I)1;
      ires_[DG_ires_required_rw_n] = 3*bmat_m;
      fprintf(stderr,"too small rwork_n_ " ifmt " " ifmt "\n",3*bmat_m,rwork_n_[0]);
      return;
    }

  brhs      	= &rwork_[0];
  brhs_a    	= &rwork_[0];  
  brhs_uelm 	= &rwork_[1];
  
  uface0 	= &rwork_[iinfo_[DG::IA_lc_face]];
  uface1 	= &rwork_[iinfo_[DG::IA_lc_face]+qface_n[0]];
  uface2 	= &rwork_[iinfo_[DG::IA_lc_face]+2*qface_n[0]];
  pR ufaces[3] = {uface0,uface1,uface2};
  
  const I tmpbrhs_ufaceoff 	= bmat_m;
  pR tmpbrhs        	= &rwork_[bmat_m]; 
  pR tmpbrhs_ufaces 	= &tmpbrhs[1+2*nu[0]]; 
  pR tmpbrhs_uface0 	= &tmpbrhs[1+2*nu[0]]; 
  pR tmpbrhs_uface1 	= &tmpbrhs[1+2*nu[0]+qface_n[0]];
  pR tmpbrhs_uface2 	= &tmpbrhs[1+2*nu[0]+2*qface_n[0]];
  pR tmpbrhs_uelm   	= &tmpbrhs[1]; 
  pR tmpbrhs_u 		= tmpbrhs_uelm;
  R weiu[16];
  R weiv[16];
  /*_____________________________________________________*/
  if (renum_iwork_n>iwork_n_[0])
    {
      ires_[DG_ires_err] = (I)1;
      ires_[DG_ires_required_iw_n] = renum_iwork_n;
      fprintf(stderr,"too small iwork_n_ " ifmt " " ifmt "\n",renum_iwork_n,iwork_n_[0]);
      return;
    }

  lcperm  	= &iwork_[0];
  perm  	= &iwork_[trial_n[0]];
  graph 	= &iwork_[(nelm_[0]+1) + trial_n[0] ];
  marker 	= &iwork_[(nelm_[0]+1) + trial_n[0] + 3*nelm_[0]];
  marker_begin 	= &iwork_[(nelm_[0]+1) + trial_n[0] + 3*nelm_[0]+ (nelm_[0]+1)];
  marker_flag 	= &iwork_[(nelm_[0]+1) + trial_n[0] + 3*nelm_[0]+ 2*(nelm_[0]+1)];
  /*_____________________________________________________*/

  goto __state_renum;

  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  
 __state_renum:
  b1=1;
  b2=0;    
  { I j;for (j=trial_n[0];j<renum_iwork_n;++j) iwork_[j]=(I)0;}  
  /* */
  /* on donne un sens a l adjacence */
  { I jelm;
    for (jelm=0;jelm<nelm_[0];++jelm)
      {        
	/* compute jaface and nrmelm */
	neids[0]   = adj_[jelm*adjoff_[0]];neids[1]	= adj_[jelm*adjoff_[0]+1];neids[2]	= adj_[jelm*adjoff_[0]+2];
	cnc[0]     = cnc_[jelm*cncoff_[0]+0];cnc[1]     = cnc_[jelm*cncoff_[0]+1];cnc[2]     = cnc_[jelm*cncoff_[0]+2];
	cooelm[0]  = coo_[cooff_[0]*(cnc[0]-1)+0];cooelm[1]  = coo_[cooff_[0]*(cnc[1]-1)+0];cooelm[2]  = coo_[cooff_[0]*(cnc[2]-1)+0];
	cooelm[3]  = coo_[cooff_[0]*(cnc[0]-1)+1];cooelm[4]  = coo_[cooff_[0]*(cnc[1]-1)+1];cooelm[5]  = coo_[cooff_[0]*(cnc[2]-1)+1];

	jacface[0] = nsSQRT( (cooelm[0]-cooelm[1])*(cooelm[0]-cooelm[1]) + (cooelm[3]-cooelm[4])*(cooelm[3]-cooelm[4]) ); 
	jacface[1] = nsSQRT( (cooelm[1]-cooelm[2])*(cooelm[1]-cooelm[2]) + (cooelm[4]-cooelm[5])*(cooelm[4]-cooelm[5]) ); 
	jacface[2] = nsSQRT( (cooelm[2]-cooelm[0])*(cooelm[2]-cooelm[0]) + (cooelm[5]-cooelm[3])*(cooelm[5]-cooelm[3]) ); 	  

	longueurs[0] = jacface[0];longueurs[1] = jacface[1];longueurs[2] = jacface[2];  
	nrmelm[0] = cooelm[4] - cooelm[3];nrmelm[1] = cooelm[0] - cooelm[1];				
	x = ((R)1.0)/jacface[0];nrmelm[0] *= x;nrmelm[1] *= x;						  
	nrmelm[2] = cooelm[5] - cooelm[4];nrmelm[3] = cooelm[1] - cooelm[2];
	x = ((R)1.0)/jacface[1];nrmelm[2] *= x;nrmelm[3] *= x;  
	nrmelm[4] = cooelm[3] - cooelm[5];nrmelm[5] = cooelm[2] - cooelm[0] ;
	x = ((R)1.0)/jacface[2];nrmelm[4] *= x;nrmelm[5] *= x;
	jacface[0] *=(R)0.5;jacface[1] *=(R)0.5;jacface[2] *=(R)0.5;	  
	/*____ INFO ELEMENT DONE */ 	
	/*___________________________________________________________________________________________________________________*/  
	/* 
	   eval u faces
	*/      
	{ I k;
	  for (k=0;k<nu[0];++k)
	    {
	      weiu[k] = data_u_[cnc_u_[jelm*cncoff_u_[0]+k]-1];
	    } }
	{ I k;
	  for (k=0;k<nu[0];++k)
	    {
	      weiv[k] = data_v_[cnc_u_[jelm*cncoff_u_[0]+k]-1];
	    } }
  
	/*___________________________________________________________________________________________________________________*/
	Blas_dgemv("T",nu,&q_nx3,&r1,&eval_u_[eval_uoff_*(iinfo_[DG::IA_lc_face]-1)],&eval_uoff_,weiu,&n1,&r0,tmpbrhs_ufaces,&n1);
	Blas_dgemv("T",nu,&q_nx3,&r1,&eval_u_[eval_uoff_*(iinfo_[DG::IA_lc_face]-1)],&eval_uoff_,weiv,&n1,&r0,&tmpbrhs_ufaces[tmpbrhs_ufaceoff],&n1);
	Blas_dgemv("N",qface_n,&n2,&jacface[0],tmpbrhs_uface0,&tmpbrhs_ufaceoff,&nrmelm[2*0],&n1,&r0,uface0,&n1);
	Blas_dgemv("N",qface_n,&n2,&jacface[1],tmpbrhs_uface1,&tmpbrhs_ufaceoff,&nrmelm[2*1],&n1,&r0,uface1,&n1);
	Blas_dgemv("N",qface_n,&n2,&jacface[2],tmpbrhs_uface2,&tmpbrhs_ufaceoff,&nrmelm[2*2],&n1,&r0,uface2,&n1);	
	
	{ I k;
	  for (k=0;k<qface_n[0];++k) if (uface0[k]<((R)0.0)) break;
	  graph[jelm*3+0] = (neids[0]) ? ( (k<qface_n[0])?-neids[0]:neids[0] ) : ( (k<qface_n[0]) ? -nelm_[0]-1 : (I)0 ); }
	{ I k;
	  for (k=0;k<qface_n[0];++k)if (uface1[k]<((R)0.0))break;
	  graph[jelm*3+1] = (neids[1]) ? ( (k<qface_n[0])?-neids[1]:neids[1] ) : ( (k<qface_n[0]) ? -nelm_[0]-1 : (I)0 ); }
	{ I k;
	  for (k=0;k<qface_n[0];++k)if (uface2[k]<((R)0.0))break;
	  graph[jelm*3+2] = (neids[2]) ? ( (k<qface_n[0])?-neids[2]:neids[2] ) : ( (k<qface_n[0]) ? -nelm_[0]-1 : (I)0 ); }	
      } }
  /* on met tous ceux qui n'ont pas d antecedent en premier*/
  { I jelm;
    for (jelm=0;jelm<nelm_[0];++jelm)
      { 
	if (graph[jelm*3]<-nelm_[0]) {perm[++b2]=jelm+1; marker_flag[jelm+1]=1;}
	if (graph[jelm*3+1]<-nelm_[0]){perm[++b2]=jelm+1; marker_flag[jelm+1]=1;}
	if (graph[jelm*3+2]<-nelm_[0]){perm[++b2]=jelm+1; marker_flag[jelm+1]=1;}
      } }
  /*________________________________________________________________________________________________________________*/  
  pp	= b2;
  n	= (I)1;
 __state_renum_do1:
  marker_size=0;
  /* INJECTION */
  n=0;
  { I i;	
    for (i=b1;i<=b2;++i)
      {
	{ I j;
	  for (j=0;j<3;++j)
	    {
	      const I s = graph[(perm[i]-1)*3+j];
	      if ( (s>0) AND ( (NOT marker[s]) AND (NOT marker_flag[s]) ))
		{
		  marker_size=marker_size+1; marker_begin[marker_size] = s;
		  marker[s] = marker_size;n=n+1;
		}
	    } }
      } }
    
  /* FIN INJECTION */
  { I i;	    
    for (i=1;i<=marker_size;++i)
      {
	marker_flag[marker_begin[i]]=1;perm[b2+i]=marker_begin[i];
	marker[marker_begin[i]]=0;marker_begin[i]=0;
      } }
  
  pp+=n;b1 = b2+1;b2 = b2+n;
  if (b1>b2)
    {
      if (pp==nelm_[0])
	goto __state_renum_do1_done;
      else
	{
	  /* on cherche un element*/
	  { I jelm;
	    for (jelm=1;jelm<=nelm_[0];++jelm)
	      {
		if (NOT marker_flag[jelm])
		  {
		    marker_flag[jelm]=(I)1;
		    perm[b1] = jelm;
		    ++n;b2 = b1;
		    break;
		  }
	      } }
	}
    }
  if (n>0)
    {
      /* on continue a injecter */
      goto __state_renum_do1;
    }
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
 __state_renum_do1_done:
  if (b2!=nelm_[0])
    {      
      fprintf(stderr,"*** DGERR RENUM FAILED " ifmt "!=" ifmt "",b2,nelm_[0]);
      goto __state_error;
    }
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  iter_gauss_seidel = 0;
 __state_next_iter_gauss_seidel:

  fprintf(stdout,"next iter gauss seidel \n");
  if (0)
    {
      dg_print_mesh(mesh,
		    "dgres." ifmt, iter_gauss_seidel);
      dg_print_sol(3 * nelm_[0],
		   corr_,
		   "dgres." ifmt,iter_gauss_seidel);
    }
  mx = (R)0.0;
  /*___________________________________________________________________________________________________________________*/  
  ielm=0;      
 __state_next_elm:
  id 		= perm[ielm+1]-1;
  neids[0]	= adj_[id*adjoff_[0]];
  neids[1]	= adj_[id*adjoff_[0]+1];
  neids[2]	= adj_[id*adjoff_[0]+2];
  vcod[0] 	= vcod_[cnc_[id*cncoff_[0]+0]-1];
  vcod[1] 	= vcod_[cnc_[id*cncoff_[0]+1]-1];
  vcod[2] 	= vcod_[cnc_[id*cncoff_[0]+2]-1];
  cnc[0]        = cnc_[id*cncoff_[0]+0];
  cnc[1]        = cnc_[id*cncoff_[0]+1];
  cnc[2]        = cnc_[id*cncoff_[0]+2];
  codface[0] 	= (neids[0])? noboundary_cod_[0] :  MAX(vcod_[0],vcod_[1]);
  codface[1] 	= (neids[1])? noboundary_cod_[0] :  MAX(vcod_[1],vcod_[2]);
  codface[2] 	= (neids[2])? noboundary_cod_[0] :  MAX(vcod_[2],vcod_[0]);
  neids_face[0]=0;neids_face[1]=0;neids_face[2]=0;
  /*---*/
  if (neids[0])
    {	if (neids[0]<0) neids[0]=-neids[0];
      if ( (adj_[(neids[0]-1)*adjoff_[0]+0]==id+1) ) neids_face[0]=0;
      else if ( (adj_[(neids[0]-1)*adjoff_[0]+1]==id+1) ) neids_face[0]=1;
      else if ( (adj_[(neids[0]-1)*adjoff_[0]+2]==id+1) ) neids_face[0]=2; }
  if (neids[1])
    {	if (neids[1]<0) neids[1]=-neids[1];
      if ( (adj_[(neids[1]-1)*adjoff_[0]+0]==id+1) ) neids_face[1]=0;
      else if ( (adj_[(neids[1]-1)*adjoff_[0]+1]==id+1) ) neids_face[1]=1;
      else if ( (adj_[(neids[1]-1)*adjoff_[0]+2]==id+1) ) neids_face[1]=2; }
  if (neids[2])
    {	if (neids[2]<0) neids[2]=-neids[2];
      if ( (adj_[(neids[2]-1)*adjoff_[0]+0]==id+1) ) neids_face[2]=0;
      else if ( (adj_[(neids[2]-1)*adjoff_[0]+1]==id+1) ) neids_face[2]=1;
      else if ( (adj_[(neids[2]-1)*adjoff_[0]+2]==id+1) ) neids_face[2]=2; }
  /*---*/
  cooelm[0]  = coo_[cooff_[0]*(cnc[0]-1)+0];
  cooelm[1]  = coo_[cooff_[0]*(cnc[1]-1)+0];
  cooelm[2]  = coo_[cooff_[0]*(cnc[2]-1)+0];
  cooelm[3]  = coo_[cooff_[0]*(cnc[0]-1)+1];
  cooelm[4]  = coo_[cooff_[0]*(cnc[1]-1)+1];
  cooelm[5]  = coo_[cooff_[0]*(cnc[2]-1)+1];
  jacface[0] = nsSQRT( (cooelm[0]-cooelm[1])*(cooelm[0]-cooelm[1]) + (cooelm[3]-cooelm[4])*(cooelm[3]-cooelm[4]) ); 
  jacface[1] = nsSQRT( (cooelm[1]-cooelm[2])*(cooelm[1]-cooelm[2]) + (cooelm[4]-cooelm[5])*(cooelm[4]-cooelm[5]) ); 
  jacface[2] = nsSQRT( (cooelm[2]-cooelm[0])*(cooelm[2]-cooelm[0]) + (cooelm[5]-cooelm[3])*(cooelm[5]-cooelm[3]) ); 	  
  longueurs[0] = jacface[0];longueurs[1] = jacface[1];longueurs[2] = jacface[2];	  
  nrmelm[0] = cooelm[4] - cooelm[3];nrmelm[1] = cooelm[0] - cooelm[1];					
  x = ((R)1.0)/jacface[0];nrmelm[0] *= x;nrmelm[1] *= x;							  
  nrmelm[2] = cooelm[5] - cooelm[4];nrmelm[3] = cooelm[1] - cooelm[2];
  x = ((R)1.0)/jacface[1];nrmelm[2] *= x;nrmelm[3] *= x;	  
  nrmelm[4] = cooelm[3] - cooelm[5];nrmelm[5] = cooelm[2] - cooelm[0] ;
  x = ((R)1.0)/jacface[2];nrmelm[4] *= x;nrmelm[5] *= x;
  if (longueurs[1]<longueurs[2]) { x = longueurs[1]; longueurs[1] = longueurs[2]; longueurs[2] = x; } 
  if (longueurs[0]<longueurs[1]) { x = longueurs[0]; longueurs[0] = longueurs[1]; longueurs[1] = x; } 
  if (longueurs[1]<longueurs[2]) { x = longueurs[1]; longueurs[1] = longueurs[2]; longueurs[2] = x; } 	  
  jacelm[0]  = nsSQRT((longueurs[0]+longueurs[1]+longueurs[2])*(longueurs[2]-(longueurs[0]-longueurs[1]))*(longueurs[2]+(longueurs[0]-longueurs[1]) )*(longueurs[0]+(longueurs[1]-longueurs[2]) ))/((R)2.0); 	  
  belm[0] = cooelm[5]-cooelm[3];belm[1] = cooelm[0]-cooelm[2];belm[2] = cooelm[3]-cooelm[4];belm[3] = cooelm[1]-cooelm[0];  	  
  x = belm[2];belm[2]=belm[1];belm[1]=x;	  
  jacface[0] *=(R)0.5;jacface[1] *=(R)0.5;jacface[2] *=(R)0.5;	  
  /*____ INFO ELEMENT DONE */ 
  /*____ COPY LOCAL RHS */ 
  {I j;for (j=0;j<test_n[0];++j) lcrhs[j] = rhs_[rhsoff_[0]*id+j];}	
  brhs_a[0] = jacelm[0] * xa_[0];	
  
  /*___________________________________________________________________________________________________________________*/  
  /* 
     eval u : elm and faces
  */  
  /*___________________________________________________________________________________________________________________*/  
  
  { I k;
    for (k=0;k<nu[0];++k)
      {
	weiu[k] = data_u_[cnc_u_[id*cncoff_u_[0]+k]-1];
      } }
  { I k;
    for (k=0;k<nu[0];++k)
      {
	weiv[k] = data_v_[cnc_u_[id*cncoff_u_[0]+k]-1];
      } }
  
  /*____ COMPUTE MAX(-U.N,0) */

  matrix_handle_def(&mat_tmpbrhs_uelm,nu[0],2,tmpbrhs_uelm,tmpbrhs_ufaceoff);
  matrix_handle_def(&mat_belm,2,2,belm,2);
  matrix_handle_def(&mat_brhs_uelm,nu[0],2,brhs_uelm,nu[0]);

  matrix_handle_def(&u_eval,nu[0],N_pts_u,(pR)eval_u_,eval_uoff_);

  vector_handle_def(&u_ldofs,nu[0],weiu,1);
  vector_handle_def(&v_ldofs,nu[0],weiv,1);

  vector_handle_def(&brhs_u,N_pts_u,tmpbrhs_u,1);
  vector_handle_def(&brhs_v, N_pts_u,tmpbrhs_u + tmpbrhs_ufaceoff,1);

  matrix_handle_def(&hbmat,bmat_n,bmat_m,(pR)bmat,bmat_n);
  vector_handle_def(&hbrhs,bmat_m,brhs,n1);
  vector_handle_def(&hlcmat,bmat_n,lcmat,n1);
  matrix_handle_def(&hlcmatr,trial_n[0],teta_n[0], lcmatr, trial_n[0]);
  vector_handle_def(&hlcrhs,trial_n[0],lcrhs,1);
  vector_handle_def(&hsol,teta_n[0],(pR)&sol_[id*soloff_[0]],1);
  matrix_handle_def(&mat_lcmatc,test_n[0],test_n[0],lcmatc,test_n[0]);
  matrix_handle_def(&mat_matflux_corr,trial_n[0],trial_n[0],matflux_corr,trial_n[0]);
  matrix_handle_def(&mat_matflux_residu,trial_n[0],teta_n[0],matflux_residu,trial_n[0]);
  
  matrix_handle_def(&mat_tmpbrhs_uface0,qface_n[0],2,tmpbrhs_uface0,tmpbrhs_ufaceoff);
  matrix_handle_def(&mat_tmpbrhs_uface1,qface_n[0],2,tmpbrhs_uface1,tmpbrhs_ufaceoff);
  matrix_handle_def(&mat_tmpbrhs_uface2,qface_n[0],2,tmpbrhs_uface2,tmpbrhs_ufaceoff);
  
  vector_handle_def(&vec_uface0,qface_n[0],uface0,1);
  vector_handle_def(&vec_uface1,qface_n[0],uface1,1);
  vector_handle_def(&vec_uface2,qface_n[0],uface2,1);
  
  vector_handle_def(&vec_nrmelm0,2,&nrmelm[0],1);
  vector_handle_def(&vec_nrmelm1,2,&nrmelm[2],1);
  vector_handle_def(&vec_nrmelm2,2,&nrmelm[4],1);


  //
  // Evaluate u.
  //
  matrix_handle_gemv(&u_eval,
		     "T",
		     &r1,
		     &u_ldofs,
		     &r0,
		     &brhs_u);
  
  //
  // Evaluate v.
  //
  matrix_handle_gemv(&u_eval,
		     "T",
		     &r1,
		     &v_ldofs,
		     &r0,
		     &brhs_v);
  

  
 /*____ TRANSFORM ON UELM */  
 matrix_handle_gemm(&mat_tmpbrhs_uelm,
		    "N",
		    "T",
		    &mxu,
		    &mat_belm,
		    &r0,
		    &mat_brhs_uelm);

 vec_uface0 = jacface[0] * mat_tmpbrhs_uface0 * vec_nrmelm0;
 vec_uface1 = jacface[1] * mat_tmpbrhs_uface1 * vec_nrmelm1;
 vec_uface2 = jacface[2] * mat_tmpbrhs_uface2 * vec_nrmelm2;

 // matrix_handle_gemv(&mat_tmpbrhs_uface0,"N",&jacface[0],&vec_nrmelm0,&r0,&vec_uface0);
 // matrix_handle_gemv(&mat_tmpbrhs_uface1,"N",&jacface[1],&vec_nrmelm1,&r0,&vec_uface1);
 // matrix_handle_gemv(&mat_tmpbrhs_uface2,"N",&jacface[2],&vec_nrmelm2,&r0,&vec_uface2);
 
 //  Blas_dgemv("N",qface_n,&n2,&jacface[0],tmpbrhs_uface0,&tmpbrhs_ufaceoff,&nrmelm[2*0],&n1,&r0,uface0,&n1);
 { I j;for (j=0;j<qface_n[0];++j) uface0[j] = (uface0[j]<0.0) ? uface0[j]*(-xu_[0]) : (R)0.0;}       
 //  Blas_dgemv("N",qface_n,&n2,&jacface[1],tmpbrhs_uface1,&tmpbrhs_ufaceoff,&nrmelm[2*1],&n1,&r0,uface1,&n1);
 { I j;for (j=0;j<qface_n[0];++j) uface1[j] = (uface1[j]<0.0) ? uface1[j]*(-xu_[0]) : (R)0.0;}	
 //  Blas_dgemv("N",qface_n,&n2,&jacface[2],tmpbrhs_uface2,&tmpbrhs_ufaceoff,&nrmelm[2*2],&n1,&r0,uface2,&n1);
 { I j;for (j=0;j<qface_n[0];++j) uface2[j] = (uface2[j]<0.0) ? uface2[j]*(-xu_[0]) : (R)0.0;}
 
 
 
 /*____ APPLY FLUX ON UPWIND STREAM FOR CORRECTION AND SOLUTION */ 
 for (int localFaceIndex=0;localFaceIndex<3;++localFaceIndex)
   {
     if (neids[localFaceIndex])
       {
	 Blas_dgemv("N",&bmat_n,qface_n,&r1,fpart[localFaceIndex][neids_face[localFaceIndex]],&bmat_n,ufaces[localFaceIndex],&n1,&r0,matflux,&n1);		  		  
	 vector_handle_def(&vec_neicorr,trial_n[0],  &corr_[(neids[localFaceIndex]-1)*corroff_[0]],1);
	 vector_handle_def(&vec_neisol,teta_n[0],(pR)&sol_[(neids[localFaceIndex]-1)*soloff_[0]],1);
	 //	 printf("check1\n");
	 matrix_handle_gemv(&mat_matflux_corr,"N",&r1,&vec_neicorr,&r1,&hlcrhs);
	 //	 printf("check2\n");
	 matrix_handle_gemv(&mat_matflux_residu,"N",&r1,&vec_neisol,&r1,&hlcrhs);
       }
   }
 
#if DG_CONSERVATIVE_WEAK_FORM
 /*____ COMPUTE MAX(U.N,0), APPLY FLUX MATRIX ON DOWNWIND STREAM */ 
 Blas_dgemv("N",qface_n,&n2,&jacface[0],tmpbrhs_uface0,&tmpbrhs_ufaceoff,&nrmelm[2*0],&n1,&r0,uface0,&n1);
 {I j;for (j=0;j<qface_n[0];++j)uface0[j] = (uface0[j]>0.0) ? uface0[j]*(xu_[0]) : (R)0.0;}
 Blas_dgemv("N",qface_n,&n2,&jacface[1],tmpbrhs_uface1,&tmpbrhs_ufaceoff,&nrmelm[2*1],&n1,&r0,uface1,&n1);
 {I j;for (j=0;j<qface_n[0];++j)uface1[j] = (uface1[j]>0.0) ? uface1[j]*(xu_[0]) : (R)0.0;}
 Blas_dgemv("N",qface_n,&n2,&jacface[2],tmpbrhs_uface2,&tmpbrhs_ufaceoff,&nrmelm[2*2],&n1,&r0,uface2,&n1);
 {I j;for (j=0;j<qface_n[0];++j)uface2[j] = (uface2[j]>0.0) ? uface2[j]*(xu_[0]) : (R)0.0;}
#endif
 
 /*--- COMPUTE MATRIX  */
 hlcmat = hbmat * hbrhs;
 
 /*--- COMPUTE LOCAL RESIDUAL  */
 matrix_handle_gemv(&hlcmatr,"N",&mr1,&hsol,&r1,&hlcrhs);
 
 /*--- COMPUTE LOCAL CORRECTION   */
 { I j; for (j=0;j<test_n[0];++j) {lcsol[j] = corr_[corroff_[0]*id+j];}}
 matrix_handle_gesv(&mat_lcmatc,&hlcrhs,lcperm);
 
 /*--- COMPUTE NRMS OF LOCAL CORRECTION */
 { I j;for (j=0;j<test_n[0];++j) corr_[corroff_[0]*id+j]=lcrhs[j];}
 { I j;for (j=0;j<test_n[0];++j) lcrhs[j]-=lcsol[j];}
 { R xx=(R)0.0; {I j;for (j=0;j<test_n[0];++j) xx+=lcrhs[j]*lcrhs[j];}
   xx=nsSQRT(xx);if (mx<xx) mx = xx; }		    
 
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  ++ielm;
  if (ielm<nelm_[0])
    {
      goto  __state_next_elm;
    }  
  else
    {
      goto  __state_next_elm_done;
    }
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
 __state_next_elm_done:
  {
    fprintf(stdout,"*** DGINFO time %.5f iter " ifmt "/" ifmt " tol = %8.15e\n",t_[0],iter_gauss_seidel,nelm_[0],mx);
    if ( (mx>((R)1.0e-12)) AND (iter_gauss_seidel<nelm_[0]) )
      {
	++iter_gauss_seidel;
	goto __state_next_iter_gauss_seidel;
      }
    else
      {	
	goto __state_computation_done;
      }
  }    
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
  /*___________________________________________________________________________________________________________________*/  
 __state_computation_done:
  {    
    ires_[DG_ires_iter_gauss_seidel] 	= iter_gauss_seidel;
    rres_[DG_rres_max] 			= mx;
    if (iter_gauss_seidel<nelm_[0])
      {
	ires_[DG_ires_convergence] = (I)1;
      }
    else
      {
	ires_[DG_ires_convergence] = (I)0;
      }

    rres_[DG_rres_areaL1]	= 0.0; 
    rres_[DG_rres_nrmL2]	= 0.0; 
    rres_[DG_rres_nrmLInf]	= 0.0; 
    rres_[DG_rres_jumpL2]	= 0.0; 
    rres_[DG_rres_johnson]	= 0.0;   
    { I jelm;
      for (jelm=0;jelm<nelm_[0];++jelm)
	{ 
	  /**/
	  neids[0]   = adj_[jelm*adjoff_[0]];neids[1]	= adj_[jelm*adjoff_[0]+1];neids[2]	= adj_[jelm*adjoff_[0]+2];

	  cnc[0]        = cnc_[jelm*cncoff_[0]+0];
	  cnc[1]        = cnc_[jelm*cncoff_[0]+1];
	  cnc[2]        = cnc_[jelm*cncoff_[0]+2];	  
	  cooelm[0]  = coo_[cooff_[0]*(cnc[0]-1)+0];
	  cooelm[1]  = coo_[cooff_[0]*(cnc[1]-1)+0];
	  cooelm[2]  = coo_[cooff_[0]*(cnc[2]-1)+0];
	  cooelm[3]  = coo_[cooff_[0]*(cnc[0]-1)+1];
	  cooelm[4]  = coo_[cooff_[0]*(cnc[1]-1)+1];
	  cooelm[5]  = coo_[cooff_[0]*(cnc[2]-1)+1];
	  jacface[0] = nsSQRT( (cooelm[0]-cooelm[1])*(cooelm[0]-cooelm[1]) + (cooelm[3]-cooelm[4])*(cooelm[3]-cooelm[4]) ); 
	  jacface[1] = nsSQRT( (cooelm[1]-cooelm[2])*(cooelm[1]-cooelm[2]) + (cooelm[4]-cooelm[5])*(cooelm[4]-cooelm[5]) ); 
	  jacface[2] = nsSQRT( (cooelm[2]-cooelm[0])*(cooelm[2]-cooelm[0]) + (cooelm[5]-cooelm[3])*(cooelm[5]-cooelm[3]) ); 	  
	  longueurs[0] = jacface[0];longueurs[1] = jacface[1];longueurs[2] = jacface[2];	  
	  nrmelm[0] = cooelm[4] - cooelm[3];nrmelm[1] = cooelm[0] - cooelm[1];					
	  x = ((R)1.0)/jacface[0];nrmelm[0] *= x;nrmelm[1] *= x;							  
	  nrmelm[2] = cooelm[5] - cooelm[4];nrmelm[3] = cooelm[1] - cooelm[2];
	  x = ((R)1.0)/jacface[1];nrmelm[2] *= x;nrmelm[3] *= x;	  
	  nrmelm[4] = cooelm[3] - cooelm[5];nrmelm[5] = cooelm[2] - cooelm[0] ;
	  x = ((R)1.0)/jacface[2];nrmelm[4] *= x;nrmelm[5] *= x;
	  if (longueurs[1]<longueurs[2]) { x = longueurs[1]; longueurs[1] = longueurs[2]; longueurs[2] = x; } 
	  if (longueurs[0]<longueurs[1]) { x = longueurs[0]; longueurs[0] = longueurs[1]; longueurs[1] = x; } 
	  if (longueurs[1]<longueurs[2]) { x = longueurs[1]; longueurs[1] = longueurs[2]; longueurs[2] = x; } 	  
	  jacelm[0]  = nsSQRT((longueurs[0]+longueurs[1]+longueurs[2])*(longueurs[2]-(longueurs[0]-longueurs[1]))*(longueurs[2]+(longueurs[0]-longueurs[1]) )*(longueurs[0]+(longueurs[1]-longueurs[2]) ))/((R)2.0); 	  
	  belm[0] = cooelm[5]-cooelm[3];belm[1] = cooelm[0]-cooelm[2];belm[2] = cooelm[3]-cooelm[4];belm[3] = cooelm[1]-cooelm[0];  	  
	  x = belm[2];belm[2]=belm[1];belm[1]=x;	  
	  jacface[0] *=(R)0.5;jacface[1] *=(R)0.5;jacface[2] *=(R)0.5;	  
	  /**/	  
	  Blas_dgemv("N",trial_n,trial_n,jacelm,bmat,trial_n,&corr_[jelm*corroff_[0]],&n1,&r0,lcrhs,&n1);

	  rres_[DG_rres_nrmL2]+=Blas_ddot(trial_n,lcrhs,&n1,&corr_[corroff_[0]*jelm],&n1);

	  { I j;
	    for (j=0;j<trial_n[0];++j)
	      {
		rres_[DG_rres_areaL1] += lcrhs[j];
		if (rres_[DG_rres_nrmLInf]<nsFABS(corr_[corroff_[0]*jelm+j]))
		  {
		    rres_[DG_rres_nrmLInf]=nsFABS(corr_[corroff_[0]*jelm+j]);
		  }
	      } }

	  { I k;
	    for (k=0;k<nu[0];++k)
	      {
		weiu[k] = data_u_[cnc_u_[jelm*cncoff_u_[0]+k]-1];
	      } }
	  { I k;
	    for (k=0;k<nu[0];++k)
	      {
		weiv[k] = data_v_[cnc_u_[jelm*cncoff_u_[0]+k]-1];
	      } }
	  
	  /* u au points de gauss de l element */
	  Blas_dgemv("T",nu,&q_nx3,&r1,&eval_u_[eval_uoff_*(iinfo_[DG::IA_lc_face]-1)],&eval_uoff_,weiu,&n1,&r0,tmpbrhs_ufaces,&n1);
	  Blas_dgemv("T",nu,&q_nx3,&r1,&eval_u_[eval_uoff_*(iinfo_[DG::IA_lc_face]-1)],&eval_uoff_,weiv,&n1,&r0,&tmpbrhs_ufaces[tmpbrhs_ufaceoff],&n1);
	  
	  /* u.n sur les faces */
	  Blas_dgemv("N",qface_n,&n2,&jacface[0],tmpbrhs_uface0,&tmpbrhs_ufaceoff,&nrmelm[2*0],&n1,&r0,uface0,&n1);
	  Blas_dgemv("N",qface_n,&n2,&jacface[1],tmpbrhs_uface1,&tmpbrhs_ufaceoff,&nrmelm[2*1],&n1,&r0,uface1,&n1);
	  Blas_dgemv("N",qface_n,&n2,&jacface[2],tmpbrhs_uface2,&tmpbrhs_ufaceoff,&nrmelm[2*2],&n1,&r0,uface2,&n1);	
	  
	  /* mise en a zero */
	  { I j;for (j=0;j<qface_n[0];++j) uface0[j] = (uface0[j]<0.0) ? uface0[j]*(-xu_[0]) : (R)0.0;}       
	  { I j;for (j=0;j<qface_n[0];++j) uface1[j] = (uface1[j]<0.0) ? uface1[j]*(-xu_[0]) : (R)0.0;}	
	  { I j;for (j=0;j<qface_n[0];++j) uface2[j] = (uface2[j]<0.0) ? uface2[j]*(-xu_[0]) : (R)0.0;}
	  	  
	  { I k;
	    for (k=0;k<3;++k)
	      {
		if ( neids[k] )
		  { 
		    /* 
		       on forme la matrice de flux pour l'arete
		    */
		    Blas_dgemv("N",&bmat_n,qface_n,&r1,fpart[k][neids_face[k]],&bmat_n,(k==2)?uface2:((k==1)?uface1:uface0),&n1,&r0,matflux,&n1); 
		    /* 
		       on calcule le produit scalaire
		    */
		    Blas_dgemv("N",trial_n,trial_n,&jacface[k],matflux_corr,trial_n,&corr_[(neids[k]-1)*corroff_[0]],&n1,&r1,lcrhs,&n1);	   
		    rres_[DG_rres_jumpL2]+=Blas_ddot(trial_n,lcrhs,&n1,&corr_[corroff_[0]*jelm],&n1);/* saut */	
		  } 
	      } }
	  
	} }

    printf("compute nrms\n"
	   "   areaL1  : %e\n"
	   "   nrmL2   : %e\n"
	   "   nrmLInf : %e\n"
	   "   jumpL2  : %e\n"
	   "   jhonson : %e\n",
	   rres_[DG_rres_areaL1],
	   rres_[DG_rres_nrmL2],
	   rres_[DG_rres_nrmLInf],
	   rres_[DG_rres_jumpL2],
	   rres_[DG_rres_johnson]);
    
    return;
  }  
  /*_________________________________________________________________________________________________________________*/    
 __state_error:
  {
    printf("out\n");
    ires_[DG_ires_err] = (I)1;
    return;
  }
}





#if 1
void dgadvection_local_system(cst_pR 	xa_,
			      cst_pR 	xu_,
			      struct matrix_handle *    matelm,
			      struct vector_handle *    cooelm,
			      struct vector_handle *    rhselm,
			      struct vector_handle *    aelm,
			      struct vector_handle *    uelm,
			      struct vector_handle *    velm,
			      struct vector_handle *    solelm,
			      struct vector_handle *    neisolelm[],
			      struct vector_handle *    correlm,
			      struct vector_handle *    neicorrelm[],
			      struct matrix_handle *    u_eval,
			      struct matrix_handle *    belm,
			      struct matrix_handle *    nrmelm,
			      I 			neids[],
			      I 			neids_face[],
			      cst_pI 			rwork_n_,
			      pR 			rwork_,			      
			      cst_pR 			rinfo_,
			      const I   		iinfo_[DG::I_n])
{    
  const I bmat_n 		= iinfo_[DG::I_bmat_n];
  const I bmat_m 		= iinfo_[DG::I_bmat_m];  
  cst_pI	nu      	= &iinfo_[DG::I_TETA_U_NBASIS];
  I N_pts_u2 			= bmat_m-1;/*nTot-nA*/

  
  cst_pI	trial_n = &iinfo_[DG::I_TRIAL_NBASIS];
  cst_pI	test_n  = &iinfo_[DG::I_TEST_NBASIS];
  cst_pI	teta_n  = &iinfo_[DG::I_TETA_NBASIS];
  cst_pI	qface_n = &iinfo_[DG::I_QFACE_N];
  cst_pR bmat 	 		= &rinfo_[iinfo_[DG::RA_bmat]];
  cst_pR bmatflux 		= &rinfo_[iinfo_[DG::RA_bmatx]];
  
  cst_pR fpart[3][3];
  { I i,j;
    for (i=0;i<3;++i)
      for (j=0;j<3;++j)
	fpart[i][j] = &bmatflux[bmat_n*( (i*3+j)*qface_n[0]  ) ];
  }


  struct matrix_handle mat_tmpbrhs_uface0;
  struct matrix_handle mat_tmpbrhs_uface1;
  struct matrix_handle mat_tmpbrhs_uface2;
  struct matrix_handle mat_matflux_corr;
  struct matrix_handle mat_matflux_residu;
  struct matrix_handle hbmat;
 
  struct vector_handle vec_uface0;
  struct vector_handle vec_uface1;
  struct vector_handle vec_uface2;
  struct vector_handle vec_nrmelm0;
  struct vector_handle vec_nrmelm1;
  struct vector_handle vec_nrmelm2;
  struct vector_handle hbrhs;
  struct vector_handle hsol;
  
  struct matrix_handle mat_tmpbrhs_uelm;
  struct matrix_handle mat_brhs_uelm;
  R
    jacface[3*1];

  R 	matflux[21*(21+21)];/*trial_n*(trial_n+teta_n)*/
  pR	matflux_corr 	= &matflux[0];
  pR	matflux_residu 	= &matflux[trial_n[0]*trial_n[0]];
  
  I n1 = 1;
  R r1 = 1.0;
  R mr1 = -1.0;
  R r0 = 0.0;
#if DG_CONSERVATIVE_WEAK_FORM
  const R mxu=xu_[0]*((R)-1.0);
#else
  const R mxu=xu_[0]*((R)1.0);
#endif
  pR ufaces[3] = {nullptr,nullptr,nullptr};

  /*---*/

  const I tmpbrhs_ufaceoff 	= bmat_m;
  
  pR brhs      	= &rwork_[0];
  pR brhs_uelm 	= &rwork_[1];
  ufaces[0] 	= &rwork_[iinfo_[DG::IA_lc_face]];
  ufaces[1] 	= &rwork_[iinfo_[DG::IA_lc_face]+qface_n[0]];
  ufaces[2] 	= &rwork_[iinfo_[DG::IA_lc_face]+2*qface_n[0]];

  
  pR tmpbrhs        	= &rwork_[bmat_m]; 
  pR tmpbrhs_uface0 	= &tmpbrhs[1+2*nu[0]]; 
  pR tmpbrhs_uface1 	= &tmpbrhs[1+2*nu[0]+qface_n[0]];
  pR tmpbrhs_uface2 	= &tmpbrhs[1+2*nu[0]+2*qface_n[0]];
  pR tmpbrhs_uelm   	= &tmpbrhs[1]; 
  pR tmpbrhs_u 		= tmpbrhs_uelm;

  
  matrix_handle_def(&mat_tmpbrhs_uelm,nu[0],2,tmpbrhs_uelm,tmpbrhs_ufaceoff);
  matrix_handle_def(&mat_brhs_uelm,nu[0],2,brhs_uelm,nu[0]);  
  matrix_handle_def(&hbmat,bmat_n,bmat_m,(pR)bmat,bmat_n);
  vector_handle_def(&hbrhs,bmat_m,brhs,n1);


  struct vector_handle built_matrices;
  struct matrix_handle built_matrix_residu;

  struct matrix_handle mat_lcmatc;  
  R 	        lcmat[21*21*2];
  R 	        lcrhs[21*2];
  pR 		lcmatc = &lcmat[0];
  pR 		lcmatr = &lcmat[trial_n[0]*trial_n[0]];

  vector_handle_def(&built_matrices,bmat_n,lcmat,n1);
  matrix_handle_def(&built_matrix_residu,trial_n[0],teta_n[0], lcmatr, trial_n[0]);
  
  //  matrix_handle_def(&mat_lcmatc,test_n[0],test_n[0],lcmatc,test_n[0]);

  
  //  vector_handle_def(&hlcrhs,trial_n[0],lcrhs,1);
  //  vector_handle_def(&hsol,teta_n[0],(pR)&sol_[id*soloff_[0]],1);
  matrix_handle_def(&mat_matflux_corr,trial_n[0],trial_n[0],matflux_corr,trial_n[0]);
  matrix_handle_def(&mat_matflux_residu,trial_n[0],teta_n[0],matflux_residu,trial_n[0]);

  
  matrix_handle_def(&mat_tmpbrhs_uface0,qface_n[0],2,tmpbrhs_uface0,tmpbrhs_ufaceoff);
  matrix_handle_def(&mat_tmpbrhs_uface1,qface_n[0],2,tmpbrhs_uface1,tmpbrhs_ufaceoff);
  matrix_handle_def(&mat_tmpbrhs_uface2,qface_n[0],2,tmpbrhs_uface2,tmpbrhs_ufaceoff);
  
  vector_handle_def(&vec_uface0,qface_n[0],ufaces[0],1);
  vector_handle_def(&vec_uface1,qface_n[0],ufaces[1],1);
  vector_handle_def(&vec_uface2,qface_n[0],ufaces[2],1);
  
  vector_handle_def(&vec_nrmelm0,2,nrmelm->x,1);
  vector_handle_def(&vec_nrmelm1,2,nrmelm->x+nrmelm->ld,1);
  vector_handle_def(&vec_nrmelm2,2,nrmelm->x+2*nrmelm->ld,1);
  
  struct vector_handle brhs_u;
  struct vector_handle brhs_v;

  vector_handle_def(&brhs_u,N_pts_u2,tmpbrhs_u,1);
  vector_handle_def(&brhs_v, N_pts_u2,tmpbrhs_u + tmpbrhs_ufaceoff,1);

  //
  // Evaluate u (only needed if non-nodal).
  //
  matrix_handle_gemv(u_eval,
		     "T",
		     &r1,
		     uelm,
		     &r0,
		     &brhs_u);  

  //
  // Evaluate u (only needed if non-nodal).
  //
  matrix_handle_gemv(u_eval,
		     "T",
		     &r1,
		     velm,
		     &r0,
		     &brhs_v);

  //
  // TRANSFORM ON UELM
  //
  matrix_handle_gemm(&mat_tmpbrhs_uelm,
		     "N",
		     "T",
		     &mxu,
		     belm,
		     &r0,
		     &mat_brhs_uelm);

  
  matrix_handle_gemv(&mat_tmpbrhs_uface0,"N",&jacface[0],&vec_nrmelm0,&r0,&vec_uface0);
  matrix_handle_gemv(&mat_tmpbrhs_uface1,"N",&jacface[1],&vec_nrmelm1,&r0,&vec_uface1);
  matrix_handle_gemv(&mat_tmpbrhs_uface2,"N",&jacface[2],&vec_nrmelm2,&r0,&vec_uface2);
  
  //
  // Apply min mod.
  //
  for (I k=0;k<3;++k)
    {
      pR uface = ufaces[k];
      for (I j=0;j<qface_n[0];++j)
	{
	  uface[j] = (uface[j]<0.0) ? uface[j]*(-xu_[0]) : (R)0.0;
	}
    }

 /*____ APPLY FLUX ON UPWIND STREAM FOR CORRECTION AND SOLUTION */ 
 for (int localFaceIndex=0;localFaceIndex<3;++localFaceIndex)
   {
     if (neids[localFaceIndex])
       {	 
	 Blas_dgemv("N",&bmat_n,qface_n,&r1,fpart[localFaceIndex][neids_face[localFaceIndex]],&bmat_n,ufaces[localFaceIndex],&n1,&r0,matflux,&n1);		  		  
	 //
	 // Compute the flux matrix for the correction.
	 //
	 matrix_handle_gemv(&mat_matflux_corr,"N",&r1,neicorrelm[localFaceIndex],&r1,rhselm);
	 //
	 // Compute the flux matrix for the residu.
	 //
	 matrix_handle_gemv(&mat_matflux_residu,"N",&r1,neisolelm[localFaceIndex],&r1,rhselm);
       }
   }

#if 0
#if DG_CONSERVATIVE_WEAK_FORM
 /*____ COMPUTE MAX(U.N,0), APPLY FLUX MATRIX ON DOWNWIND STREAM */ 
 Blas_dgemv("N",qface_n,&n2,&jacface[0],tmpbrhs_uface0,&tmpbrhs_ufaceoff,&nrmelm[2*0],&n1,&r0,uface0,&n1);
 {I j;for (j=0;j<qface_n[0];++j)uface0[j] = (uface0[j]>0.0) ? uface0[j]*(xu_[0]) : (R)0.0;}
 Blas_dgemv("N",qface_n,&n2,&jacface[1],tmpbrhs_uface1,&tmpbrhs_ufaceoff,&nrmelm[2*1],&n1,&r0,uface1,&n1);
 {I j;for (j=0;j<qface_n[0];++j)uface1[j] = (uface1[j]>0.0) ? uface1[j]*(xu_[0]) : (R)0.0;}
 Blas_dgemv("N",qface_n,&n2,&jacface[2],tmpbrhs_uface2,&tmpbrhs_ufaceoff,&nrmelm[2*2],&n1,&r0,uface2,&n1);
 {I j;for (j=0;j<qface_n[0];++j)uface2[j] = (uface2[j]>0.0) ? uface2[j]*(xu_[0]) : (R)0.0;}
#endif
#endif

 matrix_handle_gemv(&hbmat,"N",&r1,&hbrhs,&r0,&built_matrices);  
 matrix_handle_gemv(&built_matrix_residu,"N",&mr1,&hsol,&r1,rhselm);

 //
 // copy
 //
  
}

#endif

int main(int 		argc,
	 const char**	argv)
{

  
  //
  // Set up the monitor
  //
  Monitor_def(0,
	      argv[0],
	      MonitorMode_STD);
  
  mesh = (ns_mesh*)calloc(1,sizeof(ns_mesh));
  STR errmsg;
  Err err;
  ns_mesh_read(mesh,
	       errmsg,
	       &err,
	       argv[1]);



#if 0
  ns_mesh_write_medit(mesh,
		      out);
#endif
  
  
  {
    I 		dg_iinfo[DG::I_n];
    R		dg_rres	[DG_rres_n];
    I		dg_ires	[DG_ires_n];
    I 		dg_rinfo_n;
    I 		dg_iinfo_n = DG::I_n;
    pR		dg_rinfo;
    I 		dg_rwork_n;
    pR		dg_rwork;
    I 		dg_iwork_n;
    pI		dg_iwork;
    
    dg_iinfo[DG::I_QELM_N]	= 10;
    dg_iinfo[DG::I_QFACE_N]  	= 10;  
    dg_rinfo_n			= (I)640000;
    dg_rinfo 			= (pR)malloc(sizeof(R)*dg_rinfo_n);
    dg_rwork_n			= (I)1280000;
    dg_rwork 			= (pR)malloc(sizeof(R)*dg_rwork_n);
    dg_iwork_n			= (I)1280000;
    dg_iwork 			= (pI)malloc(sizeof(I)*dg_iwork_n);

    mkS_st shape_A;
    mkS_st shape_F;
    mkS_st shape_U;
    Err err;
    mkS_definit	(&shape_A,
		 __eTopology_TRIANGLE,
		 __emkS_FAMILY_lagrange,
		 0,
		 __emk_discontinuous,
		 &err);
    
    mkS_definit	(&shape_F,
		 __eTopology_TRIANGLE,
		 __emkS_FAMILY_lagrange,
		 1,
		 __emk_discontinuous,
		 &err);
    
    mkS_definit	(&shape_U,
		 __eTopology_TRIANGLE,
		 __emkS_FAMILY_lagrange,
		 1,
		 __emk_discontinuous,
		 &err);		    

    dgadvection(&shape_A,
		&shape_U,
		&shape_F,
		&shape_F,
		&shape_F,
		&dg_iinfo_n,
		dg_iinfo,
		&dg_rinfo_n,
		dg_rinfo,
		&dg_rwork_n,
		dg_rwork); 
    
    const I nelm 	= ns_mesh_nelm(mesh);
    const I numNodes 	= ns_mesh_get_numNodes(mesh);
    const I fn = mkS_n(&shape_F);
    const I len = fn * nelm;
    double * sol	= (double*)calloc(len,sizeof(R)); 
    double * rhs 	= (double*)calloc(len,sizeof(R)); 
    double * corr 	= (double*)calloc(len,sizeof(R)); 

    double * u 		= (double*)calloc(numNodes,sizeof(R)); 
    double * v 		= (double*)calloc(numNodes,sizeof(R)); 
    for (int i=0;i<numNodes;++i)
      {
	u[i] = 1.0;
      }
    
    const I rhsoff 	= fn;
    const I soloff 	= fn;
    const I corroff 	= fn;
    
    const double xu 		= 1.0;
    const double t 		= 1.0;
    const I noboundary_cod  	= 100;

    const I  cooff = 2;
    const I cncoff = 6;
    const I adjoff = 3;

    cst_pI cnc_u = mesh->cnc;
    const I cncoff_u = 6;
    //    exit(1);

    for (I jelm=0;jelm<mesh->nelm;++jelm)
      {
	for (int jadj=0;jadj<3;++jadj)
	  {
	    if (mesh->adj[jelm*3+jadj] == 0)
	      {
		I cncelm[6];
		ns_mesh_get_cellToNodes(mesh,&jelm,cncelm);
		const double * p0 = &mesh->coo[cncelm[0]*2+0];
		const double * p1 = &mesh->coo[cncelm[1]*2+0];
		const double * p2 = &mesh->coo[cncelm[2]*2+0];
		const double * p[3] = {p0,p1,p2};
		const I jedge   = mesh->cnc[6*jelm+3+jadj]-mesh->m_numEntities[0]-1;  
		const R nx	= mesh->normaledge[2*jedge+0];
		const R ny 	= mesh->normaledge[2*jedge+1];
		const R xa      = mesh->jacedge[jedge];	    
	       		
		//	{I j;for (j=0;j<3;++j){ fprintf(fil,"" rfmt " " rfmt " " ifmt "\n",s_->coo[cncelm[j]*2+0],s_->coo[cncelm[j]*2+1],s_->cod[cncelm[j]]); } }
		// sol[jelm*3+jadj] = 1.0;
		// sol[jelm*3+(jadj+1)%3] = 1.0;
		//
		//
		if (nx * 1 + ny * 0.0<0.0)
		  {
		double iw[6];
		double ip[6];
		iw[0] = 1.713244923791704e-1;
		iw[1] = 3.607615730481386e-1;
		iw[2] = 4.679139345726911e-1;
		iw[3] = 4.679139345726911e-1;
		iw[4] = 3.607615730481386e-1;
		iw[5] = 1.713244923791704e-1;
		
		ip[0] = -9.32469514203152e-1 * 0.5 + 0.5;
		ip[1] = -6.612093864662645e-1 * 0.5 + 0.5;
		ip[2] = -2.386191860831969e-1 * 0.5 + 0.5;
		ip[3] = 2.386191860831969e-1 * 0.5 + 0.5;
		ip[4] = 6.612093864662645e-1 * 0.5 + 0.5;
		ip[5] = 9.32469514203152e-1 * 0.5 + 0.5;
		
		double v0 = 0.0,v1=0.0,v2 = 0.0;
		for (int iq=0;iq<6;++iq)
		  {
		double r,s;
		if (jadj==0)
		  {
		r = ip[iq];
		s = 0.0;
	      }
		else if (jadj==1)
		  {
		r = 1.0 - ip[iq];
		s = ip[iq];

	      }
		else if (jadj==2)
		  {
		r = 0.0;
		s = 1.0 - ip[iq];
	      }
		double x = (1.0-r-s) * p[0][0] + r * p[1][0]+ s * p[2][0];
		double y = (1.0-r-s) * p[0][1] + r * p[1][1]+ s * p[2][1];
		double psi0 = 1.0-r-s;
		double psi1 = r;
		double psi2 = s;
		//		std::cout << "x= " << x << std::endl;
		if ( (x < 0.0 ? -x : x)>0.0000001)
		  {
		exit(1);
	      }
		//		std::cout << "y= " << y << std::endl;
		v0 += psi0 * sin(12.0*y) * iw[iq];
		v1 += psi1 * sin(12.0*y)* iw[iq];
		v2 += psi2 * sin(12.0*y)* iw[iq];
	      }
		    v0 *= xa;
		    v1 *= xa;
		    v2 *= xa;
		    rhs[3*jelm+0] += v0;
		    rhs[3*jelm+1] += v1;
		    rhs[3*jelm+2] += v2;
		  }
#if 0
		
		    printf("elm %d adj %d\n",jelm,jadj);
		const R xa      = mesh->jacedge[jedge];	    
		I qface_n = 10;
		
		const I bmat_n 		= dg_iinfo[DG::I_bmat_n];
		const I bmat_m 		= dg_iinfo[DG::I_bmat_m];  
		// cst_pR eval_u_ 		= &dg_rinfo[dg_iinfo[DG::RA_EVAL_TETA_U]];
		// const I eval_uoff_      = dg_iinfo[DG::I_TETA_U_NBASIS];
		cst_pR bmat 	 	= &dg_rinfo[dg_iinfo[DG::RA_bmat]];
		cst_pR bmatflux 	= &dg_rinfo[dg_iinfo[DG::RA_bmatx]];
  
#if 0
		cst_pR fpart[3][3];
		for (I i=0;i<3;++i)
		  for (I j=0;j<3;++j)
		    fpart[i][j] = &bmatflux[bmat_n*( (i*3+j)*qface_n  ) ];
#endif
		I n1  = 1;
		R r0  = 0.0;
		R r1  = 1.0;
		R matflux[128];
		I n3 = 3;
		//
		// Calculate 
		//
		R lcrhs[32];
		R uface[10] = {1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0};
		R ones[10] = {1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0};
		for (int i=0;i<10;++i)
		  {
		    uface[i] = -1.0;
		  }
		
#if 1
		Blas_dgemv("N",&bmat_n,&qface_n,&xa,&bmat_x[(3+2*3)*bmat_n + jadj * bmat_n * 10],&bmat_n,uface,&n1,&r0,matflux,&n1);
		Blas_dgemv("N",&n3,&n3,&r1,matflux,&n3,ones,&n1,&r0,lcrhs,&n1); 
#endif
		
		printf("    %e\n",lcrhs[0]);
		printf("    %e\n",lcrhs[1]);
		printf("    %e\n",lcrhs[2]);
		for (int i=0;i<3;++i)
		  {
		    rhs[3*jelm+i] -= lcrhs[i];
		  }

		
#if 0		
		{
		  I qface_n 	= dg_iinfo[DG::I_QFACE_N];
		  pR lc 	= &dg_rinfo[dg_iinfo[DG::IA_lc]];
		  pR lc_face 	= &lc[dg_iinfo[DG::IA_lc_face]];
		  std::cout << qface_n << std::endl;
		  for (int i=0;i<qface_n;++i)
		    {
		      std::cout << lc_face[i] << " " << lc_face[i+qface_n] << std::endl;		      
		    }
		  exit(1);
		}
#endif		
		//
		// Global coordinates of the quadrature points over the edge.
		//
		
		//
		// Evaluation of the boundary condition.
		//
	    
		//
		// Assembly with the rhs.
		//
		
	      }
#if 0
	    
	    //	    const I N 		= dg_op[0].iinfo[DG::I_QFACE_N];
	    //
	    // Interpolate u.n on the boundary.
	    //
	    double un[16];
	    I lcnc[3];
	    lcnc[0] = mesh->cnc[6*jelm + jadj];
	    lcnc[1] = mesh->cnc[6*jelm + (jadj+1)%3];
	    lcnc[2] = mesh->cnc[6*jelm + 3 + jadj];
	    
	    R rwork[128];
	    
	    //
	    // Get the velocity value
	    //	    
	    { I i;
	      for (i=0;i<3;++i)
		{
		  un[i] = nx*uvw_[lcnc[i]]+ny*uvw_[lcnc[i]];		  
		  un[i] = -MIN(0.0,un[i]);
		  //  un[i] *= f[i];	
		} }
	    
	    I n3=3;
	    //	    nsblas_dgemv(transN,&ndg,&n3,&xa,H[jadj],&ndg,un,&negal1,&regal1,&rhs_[jelm*ndg],&negal1);
	    //	    nsblas_dgemv(transN,&ndg,&N,&xa,&dg_op[0].boundary_basis[jadj*ndg*N],&ndg,rwork,&negal1,&regal1,&rhs_[jelm*ndg],&negal1);
#endif
#endif
	      }
	  }
      }
  
    
  dg_print_mesh(mesh,
		"dg");
    
    dg_print_sol(fn * nelm,
		 rhs,
		 "dg");
    
    double xa = 0.0;
    dgadvection_solve(&xa,&xu,
		      rhs,
		      &rhsoff,
		      
		      cnc_u,
		      &cncoff_u,
		      u,
		      v,
		      
		      sol,
		      &soloff,
		      
		      corr,
		      &corroff,
		      
		      &t,
		      
		      &nelm,
		      mesh->coo,
		      &cooff,
		      mesh->cnc,
		      &cncoff,
		      mesh->adj,
		      &adjoff,
		      mesh->cod,
		      &noboundary_cod,
		      

		      &dg_rwork_n,
		      dg_rwork,
		      &dg_iwork_n,
		      dg_iwork,
		      dg_rinfo,
		      dg_iinfo,
		      &dg_rres[0],
		      &dg_ires[0]);
  
  dg_print_mesh(mesh,
		"dgres");
  dg_print_sol(fn * nelm,
	       corr,
	       "dgres");
  }


  
  return 0;
}
